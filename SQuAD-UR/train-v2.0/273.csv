,data_num,paragraph_num,id,title,context,question,is_impossible,review
0,273,0,5727b28f2ca10214002d942e,یونیکوڈ,یونیکوڈ دنیا کے بیشتر تحریری نظاموں میں اظہار کردہ متن کی مستقل انکوڈنگ ، نمائندگی اور ہینڈلنگ کے لئے کمپیوٹنگ انڈسٹری کا ایک معیار ہے۔ یونیورسل کوڈڈ کریکٹر سیٹ (یو سی ایس) کے معیار کے ساتھ مل کر تیار کیا گیا ہے اور ••دی یونیکوڈ اسٹینڈرڈ•• کے طور پر شائع ہوا ہے۔ یونیکوڈ کا تازہ ترین ورژن 120،000 سے زیادہ حروف کا ایک ذخیرہ ہے جس میں 129 جدید اور تاریخی اسکرپٹس کے ساتھ ساتھ متعدد علامتوں کے سیٹ بھی شامل ہیں۔ یہ معیار بصری حوالہ کے لئے کوڈ چارٹ کا ایک سیٹ ، انکوڈنگ کا طریقہ اور معیاری کردار انکوڈنگ کا ایک سیٹ ، حوالہ ڈیٹا فائلوں کا ایک سیٹ ، اور متعدد متعلقہ اشیاء پر مشتمل ہے۔ جیسے کردار کی خصوصیات ، معمول سازی ، تحلیل ، تصادم ، رینڈرنگ ، اور دو طرفہ ڈسپلے آرڈر (متن کی صحیح نمائش کے لئے جس میں دائیں سے بائیں ، جیسے عبرانی اور عربی ، اور بائیں سے دائیں سے دائیں اسکرپٹ شامل ہیں۔ جون 2015 کے طور پر [اپ ڈیٹ] ، تازہ ترین ورژن 8.0.,یونیکوڈ کو کس نام سے شائع کیا گیا تھا؟,False,False
1,273,0,5727b28f2ca10214002d942f,یونیکوڈ,یونیکوڈ دنیا کے زیادہ تر تحریری نظاموں میں اظہار کردہ متن کی مستقل انکوڈنگ ، نمائندگی اور ہینڈلنگ کے لئے کمپیوٹنگ انڈسٹری کا ایک معیار ہے۔ ••یونیورسل کوڈڈ کریکٹر سیٹ (یو سی ایس) •• معیار کے ساتھ مل کر تیار کیا گیا ہے اور یونیکوڈ اسٹینڈرڈ کے طور پر شائع کیا گیا ہے ، یونیکوڈ کا تازہ ترین ورژن 129 جدید اور تاریخی اسکرپٹس کے ساتھ ساتھ متعدد علامتوں کے سیٹ پر مشتمل 120،000 سے زیادہ حروف کا ایک مجموعہ پر مشتمل ہے۔ یہ معیار بصری حوالہ کے لئے کوڈ چارٹ کا ایک سیٹ ، انکوڈنگ کا طریقہ اور معیاری کردار انکوڈنگ کا ایک سیٹ ، حوالہ ڈیٹا فائلوں کا ایک سیٹ ، اور متعدد متعلقہ اشیاء پر مشتمل ہے ، جیسے کردار کی خصوصیات ، معمول سازی ، تحلیل ، تصادم ، رینڈرنگ ، اور دو طرفہ ڈسپلے آرڈر (متن کی صحیح ڈسپلے کے لئے جس میں دائیں سے بائیں ، جیسے عبرانی اور عربی ، اور بائیں سے دائیں سے دائیں اسکرپٹ شامل ہیں۔ جون 2015 تک [اپ ڈیٹ] ، تازہ ترین ورژن 8.0.,یونیکوڈ کو کس چیز کے ساتھ مل کر تیار کیا گیا تھا؟,False,False
2,273,0,5727b28f2ca10214002d9430,یونیکوڈ,یونیکوڈ دنیا کے بیشتر تحریری نظاموں میں اظہار کردہ متن کی مستقل انکوڈنگ ، نمائندگی اور ہینڈلنگ کے لئے کمپیوٹنگ انڈسٹری کا ایک معیار ہے۔ یونیورسل کوڈڈ کریکٹر سیٹ (یو سی ایس) معیار کے ساتھ مل کر تیار کیا گیا ہے اور یونیکوڈ اسٹینڈرڈ کے طور پر شائع کیا گیا ہے ، یونیکوڈ کا تازہ ترین ورژن 120،000 سے زیادہ حروف پر مشتمل ہے جس میں 129 جدید اور تاریخی اسکرپٹس کے ساتھ ساتھ متعدد علامتوں کے سیٹ بھی شامل ہیں۔ یہ معیار بصری حوالہ کے لئے کوڈ چارٹ کا ایک سیٹ ، انکوڈنگ کا طریقہ اور معیاری کردار انکوڈنگ کا ایک سیٹ ، حوالہ ڈیٹا فائلوں کا ایک سیٹ ، اور متعدد متعلقہ اشیاء پر مشتمل ہے ، جیسے کردار کی خصوصیات ، معمول سازی ، تحلیل ، تصادم ، رینڈرنگ ، اور دو طرفہ ترتیب (متن کی صحیح نمائش کے لئے جس میں دائیں سے بائیں اسکرپٹ ، جیسے عربی اور عبرانی ، اور بائیں سے دائیں سے دائیں اسکرپٹ شامل ہیں۔) جون 2015 کے طور پر ، تازہ ترین ورژن ••یونیکوڈ اسٹینڈرڈ 8.0 یونیکوڈ کنسورشیم کے ذریعہ برقرار رکھا گیا ہے۔••,یونیکوڈ کا تازہ ترین ورژن کیا ہے؟,False,False
3,273,0,5727b28f2ca10214002d9431,یونیکوڈ,یونیکوڈ دنیا کے بیشتر تحریری نظاموں میں اظہار کردہ متن کی مستقل انکوڈنگ ، نمائندگی اور ہینڈلنگ کے لئے کمپیوٹنگ انڈسٹری کا ایک معیار ہے۔ یونیورسل کوڈڈ کریکٹر سیٹ (یو سی ایس) کے معیار کے ساتھ مل کر تیار کیا گیا ہے اور یونیکوڈ اسٹینڈرڈ کے طور پر شائع ہوا ہے ، یونیکوڈ کا تازہ ترین ورژن 120،000 سے زیادہ حروف کا ایک مجموعہ ہے جس میں 129 جدید اور تاریخی اسکرپٹس کے ساتھ ساتھ متعدد علامتوں کے سیٹ بھی شامل ہیں۔ یہ معیار بصری حوالہ کے لئے کوڈ چارٹ کا ایک سیٹ ، انکوڈنگ کا طریقہ اور معیاری کردار انکوڈنگ کا ایک سیٹ ، حوالہ ڈیٹا فائلوں کا ایک سیٹ ، اور متعدد متعلقہ اشیاء پر مشتمل ہے ، جیسے کردار کی خصوصیات ، معمول ، تجزیہ ، تصادم ، رینڈرنگ ، اور دو طرفہ ترتیب (دائیں سے بائیں اسکرپٹس پر مشتمل متن کی صحیح نمائش کے لئے ، جیسے عربی اور عبرانی ، اور بائیں سے دائیں سے دائیں اسکرپٹس) ۔ جون 2015 کے طور پر ، تازہ ترین ورژن 8.0.,یونیکوڈ معیاری کو کون برقرار رکھتا ہے؟,False,True
4,273,0,5727b28f2ca10214002d9432,یونیکوڈ,یونیکوڈ دنیا کے بیشتر تحریری نظاموں میں اظہار کردہ متن کی مستقل انکوڈنگ ، نمائندگی اور ہینڈلنگ کے لئے کمپیوٹنگ انڈسٹری کا ایک معیار ہے۔ یونیورسل کوڈڈ کریکٹر سیٹ (یو سی ایس) معیار کے ساتھ مل کر تیار کیا گیا ہے اور یونیکوڈ اسٹینڈرڈ کے طور پر شائع کیا گیا ہے ، یونیکوڈ کا تازہ ترین ورژن 129 جدید اور تاریخی اسکرپٹس کے ساتھ ساتھ متعدد علامت سیٹوں پر مشتمل ••120،000 حروف•• سے زیادہ کا ایک مجموعہ پر مشتمل ہے۔ یہ معیار بصری حوالہ کے لئے کوڈ چارٹ کا ایک سیٹ ، انکوڈنگ کا طریقہ کار اور معیاری کردار انکوڈنگ کا ایک سیٹ ، حوالہ ڈیٹا فائلوں کا ایک سیٹ ، اور متعدد متعلقہ اشیاء پر مشتمل ہے ، جیسے کردار کی خصوصیات ، معمول سازی ، تحلیل ، تصادم ، رینڈرنگ ، اور دو طرفہ ڈسپلے آرڈر (متن کی صحیح نمائش کے لئے جس میں دائیں سے بائیں ، جیسے عبرانی اور عربی ، اور بائیں سے دائیں سے دائیں اسکرپٹس شامل ہیں۔ جون 2015 کے طور پر [اپ ڈیٹ] ، تازہ ترین ورژن 8.0.,یونیکوڈ اپنے ذخیرے میں کتنے ہزاروں حروف پر مشتمل ہے؟,False,False
5,273,0,5acd0dff07355d001abf3290,یونیکوڈ,یونیکوڈ دنیا کے بیشتر تحریری نظاموں میں اظہار کردہ متن کی مستقل انکوڈنگ ، نمائندگی اور ہینڈلنگ کے لئے کمپیوٹنگ انڈسٹری کا ایک معیار ہے۔ یونیورسل کوڈڈ کریکٹر سیٹ (یو سی ایس) کے معیار کے ساتھ مل کر تیار کیا گیا ہے اور ••دی یونیکوڈ اسٹینڈرڈ•• کے طور پر شائع ہوا ہے۔ یونیکوڈ کا تازہ ترین ورژن 120،000 سے زیادہ حروف کا ایک ذخیرہ ہے جس میں 129 جدید اور تاریخی اسکرپٹس کے ساتھ ساتھ متعدد علامتوں کے سیٹ بھی شامل ہیں۔ یہ معیار بصری حوالہ کے لئے کوڈ چارٹ کا ایک سیٹ ، انکوڈنگ کا طریقہ اور معیاری کردار انکوڈنگ کا ایک سیٹ ، حوالہ ڈیٹا فائلوں کا ایک سیٹ ، اور متعدد متعلقہ اشیاء پر مشتمل ہے۔ جیسے کردار کی خصوصیات ، معمول سازی ، تحلیل ، تصادم ، رینڈرنگ ، اور دو طرفہ ڈسپلے آرڈر (متن کی صحیح نمائش کے لئے جس میں دائیں سے بائیں ، جیسے عبرانی اور عربی ، اور بائیں سے دائیں سے دائیں اسکرپٹ شامل ہیں۔ جون 2015 کے طور پر [اپ ڈیٹ] ، تازہ ترین ورژن 8.0.,یونیورسل کوڈڈ کریکٹر سیٹ کے طور پر کیا شائع کیا جاتا ہے؟,True,False
6,273,0,5acd0dff07355d001abf3291,یونیکوڈ,یونیکوڈ دنیا کے بیشتر تحریری نظاموں میں اظہار کردہ متن کی مستقل انکوڈنگ ، نمائندگی اور ہینڈلنگ کے لئے کمپیوٹنگ انڈسٹری کا ایک معیار ہے۔ یونیورسل کوڈڈ کریکٹر سیٹ (یو سی ایس) معیار کے ساتھ مل کر تیار کیا گیا ہے اور یونیکوڈ اسٹینڈرڈ کے طور پر شائع کیا گیا ہے ، یونیکوڈ کا تازہ ترین ورژن 129 جدید اور تاریخی اسکرپٹس کے ساتھ ساتھ متعدد علامتوں کے سیٹ پر مشتمل ••120،000•• سے زیادہ حروف کا ایک مجموعہ پر مشتمل ہے۔ یہ معیار بصری حوالہ کے لئے کوڈ چارٹ کا ایک سیٹ ، انکوڈنگ کا طریقہ کار اور معیاری کردار انکوڈنگ کا ایک سیٹ ، حوالہ ڈیٹا فائلوں کا ایک سیٹ ، اور متعدد متعلقہ اشیاء پر مشتمل ہے ، جیسے کردار کی خصوصیات ، معمول سازی ، تحلیل ، تصادم ، رینڈرنگ ، اور دو طرفہ ڈسپلے آرڈر (متن کی صحیح نمائش کے لئے جس میں دائیں سے بائیں ، جیسے عبرانی اور عربی ، اور بائیں سے دائیں سے دائیں اسکرپٹ شامل ہیں۔ جون 2015 کے طور پر [اپ ڈیٹ] ، تازہ ترین ورژن 8.0.,عربی میں کتنے حروف ہوتے ہیں؟,True,False
7,273,0,5acd0dff07355d001abf3292,یونیکوڈ,یونیکوڈ دنیا کے بیشتر تحریری نظاموں میں اظہار کردہ متن کی مستقل انکوڈنگ ، نمائندگی اور ہینڈلنگ کے لئے کمپیوٹنگ انڈسٹری کا ایک معیار ہے۔ یونیورسل کوڈڈ کریکٹر سیٹ (یو سی ایس) معیار کے ساتھ مل کر تیار کیا گیا ہے اور یونیکوڈ اسٹینڈرڈ کے طور پر شائع کیا گیا ہے ، یونیکوڈ کے تازہ ترین ورژن میں 120،000 سے زیادہ حروف کا ایک مجموعہ شامل ہے جس میں ••129•• جدید اور تاریخی اسکرپٹس کے ساتھ ساتھ متعدد علامتوں کے سیٹ بھی شامل ہیں۔ یہ معیار بصری حوالہ کے لئے کوڈ چارٹ کا ایک سیٹ ، انکوڈنگ کا طریقہ اور معیاری کردار انکوڈنگ کا ایک سیٹ ، حوالہ ڈیٹا فائلوں کا ایک سیٹ ، اور متعدد متعلقہ اشیاء پر مشتمل ہے ، جیسے کردار کی خصوصیات ، معمول سازی ، تحلیل ، تصادم ، رینڈرنگ ، اور دو طرفہ ڈسپلے آرڈر (متن کی صحیح نمائش کے لئے جس میں دائیں سے بائیں ، جیسے عبرانی اور عربی ، اور بائیں سے دائیں سے دائیں اسکرپٹ شامل ہیں۔ جون 2015 کے تازہ ترین ورژن کے طور پر ، یونیکوڈ کنسورشیم 8.0.,UCS کتنے سکرپٹ کا احاطہ کرتا ہے؟,True,False
8,273,0,5acd0dff07355d001abf3293,یونیکوڈ,یونیکوڈ دنیا کے بیشتر تحریری نظاموں میں اظہار کردہ متن کی مستقل انکوڈنگ ، نمائندگی اور ہینڈلنگ کے لئے ایک کمپیوٹنگ انڈسٹری کا معیار ہے۔ یونیورسل کوڈڈ کریکٹر سیٹ (••یو سی ایس••) معیار کے ساتھ مل کر تیار کیا گیا ہے اور یونیکوڈ اسٹینڈرڈ کے طور پر شائع ہوا ہے ، یونیکوڈ کا تازہ ترین ورژن 129 جدید اور تاریخی اسکرپٹس کے ساتھ ساتھ متعدد علامتوں کے سیٹ پر مشتمل 120،000 سے زیادہ حروف کا ایک مجموعہ پر مشتمل ہے۔ یہ معیار بصری حوالہ کے لئے کوڈ چارٹ کا ایک سیٹ ، انکوڈنگ کا طریقہ اور معیاری کردار انکوڈنگ کا ایک سیٹ ، حوالہ ڈیٹا فائلوں کا ایک سیٹ ، اور متعدد متعلقہ اشیاء پر مشتمل ہے ، جیسے کردار کی خصوصیات ، معمول سازی ، تحلیل ، تصادم ، رینڈرنگ ، اور دو طرفہ ترتیب (دائیں سے بائیں اسکرپٹس پر مشتمل متن کی صحیح نمائش کے لئے ، جیسے عربی اور عبرانی ، اور بائیں سے دائیں سے دائیں اسکرپٹس) ۔ جون 2015 کے طور پر ، تازہ ترین ورژن 8.0 ہے۔ یونیکوڈ معیار کو برقرار رکھا جاتا ہے۔,یونیکوڈ کا مخفف کیا ہے؟,True,False
9,273,0,5acd0dff07355d001abf3294,یونیکوڈ,یونیکوڈ دنیا کے بیشتر تحریری نظاموں میں اظہار کردہ متن کی مستقل انکوڈنگ ، نمائندگی اور ہینڈلنگ کے لئے کمپیوٹنگ انڈسٹری کا ایک معیار ہے۔ یونیورسل کوڈڈ کریکٹر سیٹ (یو سی ایس) معیار کے ساتھ مل کر تیار کیا گیا ہے اور یونیکوڈ اسٹینڈرڈ کے طور پر شائع کیا گیا ہے ، یونیکوڈ کا تازہ ترین ورژن 120،000 سے زیادہ حروف پر مشتمل ہے جس میں 129 جدید اور تاریخی اسکرپٹس کے ساتھ ساتھ متعدد علامتوں کے سیٹ بھی شامل ہیں۔ یہ معیار بصری حوالہ کے لئے کوڈ چارٹ کا ایک سیٹ ، انکوڈنگ کا طریقہ اور معیاری کردار انکوڈنگ کا ایک سیٹ ، حوالہ ڈیٹا فائلوں کا ایک سیٹ ، اور متعدد متعلقہ اشیاء پر مشتمل ہے ، جیسے کردار کی خصوصیات ، معمول ، تجزیہ ، تصادم ، رینڈرنگ ، اور دو طرفہ ترتیب (دائیں سے بائیں دونوں اسکرپٹس پر مشتمل متن کی صحیح نمائش کے لئے ، جیسے ••عربی•• اور عبرانی ، اور بائیں سے دائیں اسکرپٹس) ۔ جون 2015 کے تازہ ترین ورژن کے طور پر ، یونیکوڈ کنسورشیم 8.0.,بائیں سے دائیں سکرپٹ کی ایک مثال کیا ہے؟,True,False
10,273,1,5727b3022ca10214002d9438,یونیکوڈ,یونیکوڈ کو مختلف کرداروں کے انکوڈنگ کے ذریعہ لاگو کیا جاسکتا ہے۔ سب سے زیادہ استعمال ہونے والے انکوڈنگ ••UTF-8 ، UTF-16 اور اب متروک UCS-2•• ہیں۔ UTF-8 کسی بھی ASCII کردار کے لئے ایک بائٹ کا استعمال کرتا ہے ، جن میں سے سب کے پاس UTF-8 اور ASCII انکوڈنگ دونوں میں ایک ہی کوڈ اقدار ہیں ، اور دوسرے کرداروں کے لئے چار بائٹس تک۔ UCS-2 ہر کردار کے لئے 16 بٹ کوڈ یونٹ (دو 8 بٹ بائٹس) استعمال کرتا ہے لیکن موجودہ یونیکوڈ معیار میں ہر کردار کو انکوڈ نہیں کرسکتا ہے۔ UTF-16 UCS-2 کو ایک 16 بٹ یونٹ کا استعمال کرتے ہوئے توسیع کرتا ہے جو UCS-2 میں نمائندگی کے قابل تھے اور دو 16 بٹ یونٹ (4 × 8 بٹ) ہر اضافی کردار کو سنبھالتے ہیں۔,یونیکوڈ کے سب سے زیادہ عام طور پر استعمال ہونے والے انکوڈنگ کیا ہیں؟,False,False
11,273,1,5727b3022ca10214002d9439,یونیکوڈ,یونیکوڈ کو مختلف کردار انکوڈنگز کے ذریعہ نافذ کیا جاسکتا ہے۔ سب سے زیادہ استعمال ہونے والے انکوڈنگز UTF-8 ، UTF-16 اور اب متروک UCS-2 ہیں۔ ••UTF-8 کسی بھی ASCII کردار کے لئے ایک بائٹ کا استعمال کرتا ہے•• ، جن میں سے سبھی میں UTF-8 اور ASCII انکوڈنگ دونوں میں ایک ہی کوڈ اقدار ہیں ، اور دوسرے کرداروں کے لئے چار بائٹ تک۔ UCS-2 ہر کردار کے لئے 16 بٹ کوڈ یونٹ (دو 8 بٹ بائٹ) استعمال کرتا ہے لیکن موجودہ یونیکوڈ معیار میں ہر کردار کو انکوڈ نہیں کرسکتا ہے۔ UTF-16 UCS-2 کو ایک 16 بٹ یونٹ کا استعمال کرتے ہوئے توسیع کرتا ہے جو UCS-2 میں نمائندگی کے قابل تھے اور ہر اضافی کردار کو سنبھالنے کے لئے دو 16 بٹ یونٹ (4 × 8 بٹ)۔,UTF-8 بائٹس کے لحاظ سے کیا استعمال کرتا ہے؟,False,False
12,273,1,5727b3022ca10214002d943a,یونیکوڈ,یونیکوڈ کو مختلف کردار انکوڈنگز کے ذریعہ لاگو کیا جاسکتا ہے۔ سب سے زیادہ استعمال ہونے والے انکوڈنگز UTF-8 ، UTF-16 اور اب متروک UCS-2 ہیں۔ UTF-8 کسی بھی ASCII کردار کے لئے ایک بائٹ کا استعمال کرتا ہے ، جن میں سے سب کے پاس UTF-8 اور ASCII انکوڈنگ دونوں میں ایک ہی کوڈ اقدار ہیں ، اور دوسرے کرداروں کے لئے چار بائٹ تک۔ UCS-2 ہر کردار کے لئے ••16 بٹ کوڈ یونٹ•• (دو 8 بٹ بائٹ) استعمال کرتا ہے لیکن موجودہ یونیکوڈ معیار میں ہر کردار کو انکوڈ نہیں کرسکتا ہے۔ UTF-16 UCS-2 کو ایک 16 بٹ یونٹ کا استعمال کرتے ہوئے توسیع کرتا ہے جو UCS-2 میں نمائندگی کے قابل تھے اور دو 16 بٹ یونٹ (4 × 8 بٹ) ہر اضافی کردار کو سنبھالتے ہیں۔,UCS-2 کس قسم کا کوڈ استعمال کرتا ہے؟,False,False
13,273,1,5727b3022ca10214002d943b,یونیکوڈ,یونیکوڈ کو مختلف کردار انکوڈنگز کے ذریعہ لاگو کیا جاسکتا ہے۔ سب سے زیادہ استعمال ہونے والے انکوڈنگز UTF-8 ، UTF-16 اور اب متروک UCS-2 ہیں۔ UTF-8 کسی بھی ASCII کردار کے لئے ایک بائٹ کا استعمال کرتا ہے ، جن میں سے سب کے پاس UTF-8 اور ASCII انکوڈنگ دونوں میں ایک ہی کوڈ اقدار ہیں ، اور دوسرے کرداروں کے لئے چار بائٹ تک۔ UCS-2 ہر کردار کے لئے 16 بٹ کوڈ یونٹ (دو 8 بٹ بائٹ) استعمال کرتا ہے لیکن موجودہ یونیکوڈ معیار میں ہر کردار کو انکوڈ نہیں کرسکتا ہے۔ UTF-16 ••UCS-2•• کو بڑھا دیتا ہے ، UCS-2 میں نمائندگی کرنے والے کرداروں کے لئے ایک 16 بٹ یونٹ اور دو 16 بٹ یونٹ (4 × 8 بٹ) کا استعمال کرتا ہے۔,UTF-16 کیا توسیع کرتا ہے؟,False,False
14,273,1,5727b3022ca10214002d943c,یونیکوڈ,یونیکوڈ کو مختلف کردار انکوڈنگز کے ذریعہ لاگو کیا جاسکتا ہے۔ سب سے زیادہ استعمال ہونے والے انکوڈنگز UTF-8 ، UTF-16 اور اب متروک UCS-2 ہیں۔ UTF-8 کسی بھی ASCII کردار کے لئے ایک بائٹ کا استعمال کرتا ہے ، جن میں سے سب کے پاس UTF-8 اور ASCII انکوڈنگ دونوں میں ایک ہی کوڈ اقدار ہیں ، اور دوسرے کرداروں کے لئے چار بائٹ تک۔ UCS-2 ہر کردار کے لئے 16 بٹ کوڈ یونٹ (دو 8 بٹ بائٹ) استعمال کرتا ہے لیکن موجودہ یونیکوڈ معیار میں ہر کردار کو انکوڈ نہیں کرسکتا ہے۔ UTF-16 UCS-2 کو ایک 16 بٹ یونٹ کا استعمال کرتے ہوئے جو UCS-2 میں نمائندگی کے قابل تھے اور ہر اضافی کردار کو سنبھالنے کے لئے دو 16 بٹ یونٹ ••(4 × 8 بٹ••)۔,دو 16 بٹ یونٹ کس طرح استعمال کیے جاتے ہیں؟,False,False
15,273,1,5acd0ee707355d001abf32b8,یونیکوڈ,••یونیکوڈ•• کو مختلف کردار انکوڈنگز کے ذریعہ لاگو کیا جاسکتا ہے۔ سب سے زیادہ استعمال ہونے والے انکوڈنگز UTF-8 ، UTF-16 اور اب فرسودہ UCS-2 ہیں۔ UTF-8 کسی بھی ASCII کردار کے لئے ایک بائٹ کا استعمال کرتا ہے ، جن میں سے سب کے پاس UTF-8 اور ASCII انکوڈنگ دونوں میں ایک ہی کوڈ اقدار ہیں ، اور دوسرے کرداروں کے لئے چار بائٹ تک۔ UCS-2 ہر کردار کے لئے 16 بٹ کوڈ یونٹ (دو 8 بٹ بائٹ) استعمال کرتا ہے لیکن موجودہ یونیکوڈ معیار میں ہر کردار کو انکوڈ نہیں کرسکتا ہے۔ UTF-16 UCS-2 کو ایک 16 بٹ یونٹ کا استعمال کرتے ہوئے توسیع کرتا ہے جو UCS-2 میں نمائندگی کے قابل تھے اور دو 16 بٹ یونٹ (4 × 8 بٹ) ہر اضافی کردار کو سنبھالتے ہیں۔,کردار انکوڈنگ کیا ہیں کی طرف سے لاگو کیا جاتا ہے؟,True,False
16,273,1,5acd0ee707355d001abf32b9,یونیکوڈ,یونیکوڈ کو مختلف کرداروں کے انکوڈنگ کے ذریعہ لاگو کیا جاسکتا ہے۔ سب سے زیادہ استعمال ہونے والے انکوڈنگ ••UTF-8 ، UTF-16•• اور اب فرسودہ UCS-2 ہیں۔ UTF-8 کسی بھی ASCII کردار کے لئے ایک بائٹ کا استعمال کرتا ہے ، جن میں سے سب کے پاس UTF-8 اور ASCII انکوڈنگ دونوں میں ایک ہی کوڈ اقدار ہیں ، اور دوسرے کرداروں کے لئے چار بائٹ تک۔ UCS-2 ہر کردار کے لئے 16 بٹ کوڈ یونٹ (دو 8 بٹ بائٹ) استعمال کرتا ہے لیکن موجودہ یونیکوڈ معیار میں ہر کردار کو انکوڈ نہیں کرسکتا ہے۔ UTF-16 UCS-2 کو ایک 16 بٹ یونٹ کا استعمال کرتے ہوئے توسیع کرتا ہے جو UCS-2 میں نمائندگی کے قابل تھے اور ہر اضافی کردار کو سنبھالنے کے لئے دو 16 بٹ یونٹ (4 × 8 بٹ)۔,کون سے دو انکوڈنگ اب فرسودہ ہیں؟,True,False
17,273,1,5acd0ee707355d001abf32ba,یونیکوڈ,یونیکوڈ کو مختلف کردار انکوڈنگز کے ذریعہ لاگو کیا جاسکتا ہے۔ سب سے زیادہ استعمال ہونے والے انکوڈنگز UTF-8 ، UTF-16 اور اب متروک UCS-2 ہیں۔ UTF-8 کسی بھی ASCII کردار کے لئے ایک بائٹ کا استعمال کرتا ہے ، جن میں سے سب کے پاس UTF-8 اور ASCII انکوڈنگ دونوں میں ایک ہی کوڈ اقدار ہیں ، اور دوسرے کرداروں کے لئے چار بائٹ تک۔ UCS-2 ہر کردار کے لئے 16 بٹ کوڈ یونٹ (دو 8 بٹ بائٹ) استعمال کرتا ہے لیکن موجودہ یونیکوڈ معیار میں ہر کردار کو انکوڈ نہیں کرسکتا ہے۔ ••UTF-16•• UCS-2 کو ایک 16 بٹ یونٹ کا استعمال کرتے ہوئے جو UCS-2 میں نمائندگی کے قابل تھے اور ہر اضافی کردار کو سنبھالنے کے لئے دو 16 بٹ یونٹ (4 × 8 بٹ)۔,UCS-2 نے کیا توسیع کی؟,True,False
18,273,1,5acd0ee707355d001abf32bb,یونیکوڈ,یونیکوڈ کو مختلف کردار انکوڈنگز کے ذریعہ لاگو کیا جاسکتا ہے۔ سب سے زیادہ استعمال ہونے والے انکوڈنگز UTF-8 ، UTF-16 اور اب متروک UCS-2 ہیں۔ UTF-8 کسی بھی ASCII کردار کے لئے ••ایک•• بائٹ کا استعمال کرتا ہے ، جن میں سے سب کے پاس UTF-8 اور ASCII انکوڈنگ دونوں میں ایک ہی کوڈ اقدار ہیں ، اور دوسرے کرداروں کے لئے چار بائٹس تک۔ UCS-2 ہر کردار کے لئے 16 بٹ کوڈ یونٹ (دو 8 بٹ بائٹس) استعمال کرتا ہے لیکن موجودہ یونیکوڈ معیار میں ہر کردار کو انکوڈ نہیں کرسکتا ہے۔ UTF-16 UCS-2 کو ایک 16 بٹ یونٹ کا استعمال کرتے ہوئے توسیع کرتا ہے جو UCS-2 میں نمائندگی کے قابل تھے اور دو 16 بٹ یونٹ (4 × 8 بٹ) ہر اضافی کردار کو سنبھالتے ہیں۔,ایک UTF-8 بنانے کے لئے کتنے ASCII حروف استعمال کیے جاتے ہیں؟,True,False
19,273,1,5acd0ee707355d001abf32bc,یونیکوڈ,یونیکوڈ کو مختلف کردار انکوڈنگز کے ذریعہ لاگو کیا جاسکتا ہے۔ سب سے زیادہ استعمال ہونے والے انکوڈنگز UTF-8 ، UTF-16 اور اب متروک UCS-2 ہیں۔ ••UTF-8•• کسی بھی ASCII کردار کے لئے ایک بائٹ کا استعمال کرتا ہے ، جن میں سے سب کے پاس UTF-8 اور ASCII انکوڈنگ دونوں میں ایک ہی کوڈ اقدار ہیں ، اور دوسرے کرداروں کے لئے چار بائٹس تک۔ UCS-2 ہر کردار کے لئے 16 بٹ کوڈ یونٹ (دو 8 بٹ بائٹس) استعمال کرتا ہے لیکن موجودہ یونیکوڈ معیار میں ہر کردار کو انکوڈ نہیں کرسکتا ہے۔ UTF-16 UCS-2 کو ایک 16 بٹ یونٹ کا استعمال کرتے ہوئے توسیع کرتا ہے جو UCS-2 میں نمائندگی کے قابل تھے اور ہر اضافی کردار کو سنبھالنے کے لئے دو 16 بٹ یونٹ (4 × 8 بٹ)۔,کس سسٹم میں کم از کم چار بائٹس ہوتے ہیں؟,True,False
20,273,2,5727b3b72ca10214002d9448,یونیکوڈ,یونیکوڈ کا واضح مقصد ••روایتی کردار انکوڈنگ کی حدود کو عبور کرنا•• ہے ، جیسے وہ جو آئی ایس او 8859 معیار کے ذریعہ بیان کیے گئے ہیں ، جو دنیا کے مختلف ممالک میں وسیع پیمانے پر استعمال ہوتے ہیں لیکن ایک دوسرے کے ساتھ بڑے پیمانے پر متضاد رہتے ہیں۔ بہت سے روایتی کردار انکوڈنگ ایک عام مسئلہ کا اشتراک کرتے ہیں کیونکہ وہ دو لسانی کمپیوٹر پروسیسنگ کی اجازت دیتے ہیں (عام طور پر لاطینی حروف اور مقامی اسکرپٹ کا استعمال کرتے ہوئے) ، لیکن کثیر لسانی کمپیوٹر پروسیسنگ نہیں (ایک دوسرے کے ساتھ مخلوط صوابدیدی اسکرپٹس کا کمپیوٹر پروسیسنگ) ۔,یونیکوڈ کا مقصد کیا ہے؟,False,False
21,273,2,5727b3b72ca10214002d9449,یونیکوڈ,یونیکوڈ کا واضح مقصد روایتی کردار انکوڈنگ کی حدود کو عبور کرنا ہے ، جیسے وہ جو آئی ایس او 8859 معیار کے ذریعہ بیان کیے گئے ہیں ، جو دنیا کے مختلف ممالک میں وسیع پیمانے پر استعمال ہوتے ہیں لیکن بڑے پیمانے پر ایک دوسرے کے ساتھ مطابقت نہیں رکھتے ہیں۔ بہت سے روایتی کردار انکوڈنگ ایک عام مسئلہ کا اشتراک کرتے ہیں کہ وہ دو لسانی کمپیوٹر پروسیسنگ کی اجازت دیتے ہیں (عام طور پر لاطینی حروف اور مقامی اسکرپٹ کا استعمال کرتے ہوئے) ، لیکن ••کثیر لسانی کمپیوٹر پروسیسنگ•• نہیں (ایک دوسرے کے ساتھ مخلوط صوابدیدی اسکرپٹس کا کمپیوٹر پروسیسنگ) ۔,روایتی کردار انکوڈنگ کس قسم کے کمپیوٹر پروسیسنگ کی اجازت نہیں دیتے؟,False,False
22,273,2,5727b3b72ca10214002d944a,یونیکوڈ,"یونیکوڈ کا واضح مقصد روایتی کردار انکوڈنگ کی حدود کو عبور کرنا ہے ، جیسے وہ جو آئی ایس او 8859 معیار کے ذریعہ بیان کیے گئے ہیں ، جو دنیا کے مختلف ممالک میں وسیع پیمانے پر استعمال ہوتے ہیں لیکن ایک دوسرے کے ساتھ بڑے پیمانے پر متضاد رہتے ہیں۔ بہت سے روایتی کردار انکوڈنگ ایک عام مسئلہ کا اشتراک کرتے ہیں کیونکہ وہ دو لسانی کمپیوٹر پروسیسنگ کی اجازت دیتے ہیں (عام طور پر لاطینی حروف اور مقامی اسکرپٹ کا استعمال کرتے ہوئے) ، لیکن کثیر لسانی کمپیوٹر پروسیسنگ نہیں ""(ایک دوسرے کے ساتھ مخلوط صوابدیدی اسکرپٹس کا کمپیوٹر پروسیسنگ) ۔",کثیر لسانی کمپیوٹر پروسیسنگ کیا ہے؟,False,True
23,273,2,5727b3b72ca10214002d944b,یونیکوڈ,"یونیکوڈ کا واضح مقصد روایتی کردار انکوڈنگ کی حدود کو عبور کرنا ہے ، جیسے وہ جو آئی ایس او 8859 معیار کے ذریعہ بیان کیے گئے ہیں ، جو دنیا کے مختلف ممالک میں وسیع پیمانے پر استعمال ہوتے ہیں لیکن بڑے پیمانے پر ایک دوسرے کے ساتھ مطابقت نہیں رکھتے ہیں۔ بہت سے روایتی کردار انکوڈنگ میں ایک عام مسئلہ ہے کہ وہ دو لسانی کمپیوٹر پروسیسنگ کی اجازت دیتے ہیں (""عام طور پر لاطینی حروف اور مقامی اسکرپٹ کا استعمال کرتے ہوئے) ، لیکن کثیر لسانی کمپیوٹر پروسیسنگ نہیں (ایک دوسرے کے ساتھ مخلوط صوابدیدی اسکرپٹس کا کمپیوٹر پروسیسنگ) ۔",دو لسانی کمپیوٹر پروسیسنگ کس کردار کا استعمال کرتی ہے؟,False,True
24,273,2,5727b3b72ca10214002d944c,یونیکوڈ,یونیکوڈ کا واضح مقصد روایتی کردار انکوڈنگز کی حدود کو عبور کرنا ہے ، جیسے وہ جو آئی ایس او 8859 معیار کے ذریعہ بیان کیے گئے ہیں ، جو ••دنیا کے مختلف ممالک میں وسیع پیمانے پر استعمال ہوتے ہیں لیکن ایک دوسرے کے ساتھ بڑے پیمانے پر متضاد رہتے ہیں۔•• بہت سے روایتی کردار انکوڈنگز ایک عام مسئلہ کا اشتراک کرتے ہیں کیونکہ وہ دو لسانی کمپیوٹر پروسیسنگ کی اجازت دیتے ہیں (عام طور پر لاطینی حروف اور مقامی اسکرپٹ کا استعمال کرتے ہوئے) ، لیکن کثیر لسانی کمپیوٹر پروسیسنگ نہیں (ایک دوسرے کے ساتھ مخلوط صوابدیدی اسکرپٹس کا کمپیوٹر پروسیسنگ) ۔,روایتی کردار انکوڈنگ کی اہم حد کیا ہے؟,False,False
25,273,2,5acd0faf07355d001abf32cc,یونیکوڈ,یونیکوڈ کا واضح مقصد روایتی کردار انکوڈنگ کی حدود کو عبور کرنا ہے ، جیسے ••آئی ایس او 8859 معیار•• کے ذریعہ بیان کردہ ، جو دنیا کے مختلف ممالک میں وسیع پیمانے پر استعمال ہوتے ہیں لیکن بڑے پیمانے پر ایک دوسرے کے ساتھ مطابقت نہیں رکھتے ہیں۔ بہت سے روایتی کردار انکوڈنگ ایک عام مسئلہ کا اشتراک کرتے ہیں کہ وہ دو لسانی کمپیوٹر پروسیسنگ کی اجازت دیتے ہیں (عام طور پر لاطینی حروف اور مقامی اسکرپٹ کا استعمال کرتے ہوئے) ، لیکن کثیر لسانی کمپیوٹر پروسیسنگ نہیں (ایک دوسرے کے ساتھ مخلوط صوابدیدی اسکرپٹس کا کمپیوٹر پروسیسنگ) ۔,یونیکوڈ کی تعریف کس میں کی گئی تھی؟,True,False
26,273,2,5acd0faf07355d001abf32cd,یونیکوڈ,یونیکوڈ کا واضح مقصد روایتی کردار انکوڈنگ کی حدود کو عبور کرنا ہے ، جیسے وہ جو آئی ایس او 8859 معیار کے ذریعہ بیان کیے گئے ہیں ، جو دنیا کے مختلف ممالک میں وسیع پیمانے پر استعمال ہوتے ہیں لیکن بڑے پیمانے پر ایک دوسرے کے ساتھ مطابقت نہیں رکھتے ہیں۔ بہت سے روایتی کردار انکوڈنگ میں ایک عام مسئلہ ہے کہ وہ دو لسانی کمپیوٹر پروسیسنگ کی اجازت دیتے ہیں (عام طور پر ••لاطینی•• حروف اور مقامی اسکرپٹ کا استعمال کرتے ہوئے) ، لیکن کثیر لسانی کمپیوٹر پروسیسنگ نہیں (ایک دوسرے کے ساتھ مخلوط صوابدیدی اسکرپٹس کا کمپیوٹر پروسیسنگ) ۔,کثیر لسانی پروسیسرز کون سے حروف استعمال کرتے ہیں؟,True,False
27,273,2,5acd0faf07355d001abf32ce,یونیکوڈ,یونیکوڈ کا واضح مقصد روایتی کردار انکوڈنگ کی حدود کو عبور کرنا ہے ، جیسے وہ جو آئی ایس او 8859 معیار کے ذریعہ بیان کیے گئے ہیں ، جو دنیا کے مختلف ممالک میں وسیع پیمانے پر استعمال ہوتے ہیں لیکن بڑے پیمانے پر ایک دوسرے کے ساتھ مطابقت نہیں رکھتے ہیں۔ بہت سے ••روایتی•• کردار انکوڈنگ ایک عام مسئلہ کا اشتراک کرتے ہیں کیونکہ وہ دو لسانی کمپیوٹر پروسیسنگ کی اجازت دیتے ہیں (عام طور پر لاطینی حروف اور مقامی اسکرپٹ کا استعمال کرتے ہوئے) ، لیکن کثیر لسانی کمپیوٹر پروسیسنگ نہیں (ایک دوسرے کے ساتھ مخلوط صوابدیدی اسکرپٹس کا کمپیوٹر پروسیسنگ) ۔,کس قسم کے انکوڈنگ دو لسانی کمپیوٹر پروسیسنگ کی اجازت نہیں دیتے ہیں؟,True,False
28,273,2,5acd0faf07355d001abf32cf,یونیکوڈ,یونیکوڈ کا واضح مقصد روایتی کردار انکوڈنگز کی حدود کو عبور کرنا ہے ، جیسے وہ جو آئی ایس او 8859 معیار کے ذریعہ بیان کیے گئے ہیں ، جو ••دنیا کے مختلف ممالک میں وسیع پیمانے پر استعمال ہوتے ہیں لیکن ایک دوسرے کے ساتھ بڑے پیمانے پر متضاد رہتے ہیں۔•• بہت سے روایتی کردار انکوڈنگز ایک عام مسئلہ کا اشتراک کرتے ہیں کیونکہ وہ دو لسانی کمپیوٹر پروسیسنگ کی اجازت دیتے ہیں (عام طور پر لاطینی حروف اور مقامی اسکرپٹ کا استعمال کرتے ہوئے) ، لیکن کثیر لسانی کمپیوٹر پروسیسنگ نہیں (ایک دوسرے کے ساتھ مخلوط صوابدیدی اسکرپٹس کا کمپیوٹر پروسیسنگ) ۔,عالمی سطح پر یونیکوڈ کی حد کیا ہے؟,True,False
29,273,2,5acd0faf07355d001abf32d0,یونیکوڈ,••یونیکوڈ•• کا واضح مقصد روایتی کردار انکوڈنگ کی حدود کو عبور کرنا ہے ، جیسے آئی ایس او 8859 معیار کے ذریعہ بیان کردہ ، جو دنیا کے مختلف ممالک میں وسیع پیمانے پر استعمال ہوتے ہیں لیکن بڑے پیمانے پر ایک دوسرے کے ساتھ مطابقت نہیں رکھتے ہیں۔ بہت سے روایتی کردار انکوڈنگ ایک عام مسئلہ کا اشتراک کرتے ہیں کہ وہ دو لسانی کمپیوٹر پروسیسنگ کی اجازت دیتے ہیں (عام طور پر لاطینی حروف اور مقامی اسکرپٹ کا استعمال کرتے ہوئے) ، لیکن کثیر لسانی کمپیوٹر پروسیسنگ نہیں (ایک دوسرے کے ساتھ مخلوط صوابدیدی اسکرپٹس کا کمپیوٹر پروسیسنگ) ۔,روایتی کردار انکوڈنگز کیا عبور کرنے کی کوشش کر رہے ہیں؟,True,False
30,273,3,5727b735ff5b5019007d933e,یونیکوڈ,پہلے 256 کوڈ پوائنٹس کو ••ISO-8859-1•• کے مواد کے ساتھ یکساں بنایا گیا تھا تاکہ موجودہ مغربی متن کو تبدیل کرنا معمولی ہوجائے۔ بہت سے بنیادی طور پر ایک جیسے حروف کو مختلف کوڈ پوائنٹس پر متعدد بار انکوڈ کیا گیا تھا تاکہ میراث انکوڈنگز کے ذریعہ استعمال ہونے والے اختلافات کو برقرار رکھا جاسکے اور اس وجہ سے ، ان انکوڈنگز سے یونیکوڈ (اور پیچھے) کو کسی بھی معلومات کو کھونے کے بغیر تبدیل کرنے کی اجازت دی جاسکے۔ مثال کے طور پر ، کوڈ پوائنٹس کا مکمل چوڑائی فارم سیکشن ایک مکمل لاطینی حروف تہجی پر مشتمل ہے جو مرکزی لاطینی حروف تہجی سیکشن سے الگ ہے کیونکہ چینی ، جاپانی اور کورین (CJK) فونٹس میں ، یہ لاطینی حروف نصف چوڑائی کے بجائے CJK آئیڈیگراف کے طور پر پیش کیے جاتے ہیں۔,یونیکوڈ کے پہلے 256 کوڈ پوائنٹس کس کے برابر بنائے گئے تھے؟,False,False
31,273,3,5727b735ff5b5019007d933f,یونیکوڈ,پہلے 256 کوڈ پوائنٹس کو آئی ایس او 8859-1 کے مواد کے ساتھ یکساں بنایا گیا تھا تاکہ ••موجودہ مغربی متن کو تبدیل کرنا معمولی بنا سکے۔•• بہت سے بنیادی طور پر ایک جیسے حروف کو مختلف کوڈ پوائنٹس پر متعدد بار انکوڈ کیا گیا تھا تاکہ میراث انکوڈنگز کے ذریعہ استعمال ہونے والے اختلافات کو برقرار رکھا جاسکے اور اس وجہ سے ، ان انکوڈنگز سے یونیکوڈ (اور پیچھے) میں کسی بھی معلومات کو کھونے کے بغیر تبادلوں کی اجازت دی جائے۔ مثال کے طور پر ، کوڈ پوائنٹس کا مکمل چوڑائی فارم سیکشن ایک مکمل لاطینی حروف تہجی پر مشتمل ہے جو مرکزی لاطینی حروف تہجی سیکشن سے الگ ہے کیونکہ چینی ، جاپانی اور کورین (CJK) فونٹس میں ، یہ لاطینی حروف نصف چوڑائی کے بجائے CJK آئیڈیگراف کے طور پر پیش کیے جاتے ہیں۔,پہلے 256 کوڈ پوائنٹس کو آئی ایس او 8859-1 کے برابر کیوں بنایا گیا؟,False,False
32,273,3,5727b735ff5b5019007d9340,یونیکوڈ,پہلے 256 کوڈ پوائنٹس کو آئی ایس او 8859-1 کے مواد سے مماثل بنایا گیا تھا تاکہ موجودہ مغربی متن کو تبدیل کرنا معمولی ہوجائے۔ بہت سے بنیادی طور پر ایک جیسے حروف کو مختلف کوڈ پوائنٹس پر متعدد بار انکوڈ کیا گیا تھا تاکہ میراث انکوڈنگز کے ذریعہ استعمال ہونے والے اختلافات کو برقرار رکھا جاسکے اور اس وجہ سے ، ان انکوڈنگز سے یونیکوڈ (اور پیچھے) میں کسی بھی معلومات کو کھونے کے بغیر تبادلوں کی اجازت دی جاسکے۔ مثال کے طور پر ، کوڈ پوائنٹس کے مکمل چوڑائی فارم سیکشن میں ••ایک مکمل لاطینی حروف تہجی جو مرکزی لاطینی حروف تہجی سے الگ ہے•• سیکشن شامل ہے کیونکہ چینی ، جاپانی اور کورین (CJK) فونٹس میں ، یہ لاطینی حروف نصف چوڑائی کے بجائے CJK آئیڈیگراف کے طور پر پیش کیے جاتے ہیں۔,"کوڈ پوائنٹس کے ""مکمل چوڑائی فارم"" سیکشن میں کیا شامل ہے؟",False,False
33,273,3,5727b735ff5b5019007d9341,یونیکوڈ,پہلے 256 کوڈ پوائنٹس کو آئی ایس او 8859-1 کے مواد سے مماثل بنایا گیا تھا تاکہ موجودہ مغربی متن کو تبدیل کرنا معمولی ہوجائے۔ بہت سے بنیادی طور پر ایک جیسے حروف کو مختلف کوڈ پوائنٹس پر متعدد بار انکوڈ کیا گیا تھا تاکہ میراث انکوڈنگز کے ذریعہ استعمال ہونے والے اختلافات کو برقرار رکھا جاسکے اور اس وجہ سے ، ان انکوڈنگز سے یونیکوڈ (اور پیچھے) کو کسی بھی معلومات کو کھونے کے بغیر تبدیل کرنے کی اجازت دی جاسکے۔ مثال کے طور پر ، کوڈ پوائنٹس کا مکمل چوڑائی فارم سیکشن ایک مکمل لاطینی حروف تہجی پر مشتمل ہے جو مرکزی لاطینی حروف تہجی سیکشن سے الگ ہے کیونکہ ••چینی ، جاپانی اور کورین•• (CJK) فونٹس میں ، یہ لاطینی حروف نصف چوڑائی کے بجائے CJK آئیڈیگراف کے طور پر ایک ہی چوڑائی پر پیش کیے جاتے ہیں۔,CJK زبانوں کا حوالہ دیا جاتا ہے؟,False,False
34,273,3,5acd10bc07355d001abf32f4,یونیکوڈ,••پہلے 256 کوڈ پوائنٹس•• کو آئی ایس او 8859-1 کے مواد کے ساتھ یکساں بنایا گیا تھا تاکہ موجودہ مغربی متن کو تبدیل کرنا معمولی ہوجائے۔ بہت سے بنیادی طور پر ایک جیسے حروف کو مختلف کوڈ پوائنٹس پر متعدد بار انکوڈ کیا گیا تھا تاکہ میراث انکوڈنگز کے ذریعہ استعمال ہونے والے اختلافات کو برقرار رکھا جاسکے اور اس وجہ سے ، ان انکوڈنگز سے یونیکوڈ (اور پیچھے) کو کسی بھی معلومات کو کھونے کے بغیر تبدیل کرنے کی اجازت دی جاسکے۔ مثال کے طور پر ، کوڈ پوائنٹس کا مکمل چوڑائی فارم سیکشن ایک مکمل لاطینی حروف تہجی پر مشتمل ہے جو مرکزی لاطینی حروف تہجی سیکشن سے الگ ہے کیونکہ چینی ، جاپانی اور کورین (CJK) فونٹس میں ، یہ لاطینی حروف نصف چوڑائی کے بجائے CJK آئیڈیگراف کے طور پر پیش کیے جاتے ہیں۔,آئی ایس او 8859-1 نے کیا کاپی کیا؟,True,False
35,273,3,5acd10bc07355d001abf32f5,یونیکوڈ,پہلے 256 کوڈ پوائنٹس کو ISO-8859-1 کے مواد سے مماثل بنایا گیا تھا تاکہ موجودہ مغربی متن کو تبدیل کرنا معمولی ہوجائے۔ بہت سے بنیادی طور پر ایک جیسے حروف کو مختلف کوڈ پوائنٹس پر متعدد بار انکوڈ کیا گیا تھا تاکہ میراث انکوڈنگز کے ذریعہ استعمال ہونے والے اختلافات کو برقرار رکھا جاسکے اور اس وجہ سے ، ان انکوڈنگز سے یونیکوڈ (اور پیچھے) میں کسی بھی معلومات کو کھونے کے بغیر تبادلوں کی اجازت دی جاسکے۔ مثال کے طور پر ، کوڈ پوائنٹس کا مکمل چوڑائی فارم سیکشن ایک مکمل لاطینی حروف تہجی پر مشتمل ہے جو مرکزی لاطینی حروف تہجی سیکشن سے الگ ہے کیونکہ چینی ، جاپانی اور کورین (••CJK••) فونٹس میں ، یہ لاطینی حروف نصف چوڑائی کے بجائے CJK آئیڈیگراف کے طور پر پیش کیے جاتے ہیں۔,لاطینی کس قسم کی زبان ہے؟,True,False
36,273,3,5acd10bc07355d001abf32f6,یونیکوڈ,پہلے 256 کوڈ پوائنٹس کو آئی ایس او 8859-1 کے مواد سے مماثل بنایا گیا تھا تاکہ موجودہ مغربی متن کو تبدیل کرنا معمولی ہوجائے۔ بہت سے بنیادی طور پر ایک جیسے حروف کو مختلف کوڈ پوائنٹس پر متعدد بار انکوڈ کیا گیا تھا تاکہ میراث انکوڈنگز کے ذریعہ استعمال ہونے والے اختلافات کو برقرار رکھا جاسکے اور اس وجہ سے ، ان انکوڈنگز سے یونیکوڈ (اور پیچھے) کو کسی بھی معلومات کو کھونے کے بغیر تبدیل کرنے کی اجازت دی جاسکے۔ مثال کے طور پر ، کوڈ پوائنٹس کے ••فولویڈ فارم•• سیکشن میں ایک مکمل لاطینی حروف تہجی شامل ہے جو مرکزی لاطینی حروف تہجی سیکشن سے الگ ہے کیونکہ چینی ، جاپانی اور کورین (CJK) فونٹس میں ، یہ لاطینی حروف نصف چوڑائی کے بجائے CJK آئیڈیگراف کے طور پر ایک ہی چوڑائی پر پیش کیے جاتے ہیں۔,لاطینی حروف کو کیا کہا جاتا ہے جب وہ آدھی چوڑائی ہوتے ہیں؟,True,False
37,273,3,5acd10bc07355d001abf32f7,یونیکوڈ,پہلے 256 کوڈ پوائنٹس کو آئی ایس او 8859-1 کے مواد سے مماثل بنایا گیا تھا تاکہ موجودہ مغربی متن کو تبدیل کرنا معمولی ہوجائے۔ بہت سے بنیادی طور پر ایک جیسے حروف کو مختلف کوڈ پوائنٹس پر متعدد بار انکوڈ کیا گیا تھا ••لیگیٹی انکوڈنگز کے ذریعہ استعمال ہونے والے اختلافات کو برقرار رکھنے کے لئے•• اور اس وجہ سے ، ان انکوڈنگز سے یونیکوڈ (اور پیچھے) میں کسی بھی معلومات کو کھونے کے بغیر تبادلوں کی اجازت دی۔ مثال کے طور پر ، کوڈ پوائنٹس کا مکمل چوڑائی فارم سیکشن ایک مکمل لاطینی حروف تہجی پر مشتمل ہے جو مرکزی لاطینی حروف تہجی سیکشن سے الگ ہے کیونکہ چینی ، جاپانی اور کورین (CJK) فونٹس میں ، یہ لاطینی حروف نصف چوڑائی کے بجائے CJK آئیڈیگراف کے طور پر پیش کیے جاتے ہیں۔,کوڈر ڈپلیکیٹ حروف سے کیوں گریز کرتے ہیں؟,True,False
38,273,3,5acd10bc07355d001abf32f8,یونیکوڈ,پہلے 256 کوڈ پوائنٹس کو آئی ایس او 8859-1 کے مواد کے ساتھ یکساں بنایا گیا تھا تاکہ موجودہ ••مغربی•• متن کو تبدیل کرنا معمولی ہوجائے۔ بہت سے بنیادی طور پر ایک جیسے حروف کو مختلف کوڈ پوائنٹس پر متعدد بار انکوڈ کیا گیا تھا تاکہ میراث انکوڈنگز کے ذریعہ استعمال ہونے والے اختلافات کو برقرار رکھا جاسکے اور اس وجہ سے ، ان انکوڈنگز سے یونیکوڈ (اور پیچھے) کو کسی بھی معلومات کو کھونے کے بغیر تبدیل کرنے کی اجازت دی جاسکے۔ مثال کے طور پر ، کوڈ پوائنٹس کا مکمل چوڑائی فارم سیکشن ایک مکمل لاطینی حروف تہجی پر مشتمل ہے جو مرکزی لاطینی حروف تہجی سیکشن سے الگ ہے کیونکہ چینی ، جاپانی اور کورین (CJK) فونٹس میں ، یہ لاطینی حروف نصف چوڑائی کے بجائے CJK آئیڈیگراف کے طور پر پیش کیے جاتے ہیں۔,256 ابتدائی نکات کس قسم کے متن کا ترجمہ کرنا مشکل بناتے ہیں؟,True,False
39,273,4,5727b7c62ca10214002d94ae,یونیکوڈ,••1996•• میں ، یونیکوڈ 2.0 میں ایک متبادل کردار کا طریقہ کار نافذ کیا گیا تھا ، تاکہ یونیکوڈ اب 16 بٹس تک محدود نہ رہے۔ اس نے یونیکوڈ کوڈ اسپیس کو ایک ملین سے زیادہ کوڈ پوائنٹس تک بڑھا دیا ، جس نے بہت سے تاریخی اسکرپٹس (جیسے ، مصری ہیروگلیف) اور ہزاروں شاذ و نادر ہی استعمال ہونے والے یا فرسودہ حروف کی انکوڈنگ کی اجازت دی۔ ان حروف میں جو اصل میں یونیکوڈ کے لئے نہیں بنائے گئے تھے وہ شاذ و نادر ہی استعمال ہونے والے کانجی یا چینی حروف ہیں ، جن میں سے بہت سے ذاتی اور جگہ کے ناموں کا حصہ ہیں ، جس کی وجہ سے انہیں شاذ و نادر ہی استعمال کیا جاتا ہے ، لیکن یونیکوڈ کے اصل فن تعمیر میں اس کی توقع سے کہیں زیادہ ضروری ہے۔,یونیکوڈ 2.0 میں سروگیٹ کریکٹر میکانزم کب نافذ کیا گیا تھا؟,False,False
40,273,4,5727b7c62ca10214002d94af,یونیکوڈ,"1996 میں ، یونیکوڈ 2.0 میں ایک متبادل کردار کا طریقہ کار نافذ کیا گیا تھا ، ""تاکہ یونیکوڈ اب 16 بٹس تک محدود نہ ہو۔ اس نے یونیکوڈ کوڈ اسپیس کو ایک ملین سے زیادہ کوڈ پوائنٹس تک بڑھا دیا ، جس نے بہت سے تاریخی اسکرپٹس (جیسے ، مصری ہائروگلیف) اور ہزاروں شاذ و نادر ہی استعمال ہونے والے یا فرسودہ حروف کی انکوڈنگ کی اجازت دی۔ ان حروف میں جو اصل میں یونیکوڈ کے لئے نہیں بنائے گئے تھے وہ شاذ و نادر ہی استعمال ہونے والے کانجی یا چینی حروف ہیں ، جن میں سے بہت سے ذاتی اور جگہ کے ناموں کا حصہ ہیں ، جس کی وجہ سے انہیں شاذ و نادر ہی استعمال کیا جاتا ہے ، لیکن یونیکوڈ کے اصل فن تعمیر میں اس کی توقع سے کہیں زیادہ ضروری ہے۔",ایک متبادل کردار میکانزم کیوں نافذ کیا گیا تھا؟,False,True
41,273,4,5727b7c62ca10214002d94b0,یونیکوڈ,1996 میں ، یونیکوڈ 2.0 میں ایک متبادل کردار کا طریقہ کار نافذ کیا گیا تھا ، لہذا یونیکوڈ اب 16 بٹس تک محدود نہیں تھا۔ اس نے یونیکوڈ کوڈ اسپیس کو ایک ملین سے زیادہ کوڈ پوائنٹس تک بڑھا دیا ، جس نے بہت سے تاریخی اسکرپٹس (جیسے ، مصری ہائروگلیف) اور ہزاروں شاذ و نادر ہی استعمال ہونے والے یا متروک حروف کی انکوڈنگ کی اجازت دی۔ ان حروف میں سے جو اصل میں یونیکوڈ کے لئے نہیں بنائے گئے تھے ان میں ••شاذ و نادر ہی استعمال ہونے والے کانجی یا چینی حروف•• ہیں ، جن میں سے بہت سے ذاتی اور جگہ کے ناموں کا حصہ ہیں ، جس کی وجہ سے انہیں شاذ و نادر ہی استعمال کیا جاتا ہے ، لیکن یونیکوڈ کے اصل فن تعمیر میں اس کی توقع سے کہیں زیادہ ضروری ہے۔,وہ کون سے حروف ہیں جو اصل میں یونیکوڈ کے لئے نہیں بنائے گئے تھے؟,False,False
42,273,4,5727b7c62ca10214002d94b1,یونیکوڈ,1996 میں ، یونیکوڈ 2.0 میں ایک متبادل کردار کا طریقہ کار نافذ کیا گیا تھا ، لہذا یونیکوڈ اب 16 بٹس تک محدود نہیں تھا۔ اس نے یونیکوڈ کوڈ اسپیس کو ایک ملین سے زیادہ کوڈ پوائنٹس تک بڑھا دیا ، جس نے بہت سے تاریخی اسکرپٹس (جیسے ، مصری ہائروگلیف) اور ہزاروں شاذ و نادر ہی استعمال ہونے والے یا متروک حروف کی انکوڈنگ کی اجازت دی۔ ان حروف میں سے جو اصل میں یونیکوڈ کے لئے نہیں بنائے گئے تھے وہ شاذ و نادر ہی استعمال ہوتے ہیں کانجی یا چینی حروف ، ••جن میں سے بہت سے ذاتی اور جگہ کے ناموں کا حصہ ہیں•• ، جس سے وہ شاذ و نادر ہی استعمال ہوتے ہیں ، لیکن یونیکوڈ کے اصل فن تعمیر میں تصور سے کہیں زیادہ ضروری ہیں۔,کچھ غیر ملکی حروف کو شاذ و نادر ہی کیوں استعمال کیا جاتا ہے؟,False,False
43,273,4,5727b7c62ca10214002d94b2,یونیکوڈ,1996 میں ، یونیکوڈ 2.0 میں ایک متبادل کردار کا طریقہ کار نافذ کیا گیا تھا ، تاکہ یونیکوڈ اب 16 بٹس تک محدود نہ رہے۔ اس نے یونیکوڈ کوڈ اسپیس کو ایک ملین سے زیادہ کوڈ پوائنٹس تک بڑھا دیا ، جس نے ••بہت سے تاریخی اسکرپٹس کی انکوڈنگ کی اجازت دی•• (مثال کے طور پر ، مصری ہائروگلیف) اور ہزاروں شاذ و نادر ہی استعمال ہونے والے یا متروک حروف جو انکوڈنگ کی ضرورت کے طور پر متوقع نہیں تھے۔ یونیکوڈ کے لئے اصل میں استعمال نہ ہونے والے حروف میں کانجی یا چینی حروف شاذ و نادر ہی استعمال ہوتے ہیں ، جن میں سے بہت سے ذاتی اور جگہ کے ناموں کا حصہ ہیں ، جس کی وجہ سے انہیں شاذ و نادر ہی استعمال کیا جاتا ہے ، لیکن یونیکوڈ کے اصل فن تعمیر میں اس کی توقع سے کہیں زیادہ ضروری ہے۔,یونیکوڈ 2.0 کوڈ اسپیس میں اضافہ کیوں کیا گیا؟,False,False
44,273,4,5acd118107355d001abf3326,یونیکوڈ,••1996•• میں ، یونیکوڈ 2.0 میں ایک متبادل کردار کا طریقہ کار نافذ کیا گیا تھا ، تاکہ یونیکوڈ اب 16 بٹس تک محدود نہ رہے۔ اس نے یونیکوڈ کوڈ اسپیس کو ایک ملین سے زیادہ کوڈ پوائنٹس تک بڑھا دیا ، جس نے بہت سے تاریخی اسکرپٹس (جیسے ، مصری ہیروگلیف) اور ہزاروں شاذ و نادر ہی استعمال ہونے والے یا فرسودہ حروف کی انکوڈنگ کی اجازت دی۔ ان حروف میں جو اصل میں یونیکوڈ کے لئے نہیں بنائے گئے تھے وہ شاذ و نادر ہی استعمال ہونے والے کانجی یا چینی حروف ہیں ، جن میں سے بہت سے ذاتی اور جگہ کے ناموں کا حصہ ہیں ، جس کی وجہ سے انہیں شاذ و نادر ہی استعمال کیا جاتا ہے ، لیکن یونیکوڈ کے اصل فن تعمیر میں اس کی توقع سے کہیں زیادہ ضروری ہے۔,یونیکوڈ کو 16 بٹس تک کب محدود کیا گیا؟,True,False
45,273,4,5acd118107355d001abf3327,یونیکوڈ,1996 میں ، یونیکوڈ 2.0 میں ایک متبادل کردار کا طریقہ کار نافذ کیا گیا تھا ، لہذا یونیکوڈ اب 16 بٹس تک محدود نہیں تھا۔ اس نے یونیکوڈ کوڈ اسپیس کو ایک ملین سے زیادہ کوڈ پوائنٹس تک بڑھا دیا ، جس نے بہت سے تاریخی اسکرپٹس (جیسے ، مصری ہائروگلیف) اور ہزاروں شاذ و نادر ہی استعمال ہونے والے یا متروک حروف کی انکوڈنگ کی اجازت دی۔ ان حروف میں جو اصل میں یونیکوڈ کے لئے نہیں بنائے گئے تھے وہ شاذ و نادر ہی استعمال ہوتے ہیں کانجی یا چینی حروف ، جن میں سے بہت سے ••ذاتی اور جگہ کے ناموں•• کا حصہ ہیں ، جس سے انہیں شاذ و نادر ہی استعمال کیا جاتا ہے ، لیکن یونیکوڈ کے اصل فن تعمیر میں اس کی توقع سے کہیں زیادہ ضروری ہے۔,مصری ہائروگلیف کی کون سی اقسام شاذ و نادر ہی استعمال کی جاتی ہیں؟,True,False
46,273,4,5acd118107355d001abf3328,یونیکوڈ,1996 میں ، یونیکوڈ 2.0 میں ایک متبادل کردار کا طریقہ کار نافذ کیا گیا تھا ، لہذا یونیکوڈ اب 16 بٹس تک محدود نہیں تھا۔ اس نے یونیکوڈ کوڈ اسپیس کو ایک ملین سے زیادہ کوڈ پوائنٹس تک بڑھا دیا ، جس نے بہت سے تاریخی اسکرپٹس (جیسے ، مصری ہائروگلیف) اور ہزاروں شاذ و نادر ہی استعمال ہونے والے یا متروک حروف کی انکوڈنگ کی اجازت دی۔ ان حروف میں جو اصل میں یونیکوڈ کے لئے نہیں بنائے گئے تھے ان میں ••کانجی•• یا چینی حروف شاذ و نادر ہی استعمال ہوتے ہیں ، جن میں سے بہت سے ذاتی اور جگہ کے ناموں کا حصہ ہیں ، جس کی وجہ سے انہیں شاذ و نادر ہی استعمال کیا جاتا ہے ، لیکن یونیکوڈ کے اصل فن تعمیر میں اس کی توقع سے کہیں زیادہ ضروری ہے۔,اضافی یونیکوڈ حروف کو کیا کہا جاتا ہے؟,True,False
47,273,4,5acd118107355d001abf3329,یونیکوڈ,1996 میں ، یونیکوڈ 2.0 میں ایک متبادل کردار کا طریقہ کار نافذ کیا گیا تھا ، تاکہ یونیکوڈ اب 16 بٹس تک محدود نہ رہے۔ اس نے یونیکوڈ کوڈ اسپیس کو ایک ملین سے زیادہ کوڈ پوائنٹس تک بڑھا دیا ، جس نے بہت سے ••تاریخی اسکرپٹس (جیسے ، مصری ہائروگلیف) اور ہزاروں شاذ و نادر ہی استعمال ہونے والے یا متروک حروف•• کی انکوڈنگ کی اجازت دی جو انکوڈنگ کی ضرورت کے طور پر پیش گوئی نہیں کی گئی تھی۔ یونیکوڈ کے اصل فن تعمیر میں تصور کردہ حروف میں کانجی یا چینی حروف شاذ و نادر ہی استعمال ہوتے ہیں ، جن میں سے بہت سے ذاتی اور جگہ کے ناموں کا حصہ ہیں ، جس سے وہ شاذ و نادر ہی استعمال ہوتے ہیں ، لیکن یونیکوڈ کے اصل فن تعمیر میں بہت زیادہ ضروری ہیں۔,یونیکوڈ 2.0 کے ساتھ کس قسم کے حروف کو ہٹا دیا گیا تھا؟,True,False
48,273,4,5acd118107355d001abf332a,یونیکوڈ,1996 میں ، یونیکوڈ 2.0 میں ••ایک متبادل کردار میکانزم•• نافذ کیا گیا تھا ، تاکہ یونیکوڈ اب 16 بٹس تک محدود نہ رہے۔ اس نے یونیکوڈ کوڈ اسپیس کو ایک ملین سے زیادہ کوڈ پوائنٹس تک بڑھا دیا ، جس نے بہت سے تاریخی اسکرپٹس (جیسے ، مصری ہائروگلیف) اور ہزاروں شاذ و نادر ہی استعمال ہونے والے یا فرسودہ حروف کی انکوڈنگ کی اجازت دی۔ ان حروف میں جو اصل میں یونیکوڈ کے لئے نہیں بنائے گئے تھے وہ شاذ و نادر ہی استعمال ہونے والے کانجی یا چینی حروف ہیں ، جن میں سے بہت سے ذاتی اور جگہ کے ناموں کا حصہ ہیں ، جس کی وجہ سے انہیں شاذ و نادر ہی استعمال کیا جاتا ہے ، لیکن یونیکوڈ کے اصل فن تعمیر میں اس کی توقع سے کہیں زیادہ ضروری ہے۔,1996 میں کیا ہٹا دیا گیا تھا؟,True,False
49,273,5,5727dfedff5b5019007d9740,یونیکوڈ,ہر کوڈ پوائنٹ میں ایک ہی جنرل زمرہ پراپرٹی ہوتی ہے۔ اہم زمرے یہ ہیں: ••لیٹر ، مارک ، نمبر ، پوائنٹیشن ، سمبل ، سیپریٹر اور دیگر••۔ ان زمرے کے اندر ، ذیلی تقسیم ہیں۔ جنرل زمرہ ہر استعمال کے لئے مفید نہیں ہے ، کیونکہ پرانے انکوڈنگ نے ہر ایک کوڈ پوائنٹ کے لئے متعدد خصوصیات کا استعمال کیا ہے۔ مثال کے طور پر ، ASCII میں U+000A <control-000A> لائن فیڈ (LF) ایک کنٹرول اور فارمیٹنگ سیپریٹر دونوں ہے۔ یونیکوڈ میں جنرل زمرہ دیگر ، کنٹرول ہے۔ اکثر ، کوڈ پوائنٹ کی خصوصیات اور رویے کی وضاحت کرنے کے لئے دیگر خصوصیات کا استعمال کیا جانا چاہئے۔ ممکنہ جنرل زمرے یہ ہیں:,یونیکوڈ کی عمومی زمرے کیا ہیں؟,False,False
50,273,5,5727dfedff5b5019007d9741,یونیکوڈ,ہر کوڈ پوائنٹ میں ایک ہی جنرل کیٹیگری پراپرٹی ہوتی ہے۔ اہم زمرے یہ ہیں: خط ، نشان ، نمبر ، نقطہ بندی ، علامت ، علیحدگی اور دیگر۔ ان زمرے کے اندر ، ذیلی تقسیم ہیں۔ جنرل کیٹیگری ••ہر استعمال کے لئے مفید نہیں ہے ، کیونکہ پرانے انکوڈنگ نے ہر ایک کوڈ پوائنٹ کے لئے متعدد خصوصیات کا استعمال کیا ہے۔•• مثال کے طور پر ، ASCII میں U+000A <control-000A> لائن فیڈ (LF) ایک کنٹرول اور فارمیٹنگ علیحدگی دونوں ہے۔ یونیکوڈ میں جنرل کیٹیگری دیگر ، کنٹرول ہے۔ اکثر ، کوڈ پوائنٹ کی خصوصیات اور رویے کی وضاحت کرنے کے لئے دیگر خصوصیات کا استعمال کیا جانا چاہئے۔ ممکنہ جنرل کیٹیگریز یہ ہیں:,کس قسم کے استعمال کے لئے جنرل زمرہ مددگار نہیں ہے؟,False,False
51,273,5,5727dfedff5b5019007d9742,یونیکوڈ,ہر کوڈ پوائنٹ میں ایک ہی جنرل زمرہ پراپرٹی ہوتی ہے۔ اہم زمرے یہ ہیں: خط ، نشان ، نمبر ، نقطۂ امتیاز ، علامت ، جداکار اور دیگر۔ ان زمرے کے اندر ، ذیلی تقسیم ہیں۔ جنرل زمرہ ہر استعمال کے لئے مفید نہیں ہے ، کیونکہ پرانے انکوڈنگز نے ہر ایک کوڈ پوائنٹ کے لئے متعدد خصوصیات کا استعمال کیا ہے۔ مثال کے طور پر ، ASCII میں U+000A <control-000A> لائن فیڈ (LF) ایک کنٹرول اور فارمیٹنگ جداکار دونوں ہے۔ یونیکوڈ میں جنرل زمرہ ••دیگر ، کنٹرول•• ہے۔ اکثر ، کوڈ پوائنٹ کی خصوصیات اور رویے کی وضاحت کرنے کے لئے دیگر خصوصیات کا استعمال کیا جانا چاہئے۔ ممکنہ جنرل زمرے یہ ہیں:,یونیکوڈ میں جنرل زمرہ کیا ہے؟,False,False
52,273,5,5727dfedff5b5019007d9743,یونیکوڈ,ہر کوڈ پوائنٹ میں ••ایک واحد جنرل زمرہ پراپرٹی•• ہوتی ہے۔ اہم زمرے یہ ہیں: خط ، نشان ، نمبر ، نقطہ بندی ، علامت ، علیحدگی اور دیگر۔ ان زمرے کے اندر ، ذیلی تقسیم ہیں۔ جنرل زمرہ ہر استعمال کے لئے مفید نہیں ہے ، کیونکہ پرانے انکوڈنگ نے ہر ایک کوڈ پوائنٹ کے لئے متعدد خصوصیات کا استعمال کیا ہے۔ مثال کے طور پر ، ASCII میں U+000A <control-000A> لائن فیڈ (LF) ایک کنٹرول اور فارمیٹنگ علیحدگی دونوں ہے۔ یونیکوڈ میں جنرل زمرہ دیگر ، کنٹرول ہے۔ اکثر ، کوڈ پوائنٹ کی خصوصیات اور رویے کی وضاحت کرنے کے لئے دیگر خصوصیات کا استعمال کیا جانا چاہئے۔ ممکنہ جنرل زمرے یہ ہیں:,ہر کوڈ پوائنٹ میں کتنے جنرل زمرے کی خصوصیات ہیں؟,False,False
53,273,5,5727dfedff5b5019007d9744,یونیکوڈ,ہر کوڈ پوائنٹ میں ایک ہی جنرل زمرہ پراپرٹی ہوتی ہے۔ اہم زمرے یہ ہیں: خط ، نشان ، نمبر ، نقطۂ امتیاز ، علامت ، جداکار اور دیگر۔ ان زمرے کے اندر ، ••ذیلی ڈویژن•• ہیں۔ جنرل زمرہ ہر استعمال کے لئے مفید نہیں ہے ، کیونکہ پرانے انکوڈنگ نے ہر ایک کوڈ پوائنٹ کے لئے متعدد خصوصیات کا استعمال کیا ہے۔ مثال کے طور پر ، ASCII میں U+000A <control-000A> لائن فیڈ (LF) ایک کنٹرول اور فارمیٹنگ جداکار دونوں ہے۔ یونیکوڈ میں جنرل زمرہ دیگر ، کنٹرول ہے۔ اکثر ، کوڈ پوائنٹ کی خصوصیات اور رویے کی وضاحت کرنے کے لئے دیگر خصوصیات کا استعمال کیا جانا چاہئے۔ ممکنہ جنرل زمرے یہ ہیں:,اہم یونیکوڈ زمرے کے اندر کیا موجود ہے؟,False,False
54,273,5,5acd126d07355d001abf334c,یونیکوڈ,ہر کوڈ پوائنٹ میں ایک ہی جنرل زمرہ پراپرٹی ہوتی ہے۔ اہم زمرے یہ ہیں: ••لیٹر ، مارک ، نمبر ، پوائنٹیوشن ، سمبل ، سیپریٹر•• اور دیگر۔ ان زمرے کے اندر ، ذیلی تقسیم ہیں۔ جنرل زمرہ ہر استعمال کے لئے مفید نہیں ہے ، کیونکہ پرانے انکوڈنگ نے ہر ایک کوڈ پوائنٹ کے لئے متعدد خصوصیات کا استعمال کیا ہے۔ مثال کے طور پر ، ASCII میں U+000A <control-000A> لائن فیڈ (LF) ایک کنٹرول اور فارمیٹنگ سیپریٹر دونوں ہے۔ یونیکوڈ میں جنرل زمرہ دیگر ، کنٹرول ہے۔ اکثر ، کوڈ پوائنٹ کی خصوصیات اور رویے کی وضاحت کرنے کے لئے دیگر خصوصیات کا استعمال کیا جانا چاہئے۔ ممکنہ جنرل زمرے یہ ہیں:,دیگر زمرے میں کون سے ذیلی زمرے پائے جاتے ہیں؟,True,False
55,273,5,5acd126d07355d001abf334d,یونیکوڈ,ہر کوڈ پوائنٹ میں ایک ہی جنرل کیٹیگری پراپرٹی ہوتی ہے۔ اہم زمرے یہ ہیں: خط ، نشان ، نمبر ، نقطہ بندی ، علامت ، علیحدگی اور دیگر۔ ان زمرے کے اندر ، ذیلی تقسیم ہیں۔ ••جنرل•• زمرہ ہر استعمال کے لئے مفید نہیں ہے ، کیونکہ پرانے انکوڈنگ نے ہر ایک کوڈ پوائنٹ کے لئے متعدد خصوصیات کا استعمال کیا ہے۔ مثال کے طور پر ، ASCII میں U+000A <control-000A> لائن فیڈ (LF) ایک کنٹرول اور فارمیٹنگ علیحدگی دونوں ہے۔ یونیکوڈ میں جنرل کیٹیگری دیگر ، کنٹرول ہے۔ اکثر ، کوڈ پوائنٹ کی خصوصیات اور رویے کی وضاحت کرنے کے لئے دیگر خصوصیات کا استعمال کیا جانا چاہئے۔ ممکنہ جنرل زمرے یہ ہیں:,کون سا زمرہ ہمیشہ استعمال کیا جا سکتا ہے؟,True,False
56,273,5,5acd126d07355d001abf334e,یونیکوڈ,ہر کوڈ پوائنٹ میں ایک ہی جنرل زمرہ پراپرٹی ہوتی ہے۔ اہم زمرے یہ ہیں: خط ، نشان ، نمبر ، نقطۂ امتیاز ، علامت ، جداکار اور دیگر۔ ان زمرے کے اندر ، ذیلی تقسیم ہیں۔ جنرل زمرہ ہر استعمال کے لئے مفید نہیں ہے ، کیونکہ ••لیگسی انکوڈنگ نے فی سنگل کوڈ پوائنٹ متعدد خصوصیات کا استعمال کیا ہے۔•• مثال کے طور پر ، ASCII میں U+000A <control-000A> لائن فیڈ (LF) ایک کنٹرول اور فارمیٹنگ جداکار دونوں ہے۔ یونیکوڈ میں جنرل زمرہ دیگر ، کنٹرول ہے۔ اکثر ، کوڈ پوائنٹ کی خصوصیات اور رویے کی وضاحت کرنے کے لئے دیگر خصوصیات کا استعمال کیا جانا چاہئے۔ ممکنہ جنرل زمرے یہ ہیں:,علامت تمام مثالوں کے لئے مفید کیوں نہیں ہے؟,True,False
57,273,5,5acd126d07355d001abf334f,یونیکوڈ,ہر کوڈ پوائنٹ میں ایک ہی جنرل زمرہ پراپرٹی ہوتی ہے۔ اہم زمرے یہ ہیں: خط ، نشان ، نمبر ، نقطۂ امتیاز ، علامت ، جداکار اور دیگر۔ ان زمرے کے اندر ، ذیلی تقسیم ہیں۔ جنرل زمرہ ہر استعمال کے لئے مفید نہیں ہے ، کیونکہ پرانے انکوڈنگز نے ہر ایک کوڈ پوائنٹ کے لئے متعدد خصوصیات کا استعمال کیا ہے۔ مثال کے طور پر ، ASCII میں U+000A <control-000A> لائن فیڈ (LF) ایک کنٹرول اور فارمیٹنگ جداکار دونوں ہے۔ یونیکوڈ میں جنرل زمرہ ••دیگر ، کنٹرول•• ہے۔ اکثر ، کوڈ پوائنٹ کی خصوصیات اور رویے کی وضاحت کرنے کے لئے دیگر خصوصیات کا استعمال کیا جانا چاہئے۔ ممکنہ جنرل زمرے یہ ہیں:,یونیکوڈ میں Separator زمرے کا عنوان کیا ہے؟,True,False
58,273,5,5acd126d07355d001abf3350,یونیکوڈ,ہر کوڈ پوائنٹ میں ایک ہی جنرل کیٹیگری پراپرٹی ہوتی ہے۔ اہم زمرے یہ ہیں: خط ، نشان ، نمبر ، نقطہ بندی ، علامت ، علیحدگی اور دیگر۔ ان زمرے کے اندر ، ذیلی تقسیم ہیں۔ جنرل کیٹیگری ہر استعمال کے لئے مفید نہیں ہے ، کیونکہ پرانے انکوڈنگ نے ہر ایک کوڈ پوائنٹ کے لئے متعدد خصوصیات کا استعمال کیا ہے۔ مثال کے طور پر ، ASCII میں U+000A <control-000A> لائن فیڈ (LF) ایک کنٹرول اور فارمیٹنگ علیحدگی دونوں ہے۔ یونیکوڈ میں ••جنرل کیٹیگری•• دیگر ، کنٹرول ہے۔ اکثر ، کوڈ پوائنٹ کی خصوصیات اور رویے کی وضاحت کرنے کے لئے دیگر خصوصیات کا استعمال کیا جانا چاہئے۔ ممکنہ جنرل کیٹیگریز یہ ہیں:,"""دوسرا، علامت"" کس یونیکوڈ زمرے کی نمائندگی کرتا ہے؟",True,False
59,273,6,5727e25f3acd2414000deef7,یونیکوڈ,"U+D800--U+DBFF (1,024 کوڈ پوائنٹس) کی حد میں کوڈ پوائنٹس کو ••ہائی سروگیٹ کوڈ پوائنٹس•• کے نام سے جانا جاتا ہے ، اور U+DC00--U+DFFF (1,024 کوڈ پوائنٹس) کی حد میں کوڈ پوائنٹس کو کم سروگیٹ کوڈ پوائنٹس کے نام سے جانا جاتا ہے۔ ایک ہائی سروگیٹ کوڈ پوائنٹ (جس کو لیڈنگ سروگیٹ بھی کہا جاتا ہے) اس کے بعد ایک کم سروگیٹ کوڈ پوائنٹ (جس کو ٹریلنگ سروگیٹ بھی کہا جاتا ہے) مل کر UTF-16 میں استعمال ہونے والے 1,048,576 کوڈ پوائنٹس کی نمائندگی کرنے کے لئے ایک سروگیٹ جوڑی بناتے ہیں۔ ہائی اور کم سروگیٹ کوڈ پوائنٹس خود سے درست نہیں ہیں۔ اس طرح کوڈ پوائنٹس کی حد جو حروف کے طور پر استعمال کے لئے دستیاب ہیں U+0000----UFF+D7FF اور UFF+E000UFF+10 (1,112,064). ان پوائنٹس کی قدر (یعنی ، سروگیٹس کو خارج کرتے ہوئے) کو کبھی کبھی کریکٹر کوڈ کی اسکیلر ویلیو کہا جاتا ہے۔",U+D800-U+DBFF کی حد میں کوڈ پوائنٹس کو کیا کہا جاتا ہے؟,False,False
60,273,6,5727e25f3acd2414000deef8,یونیکوڈ,"U+D800--U+DBFF (1,024 کوڈ پوائنٹس) کی حد میں کوڈ پوائنٹس کو ہائی سروگیٹ کوڈ پوائنٹس کے نام سے جانا جاتا ہے ، اور U+DC00--U+DFFF (1,024 کوڈ پوائنٹس) کی حد میں کوڈ پوائنٹس کو ••لو سروگیٹ کوڈ پوائنٹس•• کے نام سے جانا جاتا ہے۔ ایک ہائی سروگیٹ کوڈ پوائنٹ (جس کو لیڈنگ سروگیٹ بھی کہا جاتا ہے) اس کے بعد ایک لو سروگیٹ کوڈ پوائنٹ (جس کو ٹریلنگ سروگیٹ بھی کہا جاتا ہے) ایک ساتھ مل کر یو ٹی ایف 16 میں استعمال ہونے والے 1,048,576 کوڈ پوائنٹس کی نمائندگی کرنے کے لئے استعمال کیا جاتا ہے۔ ہائی اور لو سروگیٹ کوڈ پوائنٹس خود سے درست نہیں ہیں۔ اس طرح کوڈ پوائنٹس کی حد جو حروف کے طور پر استعمال کے لئے دستیاب ہیں وہ U+0000----UFF+D7FF اور UFF+E000UFF+10 (1,112,064 کوڈ پوائنٹس) ہیں۔ ان پوائنٹس کی قیمت (یعنی ، سروگیٹس کو خارج کرتے ہوئے) کو کبھی کبھی کریکٹر کوڈ کی اسکالر ویلیو کہا جاتا ہے۔",U+DC00-U+DFFF کی حد میں کوڈ پوائنٹس کو کیا کہا جاتا ہے؟,False,False
61,273,6,5727e25f3acd2414000deef9,یونیکوڈ,"U+D800--U+DBFF (1,024 کوڈ پوائنٹس) کی حد میں کوڈ پوائنٹس کو ہائی سروگیٹ کوڈ پوائنٹس کے طور پر جانا جاتا ہے ، اور U+DC00--U+DFFF (1,024 کوڈ پوائنٹس) کی حد میں کوڈ پوائنٹس کو کم سروگیٹ کوڈ پوائنٹس کے طور پر جانا جاتا ہے۔ ایک ہائی سروگیٹ کوڈ پوائنٹ (جس کو ••لیڈنگ سروگیٹ•• بھی کہا جاتا ہے) اس کے بعد ایک کم سروگیٹ کوڈ پوائنٹ (جس کو ٹریلنگ سروگیٹ بھی کہا جاتا ہے) مل کر UTF-16 میں استعمال ہونے والے 1,048,576 کوڈ پوائنٹس کی نمائندگی کرنے کے لئے ایک سروگیٹ جوڑی بناتے ہیں۔ ہائی اور لو سروگیٹ کوڈ پوائنٹس خود سے درست نہیں ہیں۔ اس طرح کوڈ پوائنٹس کی حد جو حروف کے طور پر استعمال کے لئے دستیاب ہیں وہ U+0000FF--U+D7 اور UFFE000U+10 (1,112,064) ہے۔ ان پوائنٹس کی قدر (یعنی ، سروگیٹس کو خارج کرتے ہوئے) کو کبھی کبھی کریکٹر کوڈ کا اسکالر ویلیو کہا جاتا ہے۔",ایک اعلی surrogate کوڈ پوائنٹ کے لئے ایک اور نام کیا ہے؟,False,False
62,273,6,5727e25f3acd2414000deefa,یونیکوڈ,"U+D800--U+DBFF (1,024 کوڈ پوائنٹس) کی حد میں کوڈ پوائنٹس کو ہائی سروگیٹ کوڈ پوائنٹس کے طور پر جانا جاتا ہے ، اور U+DC00--U+DFFF (1,024 کوڈ پوائنٹس) کی حد میں کوڈ پوائنٹس کو کم سروگیٹ کوڈ پوائنٹس کے طور پر جانا جاتا ہے۔ ایک ہائی سروگیٹ کوڈ پوائنٹ (جس کو لیڈنگ سروگیٹ بھی کہا جاتا ہے) اس کے بعد ایک کم سروگیٹ کوڈ پوائنٹ (جس کو ••ٹریلنگ سروگیٹ•• بھی کہا جاتا ہے) ایک ساتھ مل کر UTF-16 میں استعمال ہونے والے 1,048,576 کوڈ پوائنٹس کی نمائندگی کرنے کے لئے ایک سروگیٹ جوڑی بناتے ہیں۔ ہائی اور کم سروگیٹ کوڈ پوائنٹس خود سے درست نہیں ہیں۔ اس طرح کوڈ پوائنٹس کی حد جو حروف کے طور پر استعمال کے لئے دستیاب ہیں U+0000----UFF+D7FF اور UFF+E000UFF+10 (1,112,064). ان پوائنٹس کی قدر (یعنی ، سروگیٹس کو خارج کرتے ہوئے) کو کبھی کبھی کریکٹر کوڈ کی اسکالر ویلیو کہا جاتا ہے۔",ایک کم متبادل کوڈ پوائنٹ کے لئے ایک اور نام کیا ہے؟,False,False
63,273,6,5727e25f3acd2414000deefb,یونیکوڈ,"U+D800--U+DBFF (1,024 کوڈ پوائنٹس) کی حد میں کوڈ پوائنٹس کو ہائی سروگیٹ کوڈ پوائنٹس کے طور پر جانا جاتا ہے ، اور U+DC00--U+DFFF (1,024 کوڈ پوائنٹس) کی حد میں کوڈ پوائنٹس کو کم سروگیٹ کوڈ پوائنٹس کے طور پر جانا جاتا ہے۔ ایک ہائی سروگیٹ کوڈ پوائنٹ (جس کو لیڈنگ سروگیٹ بھی کہا جاتا ہے) اس کے بعد ایک کم سروگیٹ کوڈ پوائنٹ (جس کو ٹریلنگ سروگیٹ بھی کہا جاتا ہے) ایک ساتھ مل کر UTF-16 میں استعمال ہونے والے 1,048,576 کوڈ پوائنٹس کی نمائندگی کرنے کے لئے ایک سروگیٹ جوڑی بناتے ہیں۔ ہائی اور کم سروگیٹ کوڈ پوائنٹس خود سے درست نہیں ہیں۔ اس طرح ••کوڈ پوائنٹس کی حد جو حروف کے طور پر استعمال کے لئے دستیاب ہیں•• U+0000FFFFU+D7 اور UFFE000U+10 (1,112,064) ہے۔ ان پوائنٹس کی قدر (یعنی ، سروگیٹس کو خارج کرتے ہوئے) کو کبھی کبھی کردار کوڈ کا اسکیلر ویلیو کہا جاتا ہے۔",ایک کردار کی اسکالر ویلیو کے طور پر کیا جانا جاتا ہے؟,False,False
64,273,6,5acd131507355d001abf3368,یونیکوڈ,"U+D800--U+DBFF (1,024 کوڈ پوائنٹس) کی حد میں کوڈ پوائنٹس کو ہائی سروگیٹ کوڈ پوائنٹس کے طور پر جانا جاتا ہے ، اور U+DC00--U+DFFF (1,024 کوڈ پوائنٹس) کی حد میں کوڈ پوائنٹس کو کم سروگیٹ کوڈ پوائنٹس کے طور پر جانا جاتا ہے۔ ایک ہائی سروگیٹ کوڈ پوائنٹ (جس کو لیڈنگ سروگیٹ بھی کہا جاتا ہے) اس کے بعد ایک کم سروگیٹ کوڈ پوائنٹ (جس کو ٹریلنگ سروگیٹ بھی کہا جاتا ہے) ایک ساتھ مل کر UTF-16 میں استعمال ہونے والے 1,048,576 کوڈ پوائنٹس کی نمائندگی کرنے کے لئے ••ایک سروگیٹ جوڑی•• تشکیل دیتے ہیں۔ ہائی اور لو سروگیٹ کوڈ پوائنٹس خود سے درست نہیں ہیں۔ اس طرح کوڈ پوائنٹس کی حد جو حروف کے طور پر استعمال کے لئے دستیاب ہیں وہ U+0000FFFFU+D7 اور UFFE000U+10 (1,112,064) ہے۔ ان پوائنٹس کی قدر (یعنی ، سروگیٹس کو خارج کرتے ہوئے) کو کبھی کبھی کریکٹر کوڈ کا اسکالر ویلیو کہا جاتا ہے۔",ایک کم متبادل کے بعد ایک اعلی متبادل کو کیا کہا جاتا ہے؟,True,False
65,273,6,5acd131507355d001abf3369,یونیکوڈ,"U+D800--U+DBFF (1,024 کوڈ پوائنٹس) کی حد میں کوڈ پوائنٹس کو ہائی سروگیٹ کوڈ پوائنٹس کے طور پر جانا جاتا ہے ، اور U+DC00--U+DFFF (1,024 کوڈ پوائنٹس) کی حد میں کوڈ پوائنٹس کو کم سروگیٹ کوڈ پوائنٹس کے طور پر جانا جاتا ہے۔ ایک ہائی سروگیٹ کوڈ پوائنٹ (جس کو لیڈنگ سروگیٹ بھی کہا جاتا ہے) اس کے بعد ایک کم سروگیٹ کوڈ پوائنٹ (جس کو ••ٹریلنگ سروگیٹ•• بھی کہا جاتا ہے) ایک ساتھ مل کر UTF-16 میں استعمال ہونے والے 1,048,576 کوڈ پوائنٹس کی نمائندگی کرنے کے لئے ایک سروگیٹ جوڑی بناتے ہیں۔ ہائی اور کم سروگیٹ کوڈ پوائنٹس خود سے درست نہیں ہیں۔ اس طرح کوڈ پوائنٹس کی حد جو حروف کے طور پر استعمال کے لئے دستیاب ہیں U+0000----UFF+D7FF اور UFF+E000UFF+10 (1,112,064). ان پوائنٹس کی قدر (یعنی ، سروگیٹس کو خارج کرتے ہوئے) کو کبھی کبھی کریکٹر کوڈ کی اسکالر ویلیو کہا جاتا ہے۔",ایک متبادل جوڑے کے لئے ایک اور نام کیا ہے؟,True,False
66,273,6,5acd131507355d001abf336a,یونیکوڈ,"U+D800--U+DBFF (1,024 کوڈ پوائنٹس) کی حد میں کوڈ پوائنٹس کو ہائی سروگیٹ کوڈ پوائنٹس کے طور پر جانا جاتا ہے ، اور U+DC00--U+DFFF (1,024 کوڈ پوائنٹس) کی حد میں کوڈ پوائنٹس کو کم سروگیٹ کوڈ پوائنٹس کے طور پر جانا جاتا ہے۔ ایک ہائی سروگیٹ کوڈ پوائنٹ (جس کو لیڈنگ سروگیٹ بھی کہا جاتا ہے) اس کے بعد ایک کم سروگیٹ کوڈ پوائنٹ (جس کو ٹریلنگ سروگیٹ بھی کہا جاتا ہے) ایک ساتھ مل کر UTF-16 میں ••1,048,576•• کوڈ پوائنٹس کو BMP سے باہر کی نمائندگی کرنے کے لئے استعمال کیا جاتا ہے۔ ہائی اور کم سروگیٹ کوڈ پوائنٹس خود سے درست نہیں ہیں۔ اس طرح کوڈ پوائنٹس کی حد جو حروف کے طور پر استعمال کے لئے دستیاب ہیں وہ U+0000FFFFU+D7 اور UFFE000U+10 (1,112,064) ہے۔ ان پوائنٹس کی قدر (یعنی ، سروگیٹس کو خارج کرتے ہوئے) کو کبھی کبھی کریکٹر کوڈ کا اسکالر ویلیو کہا جاتا ہے۔",BMP کے اندر کتنے پوائنٹس کی نمائندگی کی جاتی ہے؟,True,False
67,273,6,5acd131507355d001abf336b,یونیکوڈ,"U+D800--U+DBFF (1,024 کوڈ پوائنٹس) کی حد میں کوڈ پوائنٹس کو ہائی سروگیٹ کوڈ پوائنٹس کے طور پر جانا جاتا ہے ، اور U+DC00--U+DFFF (1,024 کوڈ پوائنٹس) کی حد میں کوڈ پوائنٹس کو کم سروگیٹ کوڈ پوائنٹس کے طور پر جانا جاتا ہے۔ ایک ہائی سروگیٹ کوڈ پوائنٹ (جس کو لیڈنگ سروگیٹ بھی کہا جاتا ہے) اس کے بعد ایک کم سروگیٹ کوڈ پوائنٹ (جس کو ٹریلنگ سروگیٹ بھی کہا جاتا ہے) ایک ساتھ مل کر UTF-16 میں استعمال ہونے والے 1,048,576 کوڈ پوائنٹس کی نمائندگی کرنے کے لئے ایک سروگیٹ جوڑی بناتے ہیں۔ ••ہائی اور لو•• سروگیٹ کوڈ پوائنٹس خود سے درست نہیں ہیں۔ اس طرح کوڈ پوائنٹس کی حد جو حروف کے طور پر استعمال کے لئے دستیاب ہیں وہ U+0000FFU+D7 اور UFFE000U+10 (1,112,064) ہیں۔ ان پوائنٹس کی قدر (یعنی ، سروگیٹس کو خارج کرتے ہوئے) کو کبھی کبھی کریکٹر کوڈ کا اسکالر کہا جاتا ہے۔",کون سی قسم کے کوڈ پوائنٹس اپنے آپ سے درست ہیں؟,True,False
68,273,6,5acd131507355d001abf336c,یونیکوڈ,"U+D800--U+DBFF (1,024 کوڈ پوائنٹس) کی حد میں کوڈ پوائنٹس کو ہائی سروگیٹ کوڈ پوائنٹس کے طور پر جانا جاتا ہے ، اور U+DC00--U+DFFF (1,024 کوڈ پوائنٹس) کی حد میں کوڈ پوائنٹس کو کم سروگیٹ کوڈ پوائنٹس کے طور پر جانا جاتا ہے۔ ایک ہائی سروگیٹ کوڈ پوائنٹ (جس کو لیڈنگ سروگیٹ بھی کہا جاتا ہے) اس کے بعد ایک کم سروگیٹ کوڈ پوائنٹ (جس کو ٹریلنگ سروگیٹ بھی کہا جاتا ہے) ایک ساتھ مل کر UTF-16 میں استعمال ہونے والے 1,048,576 کوڈ پوائنٹس کی نمائندگی کرنے کے لئے ایک سروگیٹ جوڑی بناتے ہیں۔ ہائی اور کم سروگیٹ کوڈ پوائنٹس خود سے درست نہیں ہیں۔ اس طرح کوڈ پوائنٹس کی حد جو حروف کے طور پر استعمال کے لئے دستیاب ہیں وہ U+0000--U+D7FF اور U+E000U10FF11+ (1,064،XNUMX) ہیں۔ ان پوائنٹس کی قدر (یعنی ، سروگیٹس کو خارج کرتے ہوئے) کو کبھی کبھی ••اسکالر کوڈ پوائنٹ•• کہا جاتا ہے۔",کوڈ پوائنٹس کی انفرادی تعداد کو کیا کہا جاتا ہے؟,True,False
69,273,7,5727e7e12ca10214002d992e,یونیکوڈ,یونیکوڈ کے ذریعہ بیان کردہ گرافک اور فارمیٹ حروف کا سیٹ براہ راست تجریدی حروف کے ذخیرے سے مطابقت نہیں رکھتا ہے جو یونیکوڈ کے تحت نمائندگی کی جاسکتی ہے۔ یونیکوڈ ایک تجریدی کردار کو کسی خاص کوڈ پوائنٹ کے ساتھ جوڑ کر حروف کو انکوڈ کرتا ہے۔ تاہم ، تمام تجریدی حروف کو ایک ہی یونیکوڈ کردار کے طور پر انکوڈ نہیں کیا جاتا ہے ، اور کچھ تجریدی حروف کو یونیکوڈ میں دو یا اس سے زیادہ حروف کی ترتیب سے نمائندگی کی جاسکتی ہے۔ مثال کے طور پر ، ایک لاطینی چھوٹا خط i جس میں اوگونک ، ••اوپر ایک نقطہ•• اور ایک تیز تلفظ ہے ، جو لتھوانیائی زبان میں ضروری ہے ، کی نمائندگی کردار تسلسل U+012F ، U+0307 ، U+0301 کے ذریعہ کی جاتی ہے۔ یونیکوڈ ان تجریدی حروف کے لئے منفرد طور پر نامزد کردار تسلسل کی ایک فہرست برقرار رکھتا ہے۔,اوگونک کیا ہے؟,False,False
70,273,7,5727e7e12ca10214002d992f,یونیکوڈ,یونیکوڈ کے ذریعہ بیان کردہ گرافک اور فارمیٹ حروف کا سیٹ براہ راست تجریدی حروف کے ذخیرے سے مطابقت نہیں رکھتا ہے جو یونیکوڈ کے تحت نمائندگی کی جاسکتی ہے۔ یونیکوڈ حروف کو ••ایک مخصوص کوڈ پوائنٹ کے ساتھ ایک تجریدی کردار کو جوڑ کر•• انکوڈ کرتا ہے۔ تاہم ، تمام تجریدی حروف کو ایک ہی یونیکوڈ کردار کے طور پر انکوڈ نہیں کیا جاتا ہے ، اور کچھ تجریدی حروف کو یونیکوڈ میں دو یا اس سے زیادہ حروف کی ترتیب کے ذریعہ نمائندگی کی جاسکتی ہے۔ مثال کے طور پر ، ایک لاطینی چھوٹا خط i جس میں اوگونک ، ایک نقطہ اوپر ، اور ایک تیز تلفظ ہے ، جو لتھوانیائی میں ضروری ہے ، اس کی نمائندگی کردار تسلسل U+012F ، U+0307 ، U+0301 کے ذریعہ کی جاتی ہے۔ یونیکوڈ ان تجریدی حروف کے لئے منفرد طور پر نامزد کردار تسلسل کی ایک فہرست برقرار رکھتا ہے۔,یونیکوڈ حروف کو کیسے انکوڈ کرتا ہے؟,False,False
71,273,7,5727e7e12ca10214002d9930,یونیکوڈ,یونیکوڈ کے ذریعہ بیان کردہ گرافک اور فارمیٹ حروف کا سیٹ براہ راست تجریدی حروف کے ذخیرے سے مطابقت نہیں رکھتا ہے جو یونیکوڈ کے تحت نمائندگی کی جاسکتی ہے۔ یونیکوڈ ایک تجریدی کردار کو کسی خاص کوڈ پوائنٹ کے ساتھ جوڑ کر حروف کو انکوڈ کرتا ہے۔ تاہم ، تمام تجریدی حروف کو ایک ہی یونیکوڈ کردار کے طور پر انکوڈ نہیں کیا جاتا ہے ، اور کچھ تجریدی حروف کو یونیکوڈ میں ••دو یا اس سے زیادہ حروف کی ترتیب•• کے ذریعہ نمائندگی کی جاسکتی ہے۔ مثال کے طور پر ، ایک لاطینی چھوٹا خط i جس میں اوگونک ، ایک نقطہ اوپر ، اور ایک تیز تلفظ ہے ، جو لتھوانیائی زبان میں ضروری ہے ، اس کی نمائندگی کردار تسلسل U+012F ، U+0307 ، U+0301 کے ذریعہ کی جاتی ہے۔ یونیکوڈ ان تجریدی حروف کے لئے منفرد طور پر نامزد کردار تسلسل کی ایک فہرست رکھتا ہے۔,یونیکوڈ میں کچھ تجریدی حروف کی نمائندگی کیسے کی جاتی ہے؟,False,False
72,273,7,5acd142f07355d001abf3390,یونیکوڈ,یونیکوڈ کے ذریعہ بیان کردہ گرافک اور فارمیٹ حروف کا سیٹ براہ راست تجریدی حروف کے ذخیرے سے مطابقت نہیں رکھتا ہے جو یونیکوڈ کے تحت نمائندگی کی جاسکتی ہے۔ یونیکوڈ ایک تجریدی کردار کو کسی خاص کوڈ پوائنٹ کے ساتھ جوڑ کر حروف کو انکوڈ کرتا ہے۔ تاہم ، تمام تجریدی حروف کو ایک ہی یونیکوڈ کردار کے طور پر انکوڈ نہیں کیا جاتا ہے ، اور کچھ تجریدی حروف کو یونیکوڈ میں دو یا اس سے زیادہ حروف کی ترتیب سے نمائندگی کی جاسکتی ہے۔ مثال کے طور پر ، ایک لاطینی چھوٹا خط i جس میں ••اوگونیک•• ، ایک نقطہ اوپر ، اور ایک تیز تلفظ ہے ، جو لتھوانیائی میں ضروری ہے ، کی نمائندگی کردار تسلسل U+012F ، U+0307 ، U+0301 کے ذریعہ کی جاتی ہے۔ یونیکوڈ ان تجریدی حروف کے لئے منفرد طور پر نامزد کردار تسلسل کی ایک فہرست برقرار رکھتا ہے۔,ایک تیز لہجے کے لئے ایک اور نام کیا ہے؟,True,False
73,273,7,5acd142f07355d001abf3391,یونیکوڈ,یونیکوڈ کے ذریعہ بیان کردہ گرافک اور فارمیٹ حروف کا سیٹ براہ راست تجریدی حروف کے ذخیرے سے مطابقت نہیں رکھتا ہے جو یونیکوڈ کے تحت نمائندگی کی جاسکتی ہے۔ یونیکوڈ ایک تجریدی کردار کو کسی خاص کوڈ پوائنٹ کے ساتھ جوڑ کر حروف کو انکوڈ کرتا ہے۔ تاہم ، تمام تجریدی حروف کو ایک ہی یونیکوڈ کردار کے طور پر انکوڈ نہیں کیا جاتا ہے ، اور کچھ تجریدی حروف کو یونیکوڈ میں دو یا اس سے زیادہ حروف کی ترتیب سے نمائندگی کی جاسکتی ہے۔ مثال کے طور پر ، لاطینی چھوٹا خط i ••ایک اوگونک ، اوپر ایک نقطہ ، اور ایک تیز تلفظ•• کے ساتھ ، جو لتھوانیائی میں ضروری ہے ، کی نمائندگی کردار تسلسل U+012F ، U+0307 ، U+0301 کے ذریعہ کی جاتی ہے۔ یونیکوڈ ان تجریدی حروف کے لئے منفرد طور پر نامزد کردار تسلسل کی ایک فہرست برقرار رکھتا ہے۔,لاطینی زبان کے لئے کیا ضرورت ہے؟,True,False
74,273,7,5acd142f07355d001abf3392,یونیکوڈ,یونیکوڈ کے ذریعہ بیان کردہ گرافک اور فارمیٹ حروف کا سیٹ براہ راست تجریدی حروف کے ذخیرے سے مطابقت نہیں رکھتا ہے جو یونیکوڈ کے تحت نمائندگی کی جاسکتی ہے۔ یونیکوڈ ایک تجریدی کردار کو ••ایک خاص کوڈ پوائنٹ•• کے ساتھ جوڑ کر حروف کو انکوڈ کرتا ہے۔ تاہم ، تمام تجریدی حروف کو ایک ہی یونیکوڈ کردار کے طور پر انکوڈ نہیں کیا جاتا ہے ، اور کچھ تجریدی حروف کو یونیکوڈ میں دو یا اس سے زیادہ حروف کی ترتیب کے ذریعہ نمائندگی کی جاسکتی ہے۔ مثال کے طور پر ، ایک لاطینی چھوٹا خط i جس میں اوگونک ، ایک نقطہ اوپر ، اور ایک تیز تلفظ ہے ، جو لتھوانیائی زبان میں ضروری ہے ، اس کی نمائندگی کردار تسلسل U+012F ، U+0307 ، U+0301 کے ذریعہ کی جاتی ہے۔ یونیکوڈ ان تجریدی حروف کے لئے منفرد طور پر نامزد کردار تسلسل کی ایک فہرست برقرار رکھتا ہے۔,فارمیٹ حروف کس کے ساتھ منسلک ہیں؟,True,False
75,273,7,5acd142f07355d001abf3393,یونیکوڈ,یونیکوڈ کے ذریعہ بیان کردہ گرافک اور فارمیٹ حروف کا مجموعہ براہ راست ••تجریدی حروف کے ذخیرے•• سے مطابقت نہیں رکھتا ہے جو یونیکوڈ کے تحت نمائندگی کی جاسکتی ہے۔ یونیکوڈ ایک تجریدی کردار کو کسی خاص کوڈ پوائنٹ کے ساتھ جوڑ کر حروف کو انکوڈ کرتا ہے۔ تاہم ، تمام تجریدی حروف کو ایک ہی یونیکوڈ کردار کے طور پر انکوڈ نہیں کیا جاتا ہے ، اور کچھ تجریدی حروف کو یونیکوڈ میں دو یا اس سے زیادہ حروف کی ترتیب کے ذریعہ نمائندگی کی جاسکتی ہے۔ مثال کے طور پر ، ایک لاطینی چھوٹا خط i جس میں اوگونک ، ایک نقطہ اوپر ، اور ایک تیز تلفظ ہے ، جو لتھوانیائی زبان میں ضروری ہے ، اس کی نمائندگی کردار تسلسل U+012F ، U+0307 ، U+0301 کے ذریعہ کی جاتی ہے۔ یونیکوڈ منفرد طور پر نامزد کردار تسلسل کی ایک فہرست برقرار رکھتا ہے۔,گرافک حروف کے سیٹ براہ راست کس سے مطابقت رکھتے ہیں؟,True,False
76,273,7,5acd142f07355d001abf3394,یونیکوڈ,یونیکوڈ کے ذریعہ بیان کردہ گرافک اور فارمیٹ حروف کا سیٹ براہ راست تجریدی حروف کے ذخیرے سے مطابقت نہیں رکھتا ہے جو یونیکوڈ کے تحت نمائندگی کی جاسکتی ہے۔ یونیکوڈ ایک تجریدی کردار کو کسی خاص کوڈ پوائنٹ کے ساتھ جوڑ کر حروف کو انکوڈ کرتا ہے۔ تاہم ، تمام ••تجریدی حروف•• کو ایک ہی یونیکوڈ کردار کے طور پر انکوڈ نہیں کیا جاتا ہے ، اور کچھ تجریدی حروف کو یونیکوڈ میں دو یا اس سے زیادہ حروف کی ترتیب کے ذریعہ نمائندگی کی جاسکتی ہے۔ مثال کے طور پر ، ایک لاطینی چھوٹا خط i جس میں اوگونک ، ایک نقطہ اوپر ، اور ایک تیز تلفظ ہے ، جو لتھوانیائی زبان میں ضروری ہے ، اس کی نمائندگی کردار تسلسل U+012F ، U+0307 ، U+0301 کے ذریعہ کی جاتی ہے۔ یونیکوڈ ان تجریدی حروف کے لئے منفرد طور پر نامزد کردار تسلسل کی ایک فہرست برقرار رکھتا ہے۔,کیا سب منفرد یونیکوڈ حروف کے طور پر انکوڈ کر رہے ہیں؟,True,False
77,273,8,5727e8362ca10214002d9934,یونیکوڈ,تمام گرافک ، فارمیٹ ، اور نجی استعمال کے حروف کا ایک انوکھا اور غیر تبدیل شدہ نام ہوتا ہے جس کے ذریعہ ان کی شناخت کی جاسکتی ہے۔ اس غیر تبدیل ہونے کی ضمانت یونیکوڈ ورژن 2.0 کے بعد سے ••نام استحکام کی پالیسی•• کے ذریعہ دی گئی ہے۔ ایسے معاملات میں جہاں نام سنجیدگی سے عیب دار اور گمراہ کن ہو ، یا اس میں سنگین ٹائپوگرافک غلطی ہو ، ایک باضابطہ عرفی نام کی وضاحت کی جاسکتی ہے ، اور ایپلی کیشنز کو سرکاری کردار کے نام کی جگہ باضابطہ عرفی نام استعمال کرنے کی ترغیب دی جاتی ہے۔ مثال کے طور پر ، U+A015  ⁇  YI SYLLABLE WU میں باضابطہ عرفی نام yi حرفی تکرار نشان ہے ، اور U+FE18  ⁇  PRESENT FORM VERTICAL RIGHTITE LICULAR BRAKCET (sic) میں عمودی دائیں سفید لینٹیکل بریکٹ کے لئے باضابطہ عرفی شکل ہے۔,کس پالیسی نے اس بات کی ضمانت دی کہ کرداروں کا ایک منفرد اور غیر تبدیل شدہ نام ہو؟,False,False
78,273,8,5727e8362ca10214002d9935,یونیکوڈ,تمام گرافک ، فارمیٹ ، اور نجی استعمال کے حروف کا ایک انوکھا اور غیر تبدیل شدہ نام ہوتا ہے جس کے ذریعہ ان کی شناخت کی جاسکتی ہے۔ اس غیر تبدیل ہونے کی ضمانت یونیکوڈ ورژن 2.0 کے بعد سے نام استحکام کی پالیسی کے ذریعہ دی گئی ہے۔ ایسے معاملات میں جہاں نام سنجیدگی سے عیب دار اور گمراہ کن ہو ، یا اس میں سنگین ٹائپوگرافک غلطی ہو ، ••ایک باضابطہ عرفی نام کی وضاحت کی جاسکتی ہے•• ، اور ایپلی کیشنز کو سرکاری کردار کے نام کی جگہ باضابطہ عرفی نام استعمال کرنے کی ترغیب دی جاتی ہے۔ مثال کے طور پر ، U+A015  ⁇  YI SYLLABLE WU میں باضابطہ عرفی نام yi حرفی تکرار نشان ہے ، اور U+FE18  ⁇  PRESENTATION FORM FOR VERTICAL RIGHT WHITE LENTICULAR BRAKET (sic) میں عمودی دائیں سفید لینٹیکل بریکٹ کے لئے باضابطہ عرفی پریزنٹیشن فارم ہے۔,جب کوئی نام ناقص یا گمراہ کن ہو تو کیا ہوتا ہے؟,False,False
79,273,8,5727e8362ca10214002d9936,یونیکوڈ,تمام گرافک ، فارمیٹ ، اور نجی استعمال کے حروف کا ایک انوکھا اور غیر تبدیل ہونے والا نام ہوتا ہے جس کے ذریعہ ان کی شناخت کی جاسکتی ہے۔ اس غیر تبدیل ہونے کی ضمانت ••یونیکوڈ ورژن 2.0 کے بعد سے•• نام استحکام کی پالیسی کے ذریعہ دی گئی ہے۔ ایسے معاملات میں جہاں نام سنجیدگی سے عیب دار اور گمراہ کن ہو ، یا اس میں سنگین ٹائپوگرافک غلطی ہو ، ایک باضابطہ عرفی نام کی وضاحت کی جاسکتی ہے ، اور ایپلی کیشنز کو سرکاری کردار کے نام کی جگہ باضابطہ عرفی نام استعمال کرنے کی ترغیب دی جاتی ہے۔ مثال کے طور پر ، U+A015  ⁇  YI SYLLABLE WU میں باضابطہ عرفی نام yi syllable iteration mark ہے ، اور U+FE18  ⁇  PRESENTATION FORM VERTICAL RIGHT WHITE LENTICULAR BRAKCET (sic) میں باضابطہ عرفی پریزنٹیشن فارم ہے۔,اس نام کی غیر متزلزل ہونے کی ضمانت کب تک دی گئی ہے؟,False,False
80,273,8,5acd157607355d001abf33de,یونیکوڈ,تمام گرافک ، فارمیٹ ، اور نجی استعمال کے حروف کا ایک انوکھا اور غیر تبدیل شدہ نام ہوتا ہے جس کے ذریعہ ان کی شناخت کی جاسکتی ہے۔ اس غیر تبدیل ہونے کی ضمانت یونیکوڈ ورژن 2.0 کے بعد سے ••نام استحکام•• کی پالیسی کے ذریعہ دی گئی ہے۔ ایسے معاملات میں جہاں نام سنجیدگی سے عیب دار اور گمراہ کن ہو ، یا اس میں سنگین ٹائپوگرافک غلطی ہو ، ایک باضابطہ عرفی نام کی وضاحت کی جاسکتی ہے ، اور ایپلی کیشنز کو سرکاری کردار کے نام کی جگہ باضابطہ عرفی نام استعمال کرنے کی ترغیب دی جاتی ہے۔ مثال کے طور پر ، U+A015  ⁇  YI SYLLABLE WU میں باضابطہ عرفی نام yi syllable iteration mark ہے ، اور U+FE18  ⁇  PRESENTATION FORM VERTICAL RIGHT WHITE LENTICULAR BRAKCET (sic) میں عمودی دائیں لینٹیکل سفید بریکٹ کے لئے باضابطہ عرفی شکل ہے۔,کس پالیسی نے گمراہ کن کرداروں کی نشاندہی کی؟,True,False
81,273,8,5acd157607355d001abf33df,یونیکوڈ,تمام گرافک ، فارمیٹ ، اور نجی استعمال کے حروف کا ایک انوکھا اور غیر تبدیل شدہ نام ہوتا ہے جس کے ذریعہ ان کی شناخت کی جاسکتی ہے۔ اس غیر تبدیل ہونے کی ضمانت یونیکوڈ ورژن 2.0 کے بعد سے نام استحکام کی پالیسی کے ذریعہ دی گئی ہے۔ ایسے معاملات میں جہاں نام سنجیدگی سے عیب دار اور گمراہ کن ہو ، یا اس میں سنگین ٹائپوگرافک غلطی ہو ، ایک باضابطہ عرفی نام کی وضاحت کی جاسکتی ہے ، اور ایپلی کیشنز کو ••سرکاری کردار کا نام•• کی جگہ باضابطہ عرفی نام استعمال کرنے کی ترغیب دی جاتی ہے۔ مثال کے طور پر ، U+A015  ⁇  YI SYLLABLE WU میں باضابطہ عرفی نام yi حرفی تکرار نشان ہے ، اور U+FE18  ⁇  PRESENTATION FORM FOR VERTICAL RIGHT WHITE LENTICULAR BRAKET (sic) میں عمودی دائیں سفید لینٹیکل بریکٹ کے لئے باضابطہ عرفی پریزنٹیشن فارم ہے۔,جب کوئی غلطی پائی جاتی ہے تو، رسمی عرفی نام کی جگہ کیا استعمال کیا جاتا ہے؟,True,False
82,273,8,5acd157607355d001abf33e0,یونیکوڈ,تمام گرافک ، فارمیٹ ، اور نجی استعمال کے حروف کا ایک انوکھا اور غیر تبدیل شدہ نام ہوتا ہے جس کے ذریعہ ان کی شناخت کی جاسکتی ہے۔ اس غیر تبدیل ہونے کی ضمانت ••یونیکوڈ ورژن 2.0•• کے بعد سے نام استحکام کی پالیسی کے ذریعہ دی گئی ہے۔ ایسے معاملات میں جہاں نام سنجیدگی سے عیب دار اور گمراہ کن ہو ، یا اس میں سنگین ٹائپوگرافک غلطی ہو ، ایک باضابطہ عرفی نام کی وضاحت کی جاسکتی ہے ، اور ایپلی کیشنز کو سرکاری کردار کے نام کی جگہ باضابطہ عرفی نام استعمال کرنے کی ترغیب دی جاتی ہے۔ مثال کے طور پر ، U+A015  ⁇  YI SYLLABLE WU میں باضابطہ عرفی نام yi syllable iteration mark ہے ، اور U+FE18  ⁇  PRESENTATION FORM VERTICAL RIGHT WHITE LENTICULAR BRAKCET (sic) میں عمودی سفید دائیں لینٹیکل بریکٹ کے لئے باضابطہ عرفی پریزنٹیشن فارم ہے۔,باضابطہ عرفی نام یی کب بنایا گیا تھا؟,True,False
83,273,8,5acd157607355d001abf33e1,یونیکوڈ,تمام گرافک ، فارمیٹ ، اور نجی استعمال کے حروف کا ایک انوکھا اور غیر تبدیل شدہ نام ہوتا ہے جس کے ذریعہ ان کی شناخت کی جاسکتی ہے۔ اس غیر تبدیل ہونے کی ضمانت یونیکوڈ ورژن 2.0 کے بعد سے نام استحکام کی پالیسی کے ذریعہ دی گئی ہے۔ ایسے معاملات میں جہاں نام سنجیدگی سے عیب دار اور گمراہ کن ہو ، یا اس میں سنگین ٹائپوگرافک غلطی ہو ، ایک باضابطہ عرفی نام کی وضاحت کی جاسکتی ہے ، اور ایپلی کیشنز کو سرکاری کردار کے نام کی جگہ باضابطہ عرفی نام استعمال کرنے کی ترغیب دی جاتی ہے۔ مثال کے طور پر ، ••U+A015  ⁇  YI SYLLABLE WU•• میں باضابطہ عرفی نام yi حرفی تکرار نشان ہے ، اور U+FE18  ⁇  PRESENT FORM VERTICAL RIGHTITE LICULAR BRAKCET (sic) میں عمودی دائیں سفید لینٹیکل بریکٹ کے لئے باضابطہ عرفی شکل ہے۔,ایک علامت کی ایک مثال کیا ہے جو رسمی عرفی نام کا استعمال نہیں کرتی ہے؟,True,False
84,273,8,5acd157607355d001abf33e2,یونیکوڈ,تمام ••گرافک ، فارمیٹ ، اور نجی استعمال•• حروف کا ایک منفرد اور غیر تبدیل شدہ نام ہوتا ہے جس کے ذریعہ ان کی شناخت کی جاسکتی ہے۔ اس غیر تبدیل ہونے کی ضمانت یونیکوڈ ورژن 2.0 کے بعد سے نام استحکام کی پالیسی کے ذریعہ دی گئی ہے۔ ایسے معاملات میں جہاں نام سنجیدگی سے عیب دار اور گمراہ کن ہو ، یا اس میں سنگین ٹائپوگرافک غلطی ہو ، ایک باضابطہ عرفی نام کی وضاحت کی جاسکتی ہے ، اور ایپلی کیشنز کو سرکاری کردار کے نام کی جگہ باضابطہ عرفی نام استعمال کرنے کی ترغیب دی جاتی ہے۔ مثال کے طور پر ، U+A015  ⁇  YI SYLLABLE WU میں باضابطہ عرفی نام yi حرفی تکرار نشان ہے ، اور U+FE18  ⁇  PRESENT FORM VERTICAL RIGHTITE LICULAR BRAKCET (sic) میں عمودی دائیں سفید لینٹیکل بریکٹ کے لئے باضابطہ عرفی شکل ہے۔,کس قسم کے حروف کے منفرد نام نہیں ہوتے؟,True,False
85,273,9,5727e8cc4b864d1900163fcc,یونیکوڈ,یونیکوڈ کو ••انٹرنیشنل آرگنائزیشن فار اسٹینڈرڈائزیشن•• کے ساتھ مل کر تیار کیا گیا ہے اور یہ آئی ایس او / آئی ای سی 10646: یونیورسل کریکٹر سیٹ کے ساتھ کردار کا ذخیرہ بانٹتا ہے۔ یونیکوڈ اور آئی ایس او / آئی ای سی 10646 کردار انکوڈنگ کے طور پر مساوی طور پر کام کرتے ہیں ، لیکن یونیکوڈ معیاری میں عملدرآمد کرنے والوں کے لئے بہت زیادہ معلومات شامل ہیں ، جس میں بٹ وار انکوڈنگ ، مجموعہ اور رینڈرنگ جیسے موضوعات کا احاطہ کیا گیا ہے۔ یونیکوڈ معیاری متعدد کردار کی خصوصیات کی فہرست دیتا ہے ، بشمول وہ جو دو طرفہ متن کی حمایت کے لئے درکار ہیں۔ دونوں معیارات تھوڑا سا مختلف اصطلاحات استعمال کرتے ہیں۔,یونیکوڈ کس کے ساتھ مل کر تیار کیا گیا تھا؟,False,False
86,273,9,5727e8cc4b864d1900163fcd,یونیکوڈ,یونیکوڈ انٹرنیشنل آرگنائزیشن فار اسٹینڈرڈائزیشن کے ساتھ مل کر تیار کیا گیا ہے اور آئی ایس او / آئی ای سی 10646 کے ساتھ کردار کا ذخیرہ شیئر کرتا ہے: ••یونیورسل کریکٹر سیٹ••۔ یونیکوڈ اور آئی ایس او / آئی ای سی 10646 کردار انکوڈنگ کے طور پر مساوی طور پر کام کرتے ہیں ، لیکن یونیکوڈ معیاری میں عملدرآمد کرنے والوں کے لئے بہت زیادہ معلومات شامل ہیں ، جس میں بٹ وار انکوڈنگ ، مجموعہ اور رینڈرنگ جیسے موضوعات کا احاطہ کیا گیا ہے۔ یونیکوڈ معیاری متعدد کردار کی خصوصیات کی فہرست دیتا ہے ، جن میں دو طرفہ متن کی حمایت کے لئے درکار ہیں۔ دونوں معیارات تھوڑا سا مختلف اصطلاحات کا استعمال کرتے ہیں۔,یونیکوڈ کس کے ساتھ کردار کا ذخیرہ بانٹتا ہے؟,False,False
87,273,9,5727e8cc4b864d1900163fce,یونیکوڈ,یونیکوڈ انٹرنیشنل آرگنائزیشن فار اسٹینڈرڈائزیشن کے ساتھ مل کر تیار کیا گیا ہے اور آئی ایس او / آئی ای سی 10646: یونیورسل کریکٹر سیٹ کے ساتھ کردار کا ذخیرہ شیئر کرتا ہے۔ یونیکوڈ اور آئی ایس او / آئی ای سی 10646 کردار انکوڈنگ کے طور پر یکساں طور پر کام کرتے ہیں ، لیکن ••یونیکوڈ اسٹینڈرڈ•• میں عملدرآمد کرنے والوں کے لئے بہت زیادہ معلومات شامل ہیں ، جس میں بٹ وار انکوڈنگ ، مجموعہ اور رینڈرنگ جیسے موضوعات کا احاطہ کیا گیا ہے۔ یونیکوڈ اسٹینڈرڈ میں دو طرفہ متن کی حمایت کے لئے درکار خصوصیات سمیت متعدد کرداروں کی فہرست دی گئی ہے۔ دونوں معیارات قدرے مختلف اصطلاحات کا استعمال کرتے ہیں۔,بٹ وار انکوڈنگ، کولیشن، اور رینڈرنگ جیسے موضوعات میں کیا شامل ہے؟,False,False
88,273,9,5727e8cc4b864d1900163fcf,یونیکوڈ,یونیکوڈ انٹرنیشنل آرگنائزیشن فار اسٹینڈرڈائزیشن کے ساتھ مل کر تیار کیا گیا ہے اور آئی ایس او / آئی ای سی 10646: یونیورسل کریکٹر سیٹ کے ساتھ کردار کا ذخیرہ شیئر کرتا ہے۔ یونیکوڈ اور آئی ایس او / آئی ای سی 10646 کردار انکوڈنگ کے طور پر مساوی طور پر کام کرتے ہیں ، لیکن یونیکوڈ معیاری میں عملدرآمد کرنے والوں کے لئے بہت زیادہ معلومات شامل ہیں ، جس میں بٹ وار انکوڈنگ ، تصنیف اور رینڈرنگ جیسے موضوعات کا احاطہ کیا گیا ہے۔ یونیکوڈ معیاری متعدد کردار کی خصوصیات کی فہرست دیتا ہے ، جن میں دو طرفہ متن کی حمایت کے لئے درکار ہیں۔ دونوں معیارات ••تھوڑا سا مختلف اصطلاحات•• استعمال کرتے ہیں۔,دونوں معیارات میں کیا فرق ہے؟,False,False
89,273,9,5acd15fa07355d001abf3404,یونیکوڈ,یونیکوڈ کو ••انٹرنیشنل آرگنائزیشن فار اسٹینڈرڈائزیشن•• کے ساتھ مل کر تیار کیا گیا ہے اور یہ آئی ایس او / آئی ای سی 10646: یونیورسل کریکٹر سیٹ کے ساتھ کردار کا ذخیرہ بانٹتا ہے۔ یونیکوڈ اور آئی ایس او / آئی ای سی 10646 کردار انکوڈنگ کے طور پر مساوی طور پر کام کرتے ہیں ، لیکن یونیکوڈ معیاری میں عملدرآمد کرنے والوں کے لئے بہت زیادہ معلومات شامل ہیں ، جس میں بٹ وار انکوڈنگ ، مجموعہ اور رینڈرنگ جیسے موضوعات کا احاطہ کیا گیا ہے۔ یونیکوڈ معیاری متعدد کردار کی خصوصیات کی فہرست دیتا ہے ، بشمول وہ جو دو طرفہ متن کی حمایت کے لئے درکار ہیں۔ دونوں معیارات تھوڑا سا مختلف اصطلاحات استعمال کرتے ہیں۔,آئی او ایس / آئی ای سی 10646 کے لئے کردار کا ذخیرہ کس نے بنایا؟,True,False
90,273,9,5acd15fa07355d001abf3405,یونیکوڈ,یونیکوڈ کو انٹرنیشنل آرگنائزیشن فار اسٹینڈرڈائزیشن کے ساتھ مل کر تیار کیا گیا ہے اور یہ ••ISO/IEC 10646••: یونیورسل کریکٹر سیٹ کے ساتھ کردار کا ذخیرہ بانٹتا ہے۔ یونیکوڈ اور ISO/IEC 10646 کردار انکوڈنگ کے طور پر مساوی طور پر کام کرتے ہیں ، لیکن یونیکوڈ معیاری میں عملدرآمد کرنے والوں کے لئے بہت زیادہ معلومات شامل ہیں ، جس میں بٹ وار انکوڈنگ ، مجموعہ اور رینڈرنگ جیسے موضوعات کا احاطہ کیا گیا ہے۔ یونیکوڈ معیاری متعدد کردار کی خصوصیات کی فہرست دیتا ہے ، بشمول وہ جو دو طرفہ متن کی حمایت کے لئے درکار ہیں۔ دونوں معیارات تھوڑا سا مختلف اصطلاحات کا استعمال کرتے ہیں۔,یونیکوڈ کا ایک اور نام کیا ہے؟,True,False
91,273,9,5acd15fa07355d001abf3406,یونیکوڈ,••یونیکوڈ•• انٹرنیشنل آرگنائزیشن فار اسٹینڈرڈائزیشن کے ساتھ مل کر تیار کیا گیا ہے اور آئی ایس او / آئی ای سی 10646: یونیورسل کریکٹر سیٹ کے ساتھ کردار کا ذخیرہ شیئر کرتا ہے۔ یونیکوڈ اور آئی ایس او / آئی ای سی 10646 کردار انکوڈنگ کے طور پر مساوی طور پر کام کرتے ہیں ، لیکن یونیکوڈ معیاری میں عملدرآمد کرنے والوں کے لئے بہت زیادہ معلومات شامل ہیں ، جس میں بٹ وار انکوڈنگ ، مجموعہ اور رینڈرنگ جیسے موضوعات کا احاطہ کیا گیا ہے۔ یونیکوڈ معیاری متعدد کردار کی خصوصیات کی فہرست دیتا ہے ، جن میں دو طرفہ متن کی حمایت کے لئے درکار ہیں۔ دونوں معیارات تھوڑا سا مختلف اصطلاحات کا استعمال کرتے ہیں۔,یو سی ایس کے ساتھ ساتھ کیا تیار کیا جاتا ہے؟,True,False
92,273,9,5acd15fa07355d001abf3407,یونیکوڈ,یونیکوڈ انٹرنیشنل آرگنائزیشن فار اسٹینڈرڈائزیشن کے ساتھ مل کر تیار کیا گیا ہے اور آئی ایس او / آئی ای سی 10646: یونیورسل کریکٹر سیٹ کے ساتھ کردار کا ذخیرہ شیئر کرتا ہے۔ یونیکوڈ اور آئی ایس او / آئی ای سی 10646 کردار انکوڈنگ کے طور پر مساوی طور پر کام کرتے ہیں ، لیکن یونیکوڈ معیاری میں ••نفاذ کنندگان•• کے لئے بہت زیادہ معلومات شامل ہیں ، جس میں بٹ وار انکوڈنگ ، مجموعہ اور رینڈرنگ جیسے موضوعات کا احاطہ کیا گیا ہے۔ یونیکوڈ معیاری متعدد کردار کی خصوصیات کی فہرست دیتا ہے ، جن میں دو طرفہ متن کی حمایت کے لئے درکار ہیں۔ دونوں معیارات تھوڑا سا مختلف اصطلاحات کا استعمال کرتے ہیں۔,یونیکوڈ میں کس بارے میں مزید معلومات ہیں؟,True,False
93,273,9,5acd15fa07355d001abf3408,یونیکوڈ,یونیکوڈ انٹرنیشنل آرگنائزیشن فار اسٹینڈرڈائزیشن کے ساتھ مل کر تیار کیا گیا ہے اور آئی ایس او / آئی ای سی 10646: یونیورسل کریکٹر سیٹ کے ساتھ کردار کا ذخیرہ شیئر کرتا ہے۔ ••یونیکوڈ اور آئی ایس او / آئی ای سی 10646•• کردار انکوڈنگ کے طور پر مساوی طور پر کام کرتے ہیں ، لیکن یونیکوڈ معیاری میں عملدرآمد کرنے والوں کے لئے بہت زیادہ معلومات شامل ہیں ، جس میں بٹ وار انکوڈنگ ، مجموعہ اور رینڈرنگ جیسے موضوعات کا احاطہ کیا گیا ہے۔ یونیکوڈ معیاری متعدد کردار کی خصوصیات کی فہرست دیتا ہے ، جن میں دو طرفہ متن کی حمایت کے لئے درکار ہیں۔ دونوں معیارات تھوڑا سا مختلف اصطلاحات کا استعمال کرتے ہیں۔,کس کے پاس مختلف کرداروں کا ذخیرہ ہے؟,True,False
94,273,10,5727e93b4b864d1900163fd4,یونیکوڈ,کنسورشیم نے پہلی بار ••1991•• میں یونیکوڈ اسٹینڈرڈ (آئی ایس بی این 0-321-18578-1) شائع کیا اور اس اصل کام کی بنیاد پر معیارات تیار کرنا جاری رکھا ہے۔ معیار کا تازہ ترین ورژن ، یونیکوڈ 8.0 ، جون 2015 میں جاری کیا گیا تھا اور کنسورشیم کی ویب سائٹ سے دستیاب ہے۔ آخری اہم ورژن (ورژن x.0) جو کتاب کی شکل میں شائع کیا جائے گا وہ یونیکوڈ 5.0 (آئی ایس بی این 0-321-48091-0) تھا ، لیکن یونیکوڈ 6.0 کے بعد سے معیار کا مکمل متن اب کتاب کی شکل میں شائع نہیں کیا جارہا ہے۔ تاہم ، 2012 میں ، یہ اعلان کیا گیا تھا کہ یونیکوڈ ورژن 6.1 کے لئے صرف بنیادی وضاحتیں 692 صفحات پرنٹ آن ڈیمانڈ پیپر بیک کے طور پر دستیاب کی جائیں گی۔ معیار کے پچھلے بڑے ورژن پرنٹ کے برعکس ، پرنٹ آن ڈیمانڈ وضاحتیں میں کوئی بنیادی کوڈ یا معیاری چارٹ شامل نہیں ہیں ، لیکن بنیادی وضاحتیں سمیت پورے معیار اب بھی یونیکوڈ ویب سائٹ پر آزادانہ طور پر دستیاب رہیں گے۔,یونیکوڈ معیاری پہلی بار کب شائع کیا گیا تھا؟,False,False
95,273,10,5727e93b4b864d1900163fd5,یونیکوڈ,کنسورشیم نے پہلی بار 1991 میں یونیکوڈ اسٹینڈرڈ (آئی ایس بی این 0-321-18578-1) شائع کیا اور اس اصل کام کی بنیاد پر معیارات تیار کرنا جاری رکھا ہے۔ معیار کا تازہ ترین ورژن ، یونیکوڈ 8.0 ، ••جون 2015•• میں جاری کیا گیا تھا اور کنسورشیم کی ویب سائٹ سے دستیاب ہے۔ آخری اہم ورژن (ورژن x.0) جو کتاب کی شکل میں شائع کیا جائے گا وہ یونیکوڈ 5.0 (آئی ایس بی این 0-321-48091-0) تھا ، لیکن یونیکوڈ 6.0 کے بعد سے معیار کا مکمل متن اب کتاب کی شکل میں شائع نہیں کیا جارہا ہے۔ تاہم ، 2012 میں ، یہ اعلان کیا گیا تھا کہ یونیکوڈ ورژن 6.1 کے لئے صرف بنیادی وضاحتیں 692 صفحات پرنٹ آن ڈیمانڈ پیپر بیک کے طور پر دستیاب کی جائیں گی۔ معیار کے پچھلے بڑے ورژن پرنٹ کے برعکس ، پرنٹ آن ڈیمانڈ وضاحتیں میں کوئی بنیادی کوڈ یا معیاری چارٹ شامل نہیں ہیں ، لیکن بنیادی وضاحتیں سمیت پورے معیارات اب بھی یونیکوڈ ویب سائٹ پر آزادانہ طور پر دستیاب رہیں گے۔,تازہ ترین ورژن ، یونیکوڈ 8.0 کب جاری کیا گیا تھا؟,False,False
96,273,10,5727e93b4b864d1900163fd6,یونیکوڈ,کنسورشیم نے پہلی بار 1991 میں یونیکوڈ اسٹینڈرڈ (آئی ایس بی این 0-321-18578-1) شائع کیا اور اس اصل کام کی بنیاد پر معیارات تیار کرنا جاری رکھا ہے۔ معیار کا تازہ ترین ورژن ، یونیکوڈ 8.0 ، جون 2015 میں جاری کیا گیا تھا اور کنسورشیم کی ویب سائٹ سے دستیاب ہے۔ کتاب کی شکل میں شائع ہونے والا آخری اہم ورژن (ورژن x.0) ••یونیکوڈ 5.0•• (آئی ایس بی این 0-321-48091-0) تھا ، لیکن یونیکوڈ 6.0 کے بعد سے معیار کا مکمل متن اب کتاب کی شکل میں شائع نہیں کیا جارہا ہے۔ تاہم ، 2012 میں ، یہ اعلان کیا گیا تھا کہ یونیکوڈ ورژن 6.1 کے لئے صرف بنیادی وضاحتیں 692 صفحات پرنٹ آن ڈیمانڈ پیپر بیک کے طور پر دستیاب کی جائیں گی۔ معیار کے پچھلے بڑے ورژن پرنٹ کے برعکس ، پرنٹ آن ڈیمانڈ وضاحتیں میں کوئی بنیادی کوڈ یا معیاری ضمیمہ چارٹ شامل نہیں ہے ، لیکن بنیادی وضاحتیں سمیت پورے معیار اب بھی یونیکوڈ ویب سائٹ پر آزادانہ طور پر دستیاب رہیں گے۔,کتاب کی شکل میں شائع ہونے والا یونیکوڈ کا آخری اہم ورژن کیا تھا؟,False,False
97,273,10,5727e93b4b864d1900163fd7,یونیکوڈ,کنسورشیم نے پہلی بار 1991 میں یونیکوڈ اسٹینڈرڈ (آئی ایس بی این 0-321-18578-1) شائع کیا اور اس اصل کام کی بنیاد پر معیارات تیار کرنا جاری رکھا ہے۔ معیار کا تازہ ترین ورژن ، یونیکوڈ 8.0 ، جون 2015 میں جاری کیا گیا تھا اور کنسورشیم کی ویب سائٹ سے دستیاب ہے۔ کتاب کی شکل میں شائع ہونے والا آخری اہم ورژن (ورژن x.0) یونیکوڈ 5.0 (آئی ایس بی این 0-321-48091-0) تھا ، لیکن یونیکوڈ 6.0 کے بعد سے معیار کا مکمل متن اب کتاب کی شکل میں شائع نہیں کیا جارہا ہے۔ ••2012•• میں ، تاہم ، یہ اعلان کیا گیا تھا کہ یونیکوڈ ورژن 6.1 کے لئے صرف بنیادی وضاحتیں 692 صفحات پرنٹ آن ڈیمانڈ پیپر بیک کے طور پر دستیاب کی جائیں گی۔ معیار کے پچھلے بڑے ورژن پرنٹ کے برعکس ، پرنٹ آن ڈیمانڈ وضاحتیں میں کوئی بنیادی کوڈ یا معیاری چارٹ شامل نہیں ہیں ، لیکن بنیادی وضاحتیں سمیت پورے معیارات اب بھی یونیکوڈ ویب سائٹ پر آزادانہ طور پر دستیاب رہیں گے۔,کس سال یہ اعلان کیا گیا تھا کہ صرف یونیکوڈ کے لئے بنیادی وضاحتیں جسمانی شکل میں پرنٹ کی جائیں گی؟,False,False
98,273,10,5727e93b4b864d1900163fd8,یونیکوڈ,کنسورشیم نے پہلی بار 1991 میں یونیکوڈ معیاری (آئی ایس بی این 0-321-18578-1) شائع کیا اور اس اصل کام کی بنیاد پر معیارات تیار کرنا جاری رکھا ہے۔ معیار کا تازہ ترین ورژن ، یونیکوڈ 8.0 ، جون 2015 میں جاری کیا گیا تھا اور کنسورشیم کی ویب سائٹ سے دستیاب ہے۔ کتاب کی شکل میں شائع ہونے والا آخری اہم ورژن (ورژن x.0) یونیکوڈ 5.0 (آئی ایس بی این 0-321-48091-0) تھا ، لیکن یونیکوڈ 6.0 کے بعد سے معیار کا مکمل متن اب کتاب کی شکل میں شائع نہیں کیا جارہا ہے۔ تاہم ، 2012 میں ، یہ اعلان کیا گیا تھا کہ یونیکوڈ ورژن 6.1 کے لئے صرف بنیادی وضاحتیں 692 صفحات پرنٹ آن ڈیمانڈ پیپر بیک کے طور پر دستیاب کی جائیں گی۔ معیار کے پچھلے بڑے ورژن پرنٹنگ کے برعکس ، پرنٹ آن ڈیمانڈ معیاری وضاحتیں ••کوئی کوڈ یا معیاری ضمیمہ•• شامل نہیں کرتی ہیں ، لیکن بنیادی وضاحتیں سمیت پورے چارٹ اب بھی یونیکوڈ ویب سائٹ پر آزادانہ طور پر دستیاب رہیں گے۔,پرنٹ آن ڈیمانڈ، کور ورژن میں کیا شامل نہیں ہے؟,False,False
99,273,10,5acd1b1d07355d001abf3542,یونیکوڈ,کنسورشیم نے پہلی بار ••1991•• میں یونیکوڈ اسٹینڈرڈ (آئی ایس بی این 0-321-18578-1) شائع کیا اور اس اصل کام کی بنیاد پر معیارات تیار کرنا جاری رکھا ہے۔ معیار کا تازہ ترین ورژن ، یونیکوڈ 8.0 ، جون 2015 میں جاری کیا گیا تھا اور کنسورشیم کی ویب سائٹ سے دستیاب ہے۔ آخری اہم ورژن (ورژن x.0) جو کتاب کی شکل میں شائع کیا جائے گا وہ یونیکوڈ 5.0 (آئی ایس بی این 0-321-48091-0) تھا ، لیکن یونیکوڈ 6.0 کے بعد سے معیار کا مکمل متن اب کتاب کی شکل میں شائع نہیں کیا جارہا ہے۔ تاہم ، 2012 میں ، یہ اعلان کیا گیا تھا کہ یونیکوڈ ورژن 6.1 کے لئے صرف بنیادی وضاحتیں 692 صفحات پرنٹ آن ڈیمانڈ پیپر بیک کے طور پر دستیاب کی جائیں گی۔ معیار کے پچھلے بڑے ورژن پرنٹ کے برعکس ، پرنٹ آن ڈیمانڈ وضاحتیں میں کوئی بنیادی کوڈ یا معیاری چارٹ شامل نہیں ہیں ، لیکن بنیادی وضاحتیں سمیت پورے معیار اب بھی یونیکوڈ ویب سائٹ پر آزادانہ طور پر دستیاب رہیں گے۔,کنسورشیم کی بنیاد کب رکھی گئی تھی؟,True,False
100,273,10,5acd1b1d07355d001abf3543,یونیکوڈ,کنسورشیم نے پہلی بار 1991 میں یونیکوڈ اسٹینڈرڈ (آئی ایس بی این 0-321-18578-1) شائع کیا اور اس اصل کام کی بنیاد پر معیارات تیار کرنا جاری رکھا ہے۔ معیار کا تازہ ترین ورژن ، یونیکوڈ 8.0 ، ••جون•• 2015 میں جاری کیا گیا تھا اور کنسورشیم کی ویب سائٹ سے دستیاب ہے۔ آخری اہم ورژن (ورژن x.0) جو کتاب کی شکل میں شائع کیا جائے گا وہ یونیکوڈ 5.0 (آئی ایس بی این 0-321-48091-0) تھا ، لیکن یونیکوڈ 6.0 کے بعد سے معیار کا مکمل متن اب کتاب کی شکل میں شائع نہیں کیا جارہا ہے۔ تاہم ، 2012 میں ، یہ اعلان کیا گیا تھا کہ یونیکوڈ ورژن 6.1 کے لئے صرف بنیادی وضاحتیں 692 صفحات پرنٹ آن ڈیمانڈ پیپر بیک کے طور پر دستیاب کی جائیں گی۔ معیار کے پچھلے بڑے ورژن پرنٹنگ کے برعکس ، پرنٹ آن ڈیمانڈ وضاحتیں میں کوئی بنیادی کوڈ یا معیاری چارٹ شامل نہیں ہیں ، لیکن بنیادی وضاحتیں سمیت پورے معیار اب بھی یونیکوڈ ویب سائٹ پر آزادانہ طور پر دستیاب رہیں گے۔,کون سا مہینہ کنسورشیم نے سب سے پہلے یونیکوڈ شائع کیا؟,True,False
101,273,10,5acd1b1d07355d001abf3544,یونیکوڈ,کنسورشیم نے پہلی بار 1991 میں یونیکوڈ اسٹینڈرڈ (آئی ایس بی این 0-321-18578-1) شائع کیا اور اس اصل کام کی بنیاد پر معیارات تیار کرنا جاری رکھا ہے۔ معیار کا تازہ ترین ورژن ، یونیکوڈ 8.0 ، جون 2015 میں جاری کیا گیا تھا اور کنسورشیم کی ویب سائٹ سے دستیاب ہے۔ کتاب کی شکل میں شائع ہونے والا آخری اہم ورژن (ورژن x.0) یونیکوڈ 5.0 (آئی ایس بی این 0-321-48091-0) تھا ، لیکن یونیکوڈ 6.0 کے بعد سے معیار کا مکمل متن اب کتاب کی شکل میں شائع نہیں کیا جارہا ہے۔ ••2012•• میں ، تاہم ، یہ اعلان کیا گیا تھا کہ یونیکوڈ ورژن 6.1 کے لئے صرف بنیادی وضاحتیں 692 صفحات پرنٹ آن ڈیمانڈ پیپر بیک کے طور پر دستیاب کی جائیں گی۔ معیار کے پچھلے بڑے ورژن پرنٹ کے برعکس ، پرنٹ آن ڈیمانڈ وضاحتیں میں کوئی بنیادی کوڈ یا معیاری چارٹ شامل نہیں ہیں ، لیکن بنیادی وضاحتیں سمیت پورے معیارات اب بھی یونیکوڈ ویب سائٹ پر آزادانہ طور پر دستیاب رہیں گے۔,یہ کب اعلان کیا گیا تھا کہ یونیکوڈ اب کتاب کی شکل میں دستیاب نہیں ہوگا؟,True,False
102,273,10,5acd1b1d07355d001abf3545,یونیکوڈ,کنسورشیم نے پہلی بار 1991 میں یونیکوڈ اسٹینڈرڈ (آئی ایس بی این 0-321-18578-1) شائع کیا اور اس اصل کام کی بنیاد پر معیارات تیار کرنا جاری رکھا ہے۔ معیار کا تازہ ترین ورژن ، یونیکوڈ 8.0 ، جون 2015 میں جاری کیا گیا تھا اور کنسورشیم کی ویب سائٹ سے دستیاب ہے۔ کتاب کی شکل میں شائع ہونے والا آخری اہم ورژن (ورژن x.0) یونیکوڈ 5.0 (آئی ایس بی این 0-321-48091-0) تھا ، لیکن یونیکوڈ 6.0 کے بعد سے معیار کا مکمل متن اب کتاب کی شکل میں شائع نہیں کیا جارہا ہے۔ تاہم ، 2012 میں ، یہ اعلان کیا گیا تھا کہ یونیکوڈ ورژن 6.1 کے لئے صرف بنیادی وضاحتیں ••692•• صفحات پرنٹ آن ڈیمانڈ پیپر بیک کے طور پر دستیاب کی جائیں گی۔ معیار کے پچھلے بڑے ورژن پرنٹنگ کے برعکس ، پرنٹ آن ڈیمانڈ وضاحتیں میں کوئی بنیادی کوڈ یا معیاری چارٹ شامل نہیں ہیں ، لیکن بنیادی وضاحتیں سمیت پورے معیار اب بھی یونیکوڈ ویب سائٹ پر آزادانہ طور پر دستیاب رہیں گے۔,اصل یونیکوڈ معیاری کتنے صفحات کا تھا؟,True,False
103,273,10,5acd1b1d07355d001abf3546,یونیکوڈ,کنسورشیم نے پہلی بار 1991 میں یونیکوڈ اسٹینڈرڈ (آئی ایس بی این 0-321-18578-1) شائع کیا اور اس اصل کام کی بنیاد پر معیارات تیار کرنا جاری رکھا ہے۔ معیار کا تازہ ترین ورژن ، یونیکوڈ 8.0 ، جون 2015 میں جاری کیا گیا تھا اور کنسورشیم کی ویب سائٹ سے دستیاب ہے۔ کتاب کی شکل میں شائع ہونے والا آخری اہم ورژن (ورژن x.0) یونیکوڈ 5.0 (آئی ایس بی این 0-321-48091-0) تھا ، لیکن یونیکوڈ 6.0 کے بعد سے معیار کا مکمل متن اب کتاب کی شکل میں شائع نہیں کیا جارہا ہے۔ تاہم ، 2012 میں ، یہ اعلان کیا گیا تھا کہ یونیکوڈ ورژن 6.1 کے لئے صرف بنیادی وضاحتیں 692 صفحات پرنٹ آن ڈیمانڈ پیپر بیک کے طور پر دستیاب کی جائیں گی۔ معیار کے پچھلے بڑے ورژن پرنٹنگ کے برعکس ، پرنٹ آن ڈیمانڈ معیاری میں کوئی ••کوڈ چارٹ یا معیاری ضمیمہ•• شامل نہیں ہے ، لیکن بنیادی وضاحتیں سمیت پورے معیار اب بھی یونیکوڈ ویب سائٹ پر آزادانہ طور پر دستیاب رہیں گے۔,یونیکوڈ ویب سائٹ پر کون سے اضافی حصے شامل نہیں ہیں؟,True,False
104,273,11,5727faefff5b5019007d99d0,یونیکوڈ,••یونیکوڈ روڈ میپ کمیٹی•• (مائیکل ایورسن ، ریک میک گوآن ، اور کین وہسلر) ان اسکرپٹس کی فہرست کو برقرار رکھتی ہے جو کوڈنگ کے لئے امیدوار یا ممکنہ امیدوار ہیں اور ان کے عارضی کوڈ بلاک تفویض یونیکوڈ کنسورشیم ویب سائٹ کے یونیکوڈ روڈ میپ صفحے پر ہیں۔ روڈ میپ پر کچھ اسکرپٹس ، جیسے جورچن ، نو شو ، اور ٹنگٹ کے لئے ، کوڈنگ کی تجاویز کی گئی ہیں اور وہ منظوری کے عمل کے ذریعے کام کر رہے ہیں۔ دیگر اسکرپٹس ، جیسے مایا اور رونگورونگو کے لئے ، ابھی تک کوئی تجویز نہیں کی گئی ہے ، اور وہ کردار کے ذخیرے اور دیگر تفصیلات پر اتفاق کا انتظار کر رہے ہیں۔,مائیکل ایورسن، ریک میک گوان، اور کین وہسلر کس گروپ کو تشکیل دیتے ہیں؟,False,False
105,273,11,5727faefff5b5019007d99d1,یونیکوڈ,یونیکوڈ روڈ میپ کمیٹی (مائیکل ایورسن ، ریک میک گوآن ، اور کین وہسلر) ••انکوڈنگ کے لئے امیدوار یا ممکنہ امیدوار اسکرپٹس کی فہرست کو برقرار رکھتی ہے•• اور ان کی عارضی کوڈ بلاک تفویض یونیکوڈ کنسورشیم ویب سائٹ کے یونیکوڈ روڈ میپ صفحے پر۔ روڈ میپ پر کچھ اسکرپٹس کے لئے ، جیسے جورچن ، نو شو ، اور ٹنگٹ ، انکوڈنگ تجاویز کی گئی ہیں اور وہ منظوری کے عمل کے ذریعے کام کر رہے ہیں۔ دیگر اسکرپٹس کے لئے ، جیسے مایا اور رونگورونگو ، ابھی تک کوئی تجویز نہیں کی گئی ہے ، اور وہ کردار کے ذخیرے اور دیگر تفصیلات پر اتفاق کا انتظار کر رہے ہیں۔,یونیکوڈ روڈ میپ کمیٹی کیا کرتی ہے؟,False,False
106,273,11,5727faefff5b5019007d99d2,یونیکوڈ,یونیکوڈ روڈ میپ کمیٹی (مائیکل ایورسن ، ریک میک گوآن ، اور کین وہسلر) ان اسکرپٹس کی فہرست کو برقرار رکھتی ہے جو انکوڈنگ کے لئے امیدوار یا ممکنہ امیدوار ہیں اور ان کے عارضی کوڈ بلاک تفویض یونیکوڈ کنسورشیم ویب سائٹ کے یونیکوڈ روڈ میپ صفحے پر ہیں۔ روڈ میپ پر کچھ اسکرپٹس کے لئے ، جیسے جورچن ، نو شو ، اور ٹنگٹ ، انکوڈنگ تجاویز کی گئی ہیں اور وہ منظوری کے عمل کے ذریعے کام کر رہے ہیں۔ دوسروں کے اسکرپٹس کے لئے ، جیسے مایا اور رونگورونگو ، ••ابھی کوئی تجویز نہیں دی گئی ہے•• ، اور وہ شامل صارف برادریوں سے کردار کے ذخیرہ اور دیگر تفصیلات پر اتفاق کا انتظار کرتے ہیں۔,مایا رسم الخط کے لیے کیا تجویز پیش کی گئی ہے؟,False,False
107,273,11,5727faefff5b5019007d99d3,یونیکوڈ,یونیکوڈ روڈ میپ کمیٹی (مائیکل ایورسن ، ریک میک گوآن ، اور کین وہسلر) ان اسکرپٹس کی فہرست کو برقرار رکھتی ہے جو انکوڈنگ کے لئے امیدوار یا ممکنہ امیدوار ہیں اور ان کے عارضی کوڈ بلاک تفویض ••یونیکوڈ کنسورشیم ویب سائٹ•• کے یونیکوڈ روڈ میپ صفحے پر ہیں۔ روڈ میپ پر کچھ اسکرپٹس کے لئے ، جیسے جورچن ، نو شو ، اور ٹنگٹ ، انکوڈنگ تجاویز کی گئی ہیں اور وہ منظوری کے عمل کے ذریعے کام کر رہے ہیں۔ دوسروں کے اسکرپٹس کے لئے ، جیسے مایا اور رونگورونگو ، ابھی تک کوئی تجویز نہیں کی گئی ہے ، اور وہ کردار کے ذخیرے اور دیگر تفصیلات پر اتفاق کا انتظار کر رہے ہیں۔,یونیکوڈ روڈ میپ کمیٹی ان اسکرپٹس کے بارے میں معلومات کہاں پوسٹ کرتی ہے؟,False,False
108,273,11,5acd1d2407355d001abf3588,یونیکوڈ,یونیکوڈ روڈ میپ کمیٹی (••مائیکل ایورسن ، ریک میک گوآن ، اور کین وہسلر••) ان اسکرپٹس کی فہرست کو برقرار رکھتی ہے جو انکوڈنگ کے لئے امیدوار یا ممکنہ امیدوار ہیں اور ان کے عارضی کوڈ بلاک تفویض یونیکوڈ کنسورشیم ویب سائٹ کے یونیکوڈ روڈ میپ صفحے پر ہیں۔ روڈ میپ پر کچھ اسکرپٹس ، جیسے جورچن ، نو شو ، اور ٹنگٹ کے لئے ، انکوڈنگ تجاویز کی گئی ہیں اور وہ منظوری کے عمل کے ذریعے کام کر رہے ہیں۔ دیگر اسکرپٹس ، جیسے مایا اور رونگورونگو کے لئے ، ابھی تک کوئی تجویز نہیں دی گئی ہے ، اور وہ کردار کے ذخیرے اور دیگر تفصیلات پر اتفاق کا انتظار کر رہے ہیں۔,انکوڈنگ کے لئے ممکنہ امیدوار کون ہیں؟,True,False
109,273,11,5acd1d2407355d001abf3589,یونیکوڈ,••یونیکوڈ روڈ میپ کمیٹی•• (مائیکل ایورسن ، ریک میک گوآن ، اور کین وہسلر) ان اسکرپٹس کی فہرست کو برقرار رکھتی ہے جو کوڈنگ کے لئے امیدوار یا ممکنہ امیدوار ہیں اور ان کے عارضی کوڈ بلاک تفویض یونیکوڈ کنسورشیم ویب سائٹ کے یونیکوڈ روڈ میپ صفحے پر ہیں۔ روڈ میپ پر کچھ اسکرپٹس ، جیسے جورچن ، نو شو ، اور ٹنگٹ کے لئے ، کوڈنگ کی تجاویز کی گئی ہیں اور وہ منظوری کے عمل کے ذریعے کام کر رہے ہیں۔ دیگر اسکرپٹس ، جیسے مایا اور رونگورونگو کے لئے ، ابھی تک کوئی تجویز نہیں دی گئی ہے ، اور وہ کردار کے ذخیرے اور دیگر تفصیلات پر اتفاق کا انتظار کر رہے ہیں۔,مایا اسکرپٹ کی تجویز کس نے دی؟,True,False
110,273,11,5acd1d2407355d001abf358a,یونیکوڈ,یونیکوڈ روڈ میپ کمیٹی (مائیکل ایورسن ، ریک میک گوآن ، اور کین وہسلر) ان اسکرپٹس کی فہرست کو برقرار رکھتی ہے جو انکوڈنگ کے لئے امیدوار یا ممکنہ امیدوار ہیں اور ان کے عارضی کوڈ بلاک تفویض یونیکوڈ کنسورشیم ویب سائٹ کے یونیکوڈ روڈ میپ صفحے پر ہیں۔ روڈ میپ پر کچھ اسکرپٹس کے لئے ، جیسے جورچن ، نو شو ، اور ٹنگٹ ، انکوڈنگ تجاویز کی گئی ہیں اور وہ منظوری کے عمل کے ذریعے کام کر رہے ہیں۔ دیگر اسکرپٹس کے لئے ، جیسے مایا اور رونگورونگو ، ابھی تک کوئی تجویز نہیں کی گئی ہے ، اور وہ ملوث صارف برادریوں سے ••حرفی ذخیرہ•• اور دیگر تفصیلات پر اتفاق کا انتظار کر رہے ہیں۔,Jurchen کے لئے ایک سکرپٹ کی تجویز سے پہلے کیا اتفاق کرنے کی ضرورت ہے؟,True,False
111,273,11,5acd1d2407355d001abf358b,یونیکوڈ,یونیکوڈ روڈ میپ کمیٹی (مائیکل ایورسن ، ریک میک گوآن ، اور کین وہسلر) ان اسکرپٹس کی فہرست کو برقرار رکھتی ہے جو انکوڈنگ کے لئے امیدوار یا ممکنہ امیدوار ہیں اور ان کے عارضی کوڈ بلاک تفویض یونیکوڈ کنسورشیم ویب سائٹ کے یونیکوڈ روڈ میپ صفحے پر ہیں۔ روڈ میپ پر کچھ اسکرپٹس کے لئے ، جیسے ••جرچن ، نو شو ، اور ٹنگٹ•• ، انکوڈنگ تجاویز کی گئی ہیں اور وہ منظوری کے عمل کے ذریعے کام کر رہے ہیں۔ دوسروں کے اسکرپٹس کے لئے ، جیسے مایا اور رونگورونگو ، ابھی تک کوئی تجویز نہیں کی گئی ہے ، اور وہ کردار کے ذخیرے اور دیگر تفصیلات پر اتفاق کا انتظار کر رہے ہیں۔,کون سے اسکرپٹ صارف کمیٹیاں اب تجویز نہیں کر رہی ہیں؟,True,False
112,273,11,5acd1d2407355d001abf358c,یونیکوڈ,یونیکوڈ روڈ میپ کمیٹی (مائیکل ایورسن ، ریک میک گوآن ، اور کین وہسلر) ان اسکرپٹس کی فہرست کو برقرار رکھتی ہے جو انکوڈنگ کے لئے امیدوار یا ممکنہ امیدوار ہیں اور ان کے عارضی کوڈ بلاک تفویض یونیکوڈ کنسورشیم ویب سائٹ کے یونیکوڈ روڈ میپ صفحے پر ہیں۔ روڈ میپ پر کچھ اسکرپٹس کے لئے ، جیسے جورچن ، نو شو ، اور ٹنگٹ ، انکوڈنگ تجاویز کی گئی ہیں اور وہ منظوری کے عمل کے ذریعے کام کر رہے ہیں۔ دیگر اسکرپٹس کے لئے ، جیسے مایا اور رونگورونگو ، ابھی تک کوئی تجویز نہیں کی گئی ہے ، اور وہ کردار کے ذخیرے اور دیگر تفصیلات پر اتفاق کا انتظار کر رہے ہیں۔,تجاویز کو منظور کرنے کے لئے کون سی کمیٹیاں ہیں؟,True,True
113,273,12,5728027a4b864d1900164208,یونیکوڈ,یونیکوڈ ••دو•• میپنگ طریقوں کی وضاحت کرتا ہے: یونیکوڈ ٹرانسفارمیشن فارمیٹ (یو ٹی ایف) انکوڈنگ ، اور یونیورسل کوڈڈ کریکٹر سیٹ (یو سی ایس) انکوڈنگ۔ ایک انکوڈنگ یونیکوڈ کوڈ پوائنٹس کی حد (ممکنہ طور پر ایک ذیلی سیٹ) کو کچھ فکسڈ سائز کی حد میں اقدار کے تسلسل پر نقشہ کرتا ہے ، جسے کوڈ ویلیوز کہا جاتا ہے۔ انکوڈنگز کے ناموں میں نمبرز فی کوڈ ویلیو (یو ٹی ایف انکوڈنگز کے لئے) یا فی کوڈ ویلیو (یو سی ایس انکوڈنگز کے لئے) بائٹس کی تعداد کی نشاندہی کرتے ہیں۔ UTF-8 اور UTF-16 شاید سب سے زیادہ استعمال ہونے والے انکوڈنگ ہیں۔ UCS-2 UTF-16 کا ایک پرانی ذیلی سیٹ ہے۔ UCS-4 اور UTF-32 فنکشنل طور پر مساوی ہیں۔,یونیکوڈ کتنے میپنگ طریقوں کی وضاحت کرتا ہے؟,False,False
114,273,12,5728027a4b864d1900164209,یونیکوڈ,"یونیکوڈ نقشہ سازی کے دو طریقوں کی وضاحت کرتا ہے: ""یونیکوڈ ٹرانسفارمیشن فارمیٹ (یو ٹی ایف) انکوڈنگ ، اور یونیورسل کوڈڈ کریکٹر سیٹ (یو سی ایس) انکوڈنگ۔ ایک انکوڈنگ یونیکوڈ کوڈ پوائنٹس کی حد (ممکنہ طور پر ایک ذیلی سیٹ) کو کچھ فکسڈ سائز کی حد میں اقدار کے تسلسل پر نقشہ کرتا ہے ، جسے کوڈ ویلیوز کہا جاتا ہے۔ انکوڈنگز کے ناموں میں نمبرز فی کوڈ ویلیو (یو ٹی ایف انکوڈنگز کے لئے) یا فی کوڈ ویلیو (یو سی ایس انکوڈنگز کے لئے) بائٹس کی تعداد کی نشاندہی کرتے ہیں۔ UTF-8 اور UTF-16 شاید سب سے زیادہ استعمال ہونے والے انکوڈنگ ہیں۔ UCS-2 UTF-16 کا ایک متروک ذیلی سیٹ ہے۔ UCS-4 اور UTF-32 فنکشنل طور پر مساوی ہیں۔",دو نقشہ سازی کے طریقے کیا ہیں جو یونیکوڈ کی وضاحت کرتا ہے؟,False,True
115,273,12,5728027a4b864d190016420a,یونیکوڈ,یونیکوڈ نقشہ سازی کے دو طریقوں کی وضاحت کرتا ہے: یونیکوڈ ٹرانسفارمیشن فارمیٹ (یو ٹی ایف) انکوڈنگ ، اور یونیورسل کوڈڈ کریکٹر سیٹ (یو سی ایس) انکوڈنگ۔ ایک انکوڈنگ یونیکوڈ کوڈ پوائنٹس کی حد (ممکنہ طور پر ایک ذیلی سیٹ) کو کچھ فکسڈ سائز کی حد میں اقدار کے تسلسل پر نقشہ کرتا ہے ، جسے کوڈ ویلیوز کہا جاتا ہے۔ انکوڈنگز کے ناموں میں نمبر ••کوڈ ویلیو پر بٹس کی تعداد (یو ٹی ایف انکوڈنگز کے لئے) یا کوڈ ویلیو پر بائٹس کی تعداد•• (یو سی ایس انکوڈنگز کے لئے) کی نشاندہی کرتے ہیں۔ UTF-8 اور UTF-16 شاید سب سے زیادہ استعمال ہونے والے انکوڈنگ ہیں۔ UCS-2 UTF-16 کا ایک متروک ذیلی سیٹ ہے۔ UCS-4 اور UTF-32 فنکشنل طور پر مساوی ہیں۔,انکوڈنگ کے ناموں میں موجود نمبرز کیا ظاہر کرتے ہیں؟,False,False
116,273,12,5728027a4b864d190016420b,یونیکوڈ,یونیکوڈ نقشہ سازی کے دو طریقوں کی وضاحت کرتا ہے: یونیکوڈ ٹرانسفارمیشن فارمیٹ (یو ٹی ایف) انکوڈنگ ، اور یونیورسل کوڈڈ کریکٹر سیٹ (یو سی ایس) انکوڈنگ۔ ایک انکوڈنگ یونیکوڈ کوڈ پوائنٹس کی حد (ممکنہ طور پر ایک ذیلی سیٹ) کو کچھ فکسڈ سائز کی حد میں اقدار کے تسلسل پر نقشہ کرتا ہے ، جسے کوڈ ویلیوز کہا جاتا ہے۔ انکوڈنگز کے ناموں میں نمبرز فی کوڈ ویلیو (یو ٹی ایف انکوڈنگز کے لئے) یا فی کوڈ ویلیو (یو سی ایس انکوڈنگز کے لئے) بائٹس کی تعداد کی نشاندہی کرتے ہیں۔ ••یو ٹی ایف 8 اور یو ٹی ایف 16•• شاید سب سے زیادہ استعمال ہونے والے انکوڈنگز ہیں۔ یو سی ایس 2 یو ٹی ایف 16 کا ایک متروک ذیلی سیٹ ہے۔ یو سی ایس 4 اور یو ٹی ایف 32 فنکشنل طور پر مساوی ہیں۔,سب سے زیادہ عام طور پر استعمال ہونے والے انکوڈنگ کیا ہیں؟,False,False
117,273,12,5728027a4b864d190016420c,یونیکوڈ,یونیکوڈ نقشہ سازی کے دو طریقوں کی وضاحت کرتا ہے: یونیکوڈ ٹرانسفارمیشن فارمیٹ (یو ٹی ایف) انکوڈنگ ، اور ••یونیورسل کوڈڈ کریکٹر سیٹ•• (یو سی ایس) انکوڈنگ۔ ایک انکوڈنگ یونیکوڈ کوڈ پوائنٹس کی حد (ممکنہ طور پر ایک ذیلی سیٹ) کو کچھ فکسڈ سائز کی حد میں اقدار کے تسلسل پر نقشہ کرتا ہے ، جسے کوڈ ویلیوز کہا جاتا ہے۔ انکوڈنگز کے ناموں میں تعداد فی کوڈ ویلیو (یو ٹی ایف انکوڈنگز کے لئے) یا فی کوڈ ویلیو (یو سی ایس انکوڈنگز کے لئے) بائٹس کی تعداد کی نشاندہی کرتی ہے۔ UTF-8 اور UTF-16 شاید سب سے زیادہ استعمال ہونے والے انکوڈنگ ہیں۔ UCS-2 UTF-16 کا ایک متروک ذیلی سیٹ ہے۔ UCS-4 اور UTF-32 فنکشنل طور پر مساوی ہیں۔,UCS کا مخفف کیا ہے؟,False,False
118,273,12,5acd1db907355d001abf35a6,یونیکوڈ,یونیکوڈ ••دو•• میپنگ طریقوں کی وضاحت کرتا ہے: یونیکوڈ ٹرانسفارمیشن فارمیٹ (یو ٹی ایف) انکوڈنگ ، اور یونیورسل کوڈڈ کریکٹر سیٹ (یو سی ایس) انکوڈنگ۔ ایک انکوڈنگ یونیکوڈ کوڈ پوائنٹس کی حد (ممکنہ طور پر ایک ذیلی سیٹ) کو کچھ فکسڈ سائز کی حد میں اقدار کے تسلسل پر نقشہ کرتا ہے ، جسے کوڈ ویلیوز کہا جاتا ہے۔ انکوڈنگز کے ناموں میں نمبرز فی کوڈ ویلیو (یو ٹی ایف انکوڈنگز کے لئے) یا فی کوڈ ویلیو (یو سی ایس انکوڈنگز کے لئے) بائٹس کی تعداد کی نشاندہی کرتے ہیں۔ UTF-8 اور UTF-16 شاید سب سے زیادہ استعمال ہونے والے انکوڈنگ ہیں۔ UCS-2 UTF-16 کا ایک پرانی ذیلی سیٹ ہے۔ UCS-4 اور UTF-32 فنکشنل طور پر مساوی ہیں۔,یو ایس سی کے پاس کتنے میپنگ موڈ ہیں؟,True,False
119,273,12,5acd1db907355d001abf35a7,یونیکوڈ,یونیکوڈ میپنگ کے دو طریقوں کی وضاحت کرتا ہے: یونیکوڈ ٹرانسفارمیشن فارمیٹ (یو ٹی ایف) انکوڈنگ ، اور یونیورسل کوڈڈ کریکٹر سیٹ (یو سی ایس) انکوڈنگ۔ ایک انکوڈنگ میپ (ممکنہ طور پر ایک ذیلی سیٹ) ••یونیکوڈ کوڈ پوائنٹس کی حد•• کو کچھ فکسڈ سائز کی حد میں اقدار کے تسلسل میں ، جسے کوڈ ویلیوز کہا جاتا ہے۔ انکوڈنگز کے ناموں میں نمبرز فی کوڈ ویلیو (یو ٹی ایف انکوڈنگز کے لئے) یا فی کوڈ ویلیو (یو سی ایس انکوڈنگز کے لئے) بائٹس کی تعداد کی نشاندہی کرتے ہیں۔ UTF-8 اور UTF-16 شاید سب سے زیادہ استعمال ہونے والے انکوڈنگ ہیں۔ UCS-2 UTF-16 کا ایک متروک ذیلی سیٹ ہے۔ UCS-4 اور UTF-32 فنکشنل طور پر مساوی ہیں۔,ایک انکوڈنگ نقشے کیا ہے؟,True,False
120,273,12,5acd1db907355d001abf35a8,یونیکوڈ,یونیکوڈ نقشہ سازی کے دو طریقوں کی وضاحت کرتا ہے: یونیکوڈ ٹرانسفارمیشن فارمیٹ (یو ٹی ایف) انکوڈنگ ، اور یونیورسل کوڈڈ کریکٹر سیٹ (یو سی ایس) انکوڈنگ۔ ایک انکوڈنگ یونیکوڈ کوڈ پوائنٹس کی حد (ممکنہ طور پر ایک ذیلی سیٹ) کو کچھ فکسڈ سائز کی حد میں اقدار کے تسلسل پر نقشہ کرتا ہے ، جسے کوڈ ویلیوز کہا جاتا ہے۔ انکوڈنگز کے ناموں میں نمبرز فی کوڈ ویلیو (یو ٹی ایف انکوڈنگز کے لئے) یا فی کوڈ ویلیو (یو سی ایس انکوڈنگز کے لئے) بائٹس کی تعداد کی نشاندہی کرتے ہیں۔ UTF-8 اور UTF-16 شاید سب سے زیادہ استعمال ہونے والے انکوڈنگ ہیں۔ ••UCS-2•• UTF-16 کا ایک پرانی ذیلی سیٹ ہے۔ UCS-4 اور UTF-32 فنکشنل طور پر مساوی ہیں۔,UTF-8 کا ذیلی سیٹ کیا ہے؟,True,False
121,273,12,5acd1db907355d001abf35a9,یونیکوڈ,یونیکوڈ نقشہ سازی کے دو طریقوں کی وضاحت کرتا ہے: یونیکوڈ ٹرانسفارمیشن فارمیٹ (یو ٹی ایف) انکوڈنگ ، اور یونیورسل کوڈڈ کریکٹر سیٹ (یو سی ایس) انکوڈنگ۔ ایک انکوڈنگ یونیکوڈ کوڈ پوائنٹس کی حد (ممکنہ طور پر ایک ذیلی سیٹ) کو کچھ فکسڈ سائز کی حد میں اقدار کے تسلسل پر نقشہ کرتا ہے ، جسے کوڈ ویلیوز کہا جاتا ہے۔ انکوڈنگز کے ناموں میں نمبرز فی کوڈ ویلیو (یو ٹی ایف انکوڈنگز کے لئے) یا فی کوڈ ویلیو (یو سی ایس انکوڈنگز کے لئے) بائٹس کی تعداد کی نشاندہی کرتے ہیں۔ UTF-8 اور UTF-16 شاید سب سے زیادہ استعمال ہونے والے انکوڈنگ ہیں۔ UCS-2 ••UTF-16•• کا ایک متروک ذیلی سیٹ ہے۔ UCS-4 اور UTF-32 فنکشنل طور پر مساوی ہیں۔,یو ایس سی 2 کے ساتھ فنکشنل طور پر مساوی کیا ہے؟,True,False
122,273,12,5acd1db907355d001abf35aa,یونیکوڈ,یونیکوڈ میپنگ کے دو طریقوں کی وضاحت کرتا ہے: یونیکوڈ ٹرانسفارمیشن فارمیٹ (یو ٹی ایف) انکوڈنگ ، اور یونیورسل کوڈڈ کریکٹر سیٹ (یو سی ایس) انکوڈنگ۔ ایک انکوڈنگ میپ (ممکنہ طور پر ایک ذیلی سیٹ) ••یونیکوڈ کوڈ پوائنٹس کی حد•• کو کچھ فکسڈ سائز کی حد میں اقدار کے تسلسل میں ، جسے کوڈ ویلیوز کہا جاتا ہے۔ انکوڈنگز کے ناموں میں نمبرز فی کوڈ ویلیو (یو ٹی ایف انکوڈنگز کے لئے) یا فی کوڈ ویلیو (یو سی ایس انکوڈنگز کے لئے) بائٹس کی تعداد کی نشاندہی کرتے ہیں۔ UTF-8 اور UTF-16 شاید سب سے زیادہ استعمال ہونے والے انکوڈنگ ہیں۔ UCS-2 UTF-16 کا ایک متروک ذیلی سیٹ ہے۔ UCS-4 اور UTF-32 فنکشنل طور پر مساوی ہیں۔,اقدار کی ترتیب کیا اشارہ کرتی ہے؟,True,False
123,273,13,572802e54b864d190016421c,یونیکوڈ,UCS-2 اور UTF-16 انکوڈنگز ٹیکسٹ فائلوں کے آغاز میں استعمال کے لئے ••یونیکوڈ بائٹ آرڈر مارک•• (BOM) کی وضاحت کرتے ہیں ، جو بائٹ آرڈرنگ کا پتہ لگانے (یا بائٹ اینڈیننس کا پتہ لگانے) کے لئے استعمال کیا جاسکتا ہے۔ BOM ، کوڈ پوائنٹ U + FEFF میں بائٹ ری آرڈر پر غیر مبہمیت کی اہم خاصیت ہے ، اس سے قطع نظر کہ یونیکوڈ انکوڈنگ کا استعمال کیا گیا ہے۔ U + FFFE (بائٹ سوئپنگ کا نتیجہ U + FEFF) قانونی کردار کے برابر نہیں ہے ، اور U + FEFF متن کے آغاز کے علاوہ دیگر جگہوں پر ، صفر چوڑائی غیر توڑنے والی جگہ (ایک کردار جس میں کوئی ظاہری شکل اور کوئی اثر نہیں ہوتا ہے) ۔,بی او ایم کا مخفف کیا ہے؟,False,False
124,273,13,572802e54b864d190016421d,یونیکوڈ,••UCS-2 اور UTF-16•• انکوڈنگز ٹیکسٹ فائلوں کے آغاز میں استعمال کے لئے یونیکوڈ بائٹ آرڈر مارک (BOM) کی وضاحت کرتے ہیں ، جو بائٹ آرڈرنگ کا پتہ لگانے (یا بائٹ اینڈیننس کا پتہ لگانے) کے لئے استعمال کیا جاسکتا ہے۔ BOM ، کوڈ پوائنٹ U + FEFF میں بائٹ ری آرڈر پر غیر مبہمیت کی اہم خاصیت ہے ، اس سے قطع نظر کہ یونیکوڈ انکوڈنگ کا استعمال کیا گیا ہے۔ U + FFFE (بائٹ سوئپنگ U + FEFF کا نتیجہ) قانونی کردار کے برابر نہیں ہے ، اور U + FEFF متن کے آغاز کے علاوہ دیگر جگہوں پر ، صفر چوڑائی غیر توڑنے والی جگہ (ایک کردار جس میں کوئی ظاہری شکل اور کوئی اثر نہیں ہے) ۔,بی او ایم کی وضاحت کیا ہے؟,False,False
125,273,13,572802e54b864d190016421e,یونیکوڈ,UCS-2 اور UTF-16 انکوڈنگز ٹیکسٹ فائلوں کے آغاز میں استعمال کے لئے یونیکوڈ بائٹ آرڈر مارک (BOM) کی وضاحت کرتے ہیں ، جو بائٹ آرڈرنگ کا پتہ لگانے (یا بائٹ اینڈیننس کا پتہ لگانے) کے لئے استعمال کیا جاسکتا ہے۔ BOM ، کوڈ پوائنٹ ••U + FEFF•• میں بائٹ ری آرڈر پر غیر مبہمیت کی اہم خاصیت ہے ، اس سے قطع نظر کہ یونیکوڈ انکوڈنگ کا استعمال کیا گیا ہے۔ U + FFFE (بائٹ سوئپنگ کا نتیجہ U + FEFF) قانونی کردار کے برابر نہیں ہے ، اور U + FEFF متن کے آغاز کے علاوہ دیگر جگہوں پر ، صفر چوڑائی غیر توڑنے والی جگہ (ایک کردار جس میں کوئی ظاہری شکل اور کوئی اثر نہیں ہے) ۔,BOM کا کوڈ پوائنٹ کیا ہے؟,False,False
126,273,13,572802e54b864d190016421f,یونیکوڈ,UCS-2 اور UTF-16 انکوڈنگز ٹیکسٹ فائلوں کے آغاز میں استعمال کے لئے یونیکوڈ بائٹ آرڈر مارک (BOM) کی وضاحت کرتے ہیں ، جو بائٹ آرڈرنگ کا پتہ لگانے (یا بائٹ اینڈیننس کا پتہ لگانے) کے لئے استعمال کیا جاسکتا ہے۔ BOM ، کوڈ پوائنٹ U + FEFF میں بائٹ ری آرڈر پر غیر مبہمیت کی اہم خاصیت ہے ، اس سے قطع نظر کہ یونیکوڈ انکوڈنگ کا استعمال کیا گیا ہے۔ U + FFFE (بائٹ سوئپنگ U + FEFF کا نتیجہ) قانونی کردار کے برابر نہیں ہے ، اور U + FEFF متن کے آغاز کے علاوہ دیگر جگہوں پر ، صفر چوڑائی غیر وقفے کی جگہ (ایک کردار جس میں کوئی ظاہری شکل اور کوئی اثر نہیں ہوتا ہے) ۔,U+UFFE کا نتیجہ کیا ہے؟,False,True
127,273,13,5acd209007355d001abf35ea,یونیکوڈ,UCS-2 اور UTF-16 انکوڈنگز ٹیکسٹ فائلوں کے آغاز میں استعمال کے لئے یونیکوڈ بائٹ آرڈر مارک (BOM) کی وضاحت کرتے ہیں ، جو بائٹ آرڈرنگ کا پتہ لگانے (یا بائٹ اینڈیننس کا پتہ لگانے) کے لئے استعمال کیا جاسکتا ہے۔ BOM ، کوڈ پوائنٹ ••U + FEFF•• میں بائٹ ری آرڈر پر غیر مبہمیت کی اہم خاصیت ہے ، اس سے قطع نظر کہ یونیکوڈ انکوڈنگ کا استعمال کیا گیا ہے۔ U + FFFE (بائٹ سوئپنگ کا نتیجہ U + FEFF) قانونی کردار کے برابر نہیں ہے ، اور U + FEFF متن کے آغاز کے علاوہ دیگر جگہوں پر ، صفر چوڑائی غیر توڑنے والی جگہ (ایک کردار جس میں کوئی ظاہری شکل اور کوئی اثر نہیں ہے) ۔,BOM کے لئے کوڈ پوائنٹ کیا ہے؟,True,False
128,273,13,5acd209007355d001abf35eb,یونیکوڈ,UCS-2 اور UTF-16 انکوڈنگز ٹیکسٹ فائلوں کے آغاز میں استعمال کے لئے یونیکوڈ بائٹ آرڈر مارک (BOM) کی وضاحت کرتے ہیں ، جو بائٹ آرڈرنگ کا پتہ لگانے (یا بائٹ اینڈیننس کا پتہ لگانے) کے لئے استعمال کیا جاسکتا ہے۔ BOM ، کوڈ پوائنٹ U+FEFF میں بائٹ ری آرڈر پر غیر مبہمیت کی اہم خاصیت ہے ، قطع نظر ••استعمال شدہ یونیکوڈ انکوڈنگ•• سے۔ U+FFFE (بائٹ سوئپنگ کا نتیجہ U+FEFF) قانونی کردار کے برابر نہیں ہے ، اور U+FEFF متن کے آغاز کے علاوہ دیگر جگہوں پر ، صفر چوڑائی غیر توڑنے والی جگہ (ایک کردار جس میں کوئی ظاہری شکل اور کوئی اثر نہیں ہوتا ہے) ۔,کیا BOM میں اہم جائیداد کو تبدیل کرتا ہے؟,True,False
129,273,13,5acd209007355d001abf35ec,یونیکوڈ,UCS-2 اور UTF-16 انکوڈنگز ٹیکسٹ فائلوں کے آغاز میں استعمال کے لئے یونیکوڈ بائٹ آرڈر مارک (BOM) کی وضاحت کرتے ہیں ، جو بائٹ آرڈرنگ کا پتہ لگانے (یا بائٹ اینڈیننس کا پتہ لگانے) کے لئے استعمال کیا جاسکتا ہے۔ BOM ، کوڈ پوائنٹ U + FEFF میں بائٹ ری آرڈر پر غیر مبہمیت کی اہم خاصیت ہے ، اس سے قطع نظر کہ یونیکوڈ انکوڈنگ کا استعمال کیا گیا ہے۔ U + FFFE (بائٹ سوئپنگ U + FEFF کا نتیجہ) ••ایک قانونی کردار•• کے برابر نہیں ہے ، اور U + FEFF متن کے آغاز کے علاوہ دیگر جگہوں پر ، صفر چوڑائی غیر وقفے کی جگہ (ایک کردار جس میں کوئی ظاہری شکل اور کوئی اثر نہیں ہے) ۔,UFF+FE کس کے برابر ہے؟,True,False
130,273,13,5acd209007355d001abf35ed,یونیکوڈ,UCS-2 اور UTF-16 انکوڈنگز ٹیکسٹ فائلوں کے آغاز میں استعمال کے لئے ••یونیکوڈ بائٹ آرڈر مارک•• (BOM) کی وضاحت کرتے ہیں ، جو بائٹ آرڈرنگ کا پتہ لگانے (یا بائٹ اینڈیننس کا پتہ لگانے) کے لئے استعمال کیا جاسکتا ہے۔ BOM ، کوڈ پوائنٹ U + FEFF میں بائٹ ری آرڈر پر غیر مبہمیت کی اہم خاصیت ہے ، اس سے قطع نظر کہ یونیکوڈ انکوڈنگ کا استعمال کیا گیا ہے۔ U + FFFE (بائٹ سوئپنگ U + FEFF کا نتیجہ) قانونی کردار کے برابر نہیں ہے ، اور U + FEFF متن کے آغاز کے علاوہ دیگر جگہوں پر ، صفر چوڑائی غیر توڑنے والی جگہ (ایک کردار جس میں کوئی ظاہری شکل اور کوئی اثر نہیں ہے) ۔,UCS-2 اور UTF-16 کی طرف سے بیان کیا جاتا ہے؟,True,False
131,273,13,5acd209007355d001abf35ee,یونیکوڈ,UCS-2 اور UTF-16 انکوڈنگز ٹیکسٹ فائلوں کے آغاز میں استعمال کے لئے یونیکوڈ بائٹ آرڈر مارک (••BOM••) کی وضاحت کرتے ہیں ، جو بائٹ آرڈرنگ کا پتہ لگانے (یا بائٹ اینڈیننس کا پتہ لگانے) کے لئے استعمال کیا جاسکتا ہے۔ BOM ، کوڈ پوائنٹ U + FEFF میں بائٹ ری آرڈر پر غیر مبہمیت کی اہم خاصیت ہے ، اس سے قطع نظر کہ یونیکوڈ انکوڈنگ کا استعمال کیا گیا ہے۔ U + FFFE (بائٹ سوئپنگ U + FEFF کا نتیجہ) قانونی کردار کے برابر نہیں ہے ، اور U + FEFF متن کے آغاز کے علاوہ دیگر جگہوں پر ، صفر چوڑائی غیر وقفے کی جگہ (ایک کردار جس میں کوئی ظاہری شکل اور کوئی اثر نہیں ہوتا ہے) ۔,UCS-2 اور UTF-16 کا مخفف کیا ہے؟,True,False
132,273,14,572805f5ff5b5019007d9b1a,یونیکوڈ,اسی کردار کو UTF-8 میں تبدیل کیا جاتا ہے بائٹ تسلسل EF BB BF بن جاتا ہے۔ یونیکوڈ معیار کی اجازت دیتا ہے کہ BOM UTF-8 انکوڈ شدہ متن کے لئے دستخط کے طور پر کام کرسکتا ہے جہاں کردار سیٹ غیر نشان زد ہے۔ کچھ سافٹ ویئر ڈویلپرز نے اسے UTF-8 سمیت دیگر انکوڈنگ کے لئے اپنایا ہے ، جس میں مقامی 8 بٹ کوڈ صفحات سے UTF-8 کو ممتاز کرنے کی کوشش کی گئی ہے۔ تاہم ••RFC 3629•• ، UTF-8 معیار ، سفارش کرتا ہے کہ UTF-8 کا استعمال کرتے ہوئے پروٹوکول میں بائٹ آرڈر کے نشانات پر پابندی عائد کی جائے ، لیکن ان معاملات پر تبادلہ خیال کرتا ہے جہاں یہ ممکن نہیں ہوسکتا ہے۔ اس کے علاوہ ، UTF-8 میں ممکنہ نمونوں پر بڑی پابندی (مثال کے طور پر اعلی بٹ سیٹ کے ساتھ کوئی تنہا بائٹ نہیں ہوسکتا ہے) کا مطلب ہے کہ UTF-8 کو دوسرے کردار انکوڈنگ سے BOM پر انحصار کیے بغیر ممتاز کرنا ممکن ہونا چاہئے۔,UTF-8 معیاری کیا ہے؟,False,False
133,273,14,572805f5ff5b5019007d9b1b,یونیکوڈ,اسی کردار کو UTF-8 میں تبدیل کیا جاتا ہے بائٹ تسلسل EF BB BF بن جاتا ہے۔ یونیکوڈ معیار کی اجازت دیتا ہے کہ BOM UTF-8 انکوڈ شدہ متن کے لئے دستخط کے طور پر کام کرسکتا ہے جہاں کردار سیٹ غیر نشان زد ہے۔ کچھ سافٹ ویئر ڈویلپرز نے اسے UTF-8 سمیت دیگر انکوڈنگ کے لئے اپنایا ہے ، تاکہ UTF-8 کو مقامی 8 بٹ کوڈ صفحات سے ممتاز کیا جاسکے۔ تاہم RFC 3629 ، UTF-8 معیار ، سفارش کرتا ہے کہ ••UTF-8•• کا استعمال کرتے ہوئے پروٹوکول میں بائٹ آرڈر کے نشانات پر پابندی عائد کی جائے ، لیکن ان معاملات پر تبادلہ خیال کرتا ہے جہاں یہ ممکن نہیں ہوسکتا ہے۔ اس کے علاوہ ، UTF-8 میں ممکنہ نمونوں پر بڑی پابندی (مثال کے طور پر اعلی بٹ سیٹ کے ساتھ کوئی تنہا بائٹ نہیں ہوسکتا) کا مطلب ہے کہ UTF-8 کو دوسرے کردار انکوڈنگ سے الگ کرنا ممکن ہونا چاہئے۔,بائٹ آرڈر کے نشانات کس معیار کا استعمال کرتے ہوئے پروٹوکول میں ممنوع ہیں؟,False,False
134,273,14,572805f5ff5b5019007d9b1c,یونیکوڈ,اسی کردار کو UTF-8 میں تبدیل کیا جاتا ہے بائٹ تسلسل EF BB BF بن جاتا ہے۔ یونیکوڈ معیار کی اجازت دیتا ہے کہ BOM UTF-8 انکوڈ شدہ متن کے لئے دستخط کے طور پر کام کرسکتا ہے جہاں کردار سیٹ غیر نشان زد ہے۔ کچھ سافٹ ویئر ڈویلپرز نے اسے UTF-8 سمیت دیگر انکوڈنگ کے لئے اپنایا ہے ، تاکہ UTF-8 کو مقامی 8 بٹ کوڈ صفحات سے ممتاز کیا جاسکے۔ تاہم RFC 3629 ، UTF-8 معیار ، سفارش کرتا ہے کہ UTF-8 کا استعمال کرتے ہوئے پروٹوکول میں بائٹ آرڈر کے نشانات پر پابندی عائد کی جائے ، لیکن ان معاملات پر تبادلہ خیال کرتا ہے جہاں یہ ممکن نہیں ہوسکتا ہے۔ اس کے علاوہ ، UTF-8 میں ••ممکنہ نمونوں پر بڑی پابندی•• (مثال کے طور پر اعلی بٹ سیٹ کے ساتھ کوئی تنہا بائٹ نہیں ہوسکتا ہے) کا مطلب ہے کہ UTF-8 کو دوسرے کردار انکوڈنگ سے الگ کرنا ممکن ہونا چاہئے۔,UTF-8 کو دوسرے پروٹوکول سے الگ کرنا کیوں ممکن ہے؟,False,False
135,273,14,5acd211a07355d001abf35fe,یونیکوڈ,UTF-8 میں تبدیل کیا گیا ایک ہی کردار بائٹ تسلسل EF BB BF بن جاتا ہے۔ یونیکوڈ معیار کی اجازت دیتا ہے کہ BOM UTF-8 انکوڈ شدہ متن کے لئے دستخط کے طور پر کام کرسکتا ہے ••جہاں کردار سیٹ غیر نشان زد ہے۔•• کچھ سافٹ ویئر ڈویلپرز نے اسے UTF-8 سمیت دیگر انکوڈنگ کے لئے اپنایا ہے ، جس میں مقامی 8 بٹ کوڈ صفحات سے UTF-8 کو ممتاز کرنے کی کوشش کی گئی ہے۔ تاہم RFC 3629 ، UTF-8 معیار ، سفارش کرتا ہے کہ UTF-8 کا استعمال کرتے ہوئے پروٹوکول میں بائٹ آرڈر کے نشانات پر پابندی عائد کی جائے ، لیکن ان معاملات پر تبادلہ خیال کرتا ہے جہاں یہ ممکن نہیں ہوسکتا ہے۔ اس کے علاوہ ، UTF-8 میں ممکنہ نمونوں پر بڑی پابندی (مثال کے طور پر اعلی بٹ سیٹ کے ساتھ کوئی تنہا بائٹ نہیں ہوسکتا) کا مطلب ہے کہ UTF-8 کو دوسرے کردار انکوڈنگ سے BOM پر انحصار کیے بغیر ممتاز کرنا ممکن ہونا چاہئے۔,BOM کس قسم کے UTF-8 متن کی جگہ نہیں لے سکتا؟,True,False
136,273,14,5acd211a07355d001abf35ff,یونیکوڈ,اسی کردار کو UTF-8 میں تبدیل کیا جاتا ہے بائٹ تسلسل EF BB BF بن جاتا ہے۔ یونیکوڈ معیار کی اجازت دیتا ہے کہ ••BOM•• UTF-8 انکوڈ شدہ متن کے لئے دستخط کے طور پر کام کرسکتا ہے جہاں کردار سیٹ غیر نشان زد ہے۔ کچھ سافٹ ویئر ڈویلپرز نے اسے UTF-8 سمیت دیگر انکوڈنگ کے لئے اپنایا ہے ، جس میں مقامی 8 بٹ کوڈ صفحات سے UTF-8 کو ممتاز کرنے کی کوشش کی گئی ہے۔ تاہم RFC 3629 ، UTF-8 معیار ، سفارش کرتا ہے کہ UTF-8 کا استعمال کرتے ہوئے پروٹوکول میں بائٹ آرڈر کے نشانات پر پابندی عائد کی جائے ، لیکن ان معاملات پر تبادلہ خیال کرتا ہے جہاں یہ ممکن نہیں ہوسکتا ہے۔ اس کے علاوہ ، UTF-8 میں ممکنہ نمونوں پر بڑی پابندی (مثال کے طور پر اعلی بٹ سیٹ کے ساتھ کوئی تنہا بائٹ نہیں ہوسکتا ہے) کا مطلب ہے کہ UTF-8 کو دوسرے کردار انکوڈنگ سے BOM پر انحصار کیے بغیر ممتاز کرنا ممکن ہونا چاہئے۔,مقامی 8 بٹ کوڈ صفحات کو ممتاز کرنے کے لئے کیا استعمال کیا جاتا ہے؟,True,False
137,273,14,5acd211a07355d001abf3600,یونیکوڈ,اسی کردار کو UTF-8 میں تبدیل کیا جاتا ہے بائٹ تسلسل EF BB BF بن جاتا ہے۔ یونیکوڈ معیار کی اجازت دیتا ہے کہ BOM UTF-8 انکوڈ شدہ متن کے لئے دستخط کے طور پر کام کرسکتا ہے جہاں کردار سیٹ غیر نشان زد ہے۔ کچھ سافٹ ویئر ڈویلپرز نے اسے UTF-8 سمیت دیگر انکوڈنگ کے لئے اپنایا ہے ، جس میں مقامی 8 بٹ کوڈ صفحات سے UTF-8 کو ممتاز کرنے کی کوشش کی گئی ہے۔ تاہم ••RFC 3629•• ، UTF-8 معیار ، سفارش کرتا ہے کہ UTF-8 کا استعمال کرتے ہوئے پروٹوکول میں بائٹ آرڈر کے نشانات پر پابندی عائد کی جائے ، لیکن ان معاملات پر تبادلہ خیال کرتا ہے جہاں یہ ممکن نہیں ہوسکتا ہے۔ اس کے علاوہ ، UTF-8 میں ممکنہ نمونوں پر بڑی پابندی (مثال کے طور پر اعلی بٹ سیٹ کے ساتھ کوئی تنہا بائٹ نہیں ہوسکتا ہے) کا مطلب ہے کہ UTF-8 کو دوسرے کردار انکوڈنگ سے BOM پر انحصار کیے بغیر ممتاز کرنا ممکن ہونا چاہئے۔,بی او ایم معیار کا نام کیا ہے؟,True,False
138,273,14,5acd211a07355d001abf3601,یونیکوڈ,اسی کردار کو UTF-8 میں تبدیل کیا جاتا ہے بائٹ تسلسل EF BB BF بن جاتا ہے۔ یونیکوڈ معیار کی اجازت دیتا ہے کہ BOM UTF-8 انکوڈ شدہ متن کے لئے دستخط کے طور پر کام کرسکتا ہے جہاں کردار سیٹ غیر نشان زد ہے۔ کچھ سافٹ ویئر ڈویلپرز نے اسے UTF-8 سمیت دیگر انکوڈنگ کے لئے اپنایا ہے ، جس میں مقامی 8 بٹ کوڈ صفحات سے UTF-8 کو ممتاز کرنے کی کوشش کی گئی ہے۔ تاہم RFC 3629 ، UTF-8 معیار ، سفارش کرتا ہے کہ UTF-8 کا استعمال کرتے ہوئے پروٹوکول میں بائٹ آرڈر کے نشانات پر پابندی عائد کی جائے ، لیکن ان معاملات پر تبادلہ خیال کرتا ہے جہاں یہ ممکن نہیں ہوسکتا ہے۔ اس کے علاوہ ، UTF-8 میں ممکنہ نمونوں پر بڑی پابندی (مثال کے طور پر اعلی بٹ سیٹ کے ساتھ کوئی ••تنہا•• بائٹ نہیں ہوسکتا ہے) کا مطلب ہے کہ UTF-8 کو دوسرے کردار انکوڈنگ سے BOM پر انحصار کیے بغیر ممتاز کرنا ممکن ہونا چاہئے۔,ایک اعلی بٹ سیٹ میں کس قسم کے بائٹس کی ضرورت ہوتی ہے؟,True,False
139,273,14,5acd211a07355d001abf3602,یونیکوڈ,اسی کردار کو UTF-8 میں تبدیل کیا جاتا ہے بائٹ تسلسل EF BB BF بن جاتا ہے۔ یونیکوڈ معیار کی اجازت دیتا ہے کہ BOM UTF-8 انکوڈ شدہ متن کے لئے دستخط کے طور پر کام کرسکتا ہے جہاں کردار سیٹ غیر نشان زد ہے۔ کچھ سافٹ ویئر ڈویلپرز نے اسے UTF-8 سمیت دیگر انکوڈنگ کے لئے اپنایا ہے ، تاکہ UTF-8 کو مقامی 8 بٹ کوڈ صفحات سے ممتاز کیا جاسکے۔ تاہم RFC 3629 ، UTF-8 معیار ، سفارش کرتا ہے کہ UTF-8 کا استعمال کرتے ہوئے پروٹوکول میں بائٹ آرڈر کے نشانات پر پابندی عائد کی جائے ، لیکن ان معاملات پر تبادلہ خیال کرتا ہے جہاں یہ ممکن نہیں ہوسکتا ہے۔ اس کے علاوہ ، ••UTF-8 میں ممکنہ نمونوں•• پر بڑی پابندی (مثال کے طور پر اعلی بٹ سیٹ کے ساتھ کوئی تنہا بائٹ نہیں ہوسکتا) کا مطلب ہے کہ UTF-8 کو دوسرے کردار انکوڈنگ سے BOM پر انحصار کیے بغیر ممتاز کرنا ممکن ہونا چاہئے۔,کس قسم کے نمونے شاذ و نادر ہی resticted کر رہے ہیں؟,True,False
140,273,15,57280742ff5b5019007d9b3c,یونیکوڈ,UTF-32 اور UCS-4 میں ، ایک 32 بٹ کوڈ ویلیو کسی بھی کردار کے کوڈ پوائنٹ کی کافی براہ راست نمائندگی کے طور پر کام کرتا ہے (اگرچہ اینڈینسی ، جو مختلف پلیٹ فارمز میں مختلف ہوتی ہے ، اس پر اثر انداز ہوتی ہے کہ کوڈ ویلیو ایک آکٹٹ تسلسل کے طور پر کس طرح ظاہر ہوتا ہے۔ دیگر انکوڈنگز میں ، ہر کوڈ پوائنٹ کو کوڈ ویلیو کی متغیر تعداد کے ذریعہ نمائندگی کی جاسکتی ہے۔ UTF-32 کو وسیع پیمانے پر ••پروگراموں میں متن کی داخلی نمائندگی•• کے طور پر استعمال کیا جاتا ہے (جیسے ذخیرہ شدہ یا منتقل شدہ متن کے برعکس) ، کیونکہ ہر یونیکس آپریٹنگ سسٹم جو سافٹ ویئر پیدا کرنے کے لئے gcc کمپائلرز کا استعمال کرتا ہے اسے معیاری وسیع کردار انکوڈنگ کے طور پر استعمال کرتا ہے۔ کچھ پروگرامنگ زبانیں ، جیسے Seed7 ، UTF-32 کو سٹرنگ اور حروف کے لئے داخلی نمائندگی کے طور پر استعمال کرتی ہیں۔ پائتھون پروگرامنگ زبان کے حالیہ ورژن (2.2 سے شروع) کو بھی یونیکوڈ سٹرنگ کے لئے نمائندگی کے طور پر UTF-32 استعمال کرنے کے لئے تشکیل دیا جاسکتا ہے۔,UTF-32 وسیع پیمانے پر کس طرح استعمال کیا جاتا ہے؟,False,False
141,273,15,57280742ff5b5019007d9b3d,یونیکوڈ,UTF-32 اور UCS-4 میں ، ایک 32 بٹ کوڈ ویلیو کسی بھی کردار کے کوڈ پوائنٹ کی کافی براہ راست نمائندگی کے طور پر کام کرتی ہے (اگرچہ مختلف پلیٹ فارمز میں مختلف ہوتی ہے ، اس سے اثر پڑتا ہے کہ کوڈ ویلیو ایک آکٹٹ تسلسل کے طور پر کس طرح ظاہر ہوتا ہے۔ دیگر انکوڈنگز میں ، ہر کوڈ پوائنٹ کو کوڈ ویلیو کی متغیر تعداد کے ذریعہ نمائندگی کی جاسکتی ہے۔ UTF-32 کو وسیع پیمانے پر پروگراموں میں متن کی داخلی نمائندگی کے طور پر استعمال کیا جاتا ہے (جیسے کہ ذخیرہ شدہ یا منتقل شدہ متن کے برعکس) ، کیونکہ ہر یونیکس آپریٹنگ سسٹم جو سافٹ ویئر پیدا کرنے کے لئے gcc کمپائلرز کا استعمال کرتا ہے اسے معیاری وسیع کردار انکوڈنگ کے طور پر استعمال کرتا ہے۔ کچھ پروگرامنگ زبانیں ، جیسے ••سیڈ 7•• ، UTF-32 کو سٹرنگ اور حروف کے لئے داخلی نمائندگی کے طور پر استعمال کرتی ہیں۔ پائیتھن پروگرامنگ زبان کے حالیہ ورژن (2.2 سے شروع) کو بھی یونیکوڈ سٹرنگ کے لئے نمائندگی کے طور پر UTF-32 استعمال کرنے کے لئے تشکیل دیا جاسکتا ہے۔,کون سا پروگرامنگ زبان حروف کی اندرونی نمائندگی کے طور پر UTF-32 کا استعمال کرتا ہے؟,False,False
142,273,15,57280742ff5b5019007d9b3e,یونیکوڈ,"UTF-32 اور UCS-4 میں ، ایک 32 بٹ کوڈ ویلیو کسی بھی کردار کے کوڈ پوائنٹ کی کافی براہ راست نمائندگی کے طور پر کام کرتا ہے (اگرچہ مختلف پلیٹ فارمز میں مختلف ہوتی ہے ، اس سے متاثر ہوتا ہے کہ کوڈ ویلیو ایک آکٹٹ تسلسل کے طور پر کس طرح ظاہر ہوتا ہے۔ دیگر انکوڈنگز میں ، ہر کوڈ پوائنٹ کو کوڈ ویلیو کی متغیر تعداد کے ذریعہ نمائندگی کی جاسکتی ہے۔ UTF-32 کو وسیع پیمانے پر پروگراموں میں متن کی داخلی نمائندگی کے طور پر استعمال کیا جاتا ہے (جیسا کہ ذخیرہ شدہ یا منتقل شدہ متن کے برعکس) ، کیونکہ ہر یونیکس آپریٹنگ سسٹم جو سافٹ ویئر پیدا کرنے کے لئے gcc کمپائلرز کا استعمال کرتا ہے اسے معیاری وسیع کردار انکوڈنگ کے طور پر استعمال کرتا ہے۔ کچھ پروگرامنگ زبانیں ، جیسے Seed7, UTF-32 کو سٹرنگ اور حروف کے لئے داخلی نمائندگی کے طور پر استعمال کرتی ہیں۔ پائتھون پروگرامنگ زبان کے حالیہ ورژن (جو ••2.2•• سے شروع ہوتا ہے) کو بھی یونیکوڈ کے لئے سٹرنگ کے لئے نمائندگی کے طور پر استعمال کرنے کے لئے تشکیل دیا جاسکتا ہے۔",پیٹون کا کون سا ورژن UTF-32 کے ساتھ استعمال کیا جا سکتا ہے؟,False,False
143,273,15,5acd21f407355d001abf361c,یونیکوڈ,"UTF-32 اور UCS-4 میں ، ایک 32 بٹ کوڈ ویلیو کسی بھی کردار کے کوڈ پوائنٹ کی کافی براہ راست نمائندگی کے طور پر کام کرتا ہے (حالانکہ ••انتیجہ•• ، جو مختلف پلیٹ فارمز میں مختلف ہوتا ہے ، اس پر اثر انداز ہوتا ہے کہ کوڈ ویلیو ایک آکٹٹ تسلسل کے طور پر کس طرح ظاہر ہوتا ہے۔ دیگر انکوڈنگز میں ، ہر کوڈ پوائنٹ کو کوڈ ویلیو کی متغیر تعداد کے ذریعہ نمائندگی کی جاسکتی ہے۔ UTF-32 کو وسیع پیمانے پر پروگراموں میں متن کی داخلی نمائندگی کے طور پر استعمال کیا جاتا ہے (جیسا کہ ذخیرہ شدہ یا منتقل شدہ متن کے برعکس) ، کیونکہ ہر یونیکس آپریٹنگ سسٹم جو سافٹ ویئر پیدا کرنے کے لئے gcc کمپائلرز کا استعمال کرتا ہے اسے معیاری وسیع کردار انکوڈنگ کے طور پر استعمال کرتا ہے۔ کچھ پروگرامنگ زبانیں ، جیسے Seed7, UTF-32 کو سٹرنگ اور حروف کے لئے داخلی نمائندگی کے طور پر استعمال کرتی ہیں۔ پروگرامنگ زبان پائتھون کے حالیہ ورژن (2.2 سے شروع) کو بھی یونیکوڈ کے لئے نمائندگی کے طور پر استعمال کیا جاسکتا ہے۔",پلیٹ فارم کے درمیان کیا مختلف نہیں ہے؟,True,False
144,273,15,5acd21f407355d001abf361d,یونیکوڈ,UTF-32 اور UCS-4 میں ، ایک 32 بٹ کوڈ ویلیو کسی بھی کردار کے کوڈ پوائنٹ کی کافی براہ راست نمائندگی کے طور پر کام کرتی ہے (اگرچہ مختلف پلیٹ فارمز میں مختلف ہوتی ہے ، اس سے اثر پڑتا ہے کہ کوڈ ویلیو ایک آکٹٹ تسلسل کے طور پر کس طرح ظاہر ہوتا ہے۔ دیگر انکوڈنگز میں ، ہر کوڈ پوائنٹ کو کوڈ ویلیو کی متغیر تعداد کے ذریعہ نمائندگی کی جاسکتی ہے۔ UTF-32 کو وسیع پیمانے پر پروگراموں میں متن کی داخلی نمائندگی کے طور پر استعمال کیا جاتا ہے (جیسے کہ ذخیرہ شدہ یا منتقل شدہ متن کے برعکس) ، کیونکہ ہر یونیکس آپریٹنگ سسٹم جو سافٹ ویئر پیدا کرنے کے لئے gcc کمپائلرز کا استعمال کرتا ہے اسے معیاری وسیع کردار انکوڈنگ کے طور پر استعمال کرتا ہے۔ کچھ پروگرامنگ زبانیں ، جیسے ••سیڈ 7•• ، UTF-32 کو سٹرنگ اور حروف کے لئے داخلی نمائندگی کے طور پر استعمال کرتی ہیں۔ پائیتھن پروگرامنگ زبان کے حالیہ ورژن (2.2 سے شروع) کو بھی یونیکوڈ سٹرنگ کے لئے نمائندگی کے طور پر UTF-32 استعمال کرنے کے لئے تشکیل دیا جاسکتا ہے۔,کیا ایک اندرونی نمائندگی کے طور پر UCS-4 کا استعمال کرتا ہے؟,True,False
145,273,15,5acd21f407355d001abf361e,یونیکوڈ,"UTF-32 اور UCS-4 میں ، ایک 32 بٹ کوڈ ویلیو کسی بھی کردار کے کوڈ پوائنٹ کی کافی براہ راست نمائندگی کے طور پر کام کرتا ہے (اگرچہ مختلف پلیٹ فارمز میں مختلف ہوتی ہے ، اس سے متاثر ہوتا ہے کہ کوڈ ویلیو ایک آکٹٹ تسلسل کے طور پر کس طرح ظاہر ہوتا ہے۔ دیگر انکوڈنگز میں ، ہر کوڈ پوائنٹ کو کوڈ ویلیو کی متغیر تعداد کے ذریعہ نمائندگی کی جاسکتی ہے۔ UTF-32 کو وسیع پیمانے پر پروگراموں میں متن کی داخلی نمائندگی کے طور پر استعمال کیا جاتا ہے (جیسا کہ ذخیرہ شدہ یا منتقل شدہ متن کے برعکس) ، کیونکہ ہر یونیکس آپریٹنگ سسٹم جو سافٹ ویئر پیدا کرنے کے لئے gcc کمپائلرز کا استعمال کرتا ہے اسے معیاری وسیع کردار انکوڈنگ کے طور پر استعمال کرتا ہے۔ کچھ پروگرامنگ زبانیں ، جیسے Seed7, UTF-32 کو سٹرنگ اور حروف کے لئے داخلی نمائندگی کے طور پر استعمال کرتی ہیں۔ پائتھون پروگرامنگ زبان کے حالیہ ورژن (جو ••2.2•• سے شروع ہوتا ہے) کو بھی یونیکوڈ کے لئے سٹرنگ کے لئے نمائندگی کے طور پر استعمال کرنے کے لئے تشکیل دیا جاسکتا ہے۔",پائیتھن کا آخری ورژن کیا ہے جو UTF-32 استعمال کرسکتا ہے؟,True,False
146,273,15,5acd21f407355d001abf361f,یونیکوڈ,UTF-32 اور UCS-4 میں ، ایک 32 بٹ کوڈ ویلیو کسی بھی کردار کے کوڈ پوائنٹ کی کافی براہ راست نمائندگی کے طور پر کام کرتا ہے (حالانکہ اینڈینسی ، جو مختلف پلیٹ فارمز میں مختلف ہوتی ہے ، اس پر اثر انداز ہوتی ہے کہ کوڈ ویلیو ایک آکٹٹ تسلسل کے طور پر کس طرح ظاہر ہوتا ہے۔ دیگر انکوڈنگز میں ، ہر کوڈ پوائنٹ کو کوڈ ویلیو کی متغیر تعداد کے ذریعہ نمائندگی کی جاسکتی ہے۔ UTF-32 کو وسیع پیمانے پر پروگراموں میں متن کی داخلی نمائندگی کے طور پر استعمال کیا جاتا ہے (جیسے ذخیرہ شدہ یا منتقل شدہ متن کے برعکس) ، کیونکہ ہر یونیکس آپریٹنگ سسٹم جو سافٹ ویئر پیدا کرنے کے لئے ••جی سی سی کمپائلرز•• کا استعمال کرتا ہے اسے معیاری وسیع کردار انکوڈنگ کے طور پر استعمال کرتا ہے۔ کچھ پروگرامنگ زبانیں ، جیسے سیڈ 7 ، UTF-32 کو سٹرنگ اور حروف کے لئے داخلی نمائندگی کے طور پر استعمال کرتی ہیں۔ پائتھون پروگرامنگ زبان کے حالیہ ورژن (2.2 سے شروع) کو بھی یونیکوڈ سٹرنگ کے لئے نمائندگی کے طور پر استعمال کیا جاسکتا ہے۔,پائیتھن معیاری وسیع کردار انکوڈنگ پیدا کرنے کے لئے کیا استعمال کرتا ہے؟,True,False
147,273,15,5acd21f407355d001abf3620,یونیکوڈ,UTF-32 اور UCS-4 میں ، ایک 32 بٹ کوڈ ویلیو کسی بھی کردار کے کوڈ پوائنٹ کی کافی براہ راست نمائندگی کے طور پر کام کرتا ہے (اگرچہ اینڈینسی ، جو مختلف پلیٹ فارمز میں مختلف ہوتی ہے ، اس پر اثر انداز ہوتی ہے کہ کوڈ ویلیو ایک آکٹٹ تسلسل کے طور پر کس طرح ظاہر ہوتا ہے۔ دیگر انکوڈنگز میں ، ہر کوڈ پوائنٹ کو کوڈ ویلیو کی متغیر تعداد کے ذریعہ نمائندگی کی جاسکتی ہے۔ ••UTF-32•• کو وسیع پیمانے پر پروگراموں میں متن کی داخلی نمائندگی کے طور پر استعمال کیا جاتا ہے (جیسے ذخیرہ شدہ یا منتقل شدہ متن کے برعکس) ، کیونکہ ہر یونیکس آپریٹنگ سسٹم جو سافٹ ویئر پیدا کرنے کے لئے gcc کمپائلرز کا استعمال کرتا ہے اسے معیاری وسیع کردار انکوڈنگ کے طور پر استعمال کرتا ہے۔ کچھ پروگرامنگ زبانیں ، جیسے Seed7 ، UTF-32 کو سٹرنگ اور حروف کے لئے داخلی نمائندگی کے طور پر استعمال کرتی ہیں۔ پائیتھن پروگرامنگ زبان کے حالیہ ورژن (2.2 سے شروع) کو بھی یونیکوڈ سٹرنگ کے لئے نمائندگی کے طور پر استعمال کرنے کے لئے تشکیل دیا جاسکتا ہے۔,منتقل شدہ متن کی نمائندگی کرنے کے لئے کیا استعمال کیا جاتا ہے؟,True,False
148,273,16,572808464b864d1900164292,یونیکوڈ,یونیکوڈ میں کردار کی شکل میں ترمیم کرنے کا ایک طریقہ کار شامل ہے جو معاون گلیف ریپرٹوری کو بہت بڑھاتا ہے۔ اس میں ڈیاکریٹک نشانات کو جوڑنے کا استعمال شامل ہے۔ وہ مرکزی کردار کے بعد داخل کیے جاتے ہیں۔ ایک ہی کردار پر متعدد جوڑنے والے ڈیاکریٹک نشانات کو اسٹیک کیا جاسکتا ہے۔ یونیکوڈ میں ••زیادہ تر حرف / ڈیاکریٹک مجموعے•• کے پہلے سے تشکیل شدہ ورژن بھی شامل ہیں۔ یہ پرانے انکوڈنگز میں اور ان سے تبادلوں کو آسان بناتے ہیں ، اور ایپلی کیشنز کو ایک ہی کردار کو جوڑنے کے بغیر اندرونی ٹیکسٹ فارمیٹ کے طور پر یونیکوڈ استعمال کرنے کی اجازت دیتے ہیں۔ مثال کے طور پر ، é کو یونیکوڈ میں U+0065 (لاطینی چھوٹا خط E) کے بعد U+0301 (کومبیننگ ایکٹو ایکسنٹ) کے طور پر نمائندگی کی جاسکتی ہے ، لیکن اسے پہلے سے تشکیل شدہ کردار U+009E (لاطینی چھوٹا خط WIN ایکٹو ایکٹو) کے طور پر بھی نمائندگی کی جاسکتی ہے۔ اس طرح ، بہت سے معاملات میں ، ایک ہی کردار کے ساتھ متعدد معاملات۔ یونیکوڈ کو کوڈ کرنے کا طریقہ کار کیننیکل مساوات فراہم کرتا ہے۔,عام استعمال میں یونیکوڈ میں کون سے مجموعے ہوتے ہیں؟,False,False
149,273,16,572808464b864d1900164293,یونیکوڈ,یونیکوڈ میں کردار کی شکل میں ترمیم کرنے کا ایک طریقہ کار شامل ہے جو معاون گلیف ریپرٹوری کو بہت بڑھاتا ہے۔ اس میں ڈیاکریٹک نشانات کو جوڑنے کا استعمال شامل ہے۔ انہیں مرکزی کردار کے بعد داخل کیا جاتا ہے۔ ایک ہی کردار پر متعدد جوڑنے والے ڈیاکریٹک نشانات کو اسٹیک کیا جاسکتا ہے۔ یونیکوڈ میں عام استعمال میں زیادہ تر حرف / ڈیاکریٹک مجموعوں کے پہلے سے تشکیل شدہ ورژن بھی شامل ہیں۔ یہ میراث انکوڈنگ میں اور اس سے تبادلوں کو آسان بناتے ہیں ، اور ایپلی کیشنز کو یونیکوڈ کو ایک ہی کردار کو جوڑنے کے بغیر اندرونی ٹیکسٹ فارمیٹ کے طور پر استعمال کرنے کی اجازت دیتے ہیں۔ مثال کے طور پر ، é کو یونیکوڈ میں ••U+0065•• (لاطینی چھوٹا خط E) کے بعد U+0301 (COMBINING ACUTE ACCENT) کے طور پر پیش کیا جاسکتا ہے ، لیکن اسے پہلے سے تشکیل شدہ کردار U+009E (لاطینی چھوٹا خط WINTER EUTE) کے طور پر بھی پیش کیا جاسکتا ہے۔ اس طرح ، بہت سے معاملات میں ، ایک ہی کردار کے ساتھ متعدد معاملات۔ یونیکوڈ کو کوڈ کرنے کا طریقہ کار کیننیکل مساوات فراہم کرتا ہے۔,یونیکوڈ میں لاطینی چھوٹے حرف ای کی نمائندگی کیسے کی جاتی ہے؟,False,False
150,273,16,572808464b864d1900164294,یونیکوڈ,یونیکوڈ میں کردار کی شکل میں ترمیم کرنے کا ایک طریقہ کار شامل ہے جو معاون گلیف ریپرٹوری کو بہت بڑھاتا ہے۔ اس میں ڈیاکریٹک نشانات کو جوڑنے کا استعمال شامل ہے۔ وہ مرکزی کردار کے بعد داخل کیے جاتے ہیں۔ ایک ہی کردار پر متعدد جوڑنے والے ڈیاکریٹک نشانات کو اسٹیک کیا جاسکتا ہے۔ یونیکوڈ میں زیادہ تر حرف / ڈیاکریٹک مجموعوں کے پہلے سے تشکیل شدہ ورژن بھی شامل ہیں۔ یہ میراث انکوڈنگ میں اور اس سے تبادلوں کو آسان بناتے ہیں ، اور ایپلی کیشنز کو یونیکوڈ کو اندرونی ٹیکسٹ فارمیٹ کے طور پر استعمال کرنے کی اجازت دیتے ہیں۔ مثال کے طور پر ، یونیکوڈ میں U+0065 (لاطینی چھوٹا خط E) کے بعد ••U+0301•• (COMBINING ACUTE ACCENT) کی نمائندگی کی جاسکتی ہے ، لیکن اسے پہلے سے تشکیل شدہ کردار U+E009 (چھوٹا خط WINTER ACUTE ACUTEH) کے طور پر بھی نمائندگی کی جاسکتی ہے۔ اس طرح ، بہت سے معاملات میں ، ایک ہی کردار کے ساتھ متعدد طریقوں سے نمٹنے کے ل this ، یونیکوڈ صارفین کو کیننیکل مساوات فراہم کرتا ہے۔,چھوٹے لاطینی ای میں تلفظ کیسے شامل کیا جاتا ہے؟,False,False
151,273,16,572808464b864d1900164295,یونیکوڈ,یونیکوڈ میں کردار کی شکل میں ترمیم کرنے کا ایک طریقہ کار شامل ہے جو معاون گلیف ریپرٹوری کو بہت بڑھاتا ہے۔ اس میں ڈیاکریٹک نشانات کو جوڑنے کا استعمال شامل ہے۔ وہ مرکزی کردار کے بعد داخل کیے جاتے ہیں۔ ایک ہی کردار پر متعدد جوڑنے والے ڈیاکریٹک نشانات کو اسٹیک کیا جاسکتا ہے۔ یونیکوڈ میں زیادہ تر حرف / ڈیاکریٹک مجموعوں کے پہلے سے تشکیل شدہ ورژن بھی شامل ہیں۔ یہ میراث انکوڈنگ میں اور اس سے تبادلوں کو آسان بناتے ہیں ، اور ایپلی کیشنز کو یونیکوڈ کو داخلی ٹیکسٹ فارمیٹ کے طور پر استعمال کرنے کی اجازت دیتے ہیں۔ مثال کے طور پر ، ای کو یونیکوڈ میں U+0065 (لاطینی چھوٹا خط E) کے بعد U+0301 (COMBINING ACUTE ACCENT) کے طور پر پیش کیا جاسکتا ہے ، لیکن اسے پہلے سے تشکیل شدہ کردار ••U+E009•• (لاطینی چھوٹا خط WITH ACUTE) کے طور پر بھی پیش کیا جاسکتا ہے۔ اس طرح ، بہت سے معاملات میں ، ایک ہی کردار کے ساتھ متعدد معاملات۔ یونیکوڈ انکوڈنگ صارفین کو کیننیکل مساوات فراہم کرتا ہے۔,کیا precomposed کردار ایک تلفظ کے ساتھ چھوٹے لاطینی ای کی نمائندگی کرتا ہے؟,False,False
152,273,16,5acd22b507355d001abf3644,یونیکوڈ,یونیکوڈ میں کردار کی شکل میں ترمیم کرنے کا ایک طریقہ کار شامل ہے جو معاون گلیف ریپرٹوری کو بہت بڑھا دیتا ہے۔ اس میں ••ڈیاکریٹک نشانات•• کو جوڑنے کا استعمال شامل ہے۔ انہیں مرکزی کردار کے بعد داخل کیا جاتا ہے۔ ایک ہی کردار پر متعدد جوڑنے والے ڈیاکریٹک کو اسٹیک کیا جاسکتا ہے۔ یونیکوڈ میں زیادہ تر حرف / ڈیاکریٹک مجموعوں کے پہلے سے تشکیل شدہ ورژن بھی شامل ہیں۔ یہ میراث انکوڈنگ میں اور اس سے تبادلوں کو آسان بناتے ہیں ، اور ایپلی کیشنز کو یونیکوڈ کو ایک ہی کردار کو جوڑنے کے بغیر اندرونی ٹیکسٹ فارمیٹ کے طور پر استعمال کرنے کی اجازت دیتے ہیں۔ مثال کے طور پر ، é کو یونیکوڈ میں U+0065 (لاطینی SMALL LETTER E) کے بعد U+0301 (COMBINING ACUTE ACCENT) کے طور پر پیش کیا جاسکتا ہے ، لیکن اسے پہلے سے تشکیل شدہ کردار U+E009 (LATTER WINTER SMALL LETTER EITH) کے طور پر بھی پیش کیا جاسکتا ہے۔ اس طرح ، بہت سے معاملات میں ، ایک ہی کردار کے ساتھ متعدد طریقوں سے نمٹنے کے لئے۔ یونیکوڈ کو کوڈ کرنے کا طریقہ کار کیننیکل مساوات فراہم کرتا ہے۔,ایک مرکزی کردار سے پہلے کیا داخل کیا جاتا ہے؟,True,False
153,273,16,5acd22b507355d001abf3645,یونیکوڈ,یونیکوڈ میں کردار کی شکل میں ترمیم کرنے کا ایک طریقہ کار شامل ہے جو معاون گلیف ریپرٹوری کو بہت بڑھا دیتا ہے۔ اس میں ڈیاکریٹک نشانوں کو جوڑنے کا استعمال شامل ہے۔ انہیں مرکزی کردار کے بعد داخل کیا جاتا ہے۔ ایک سے زیادہ جوڑنے والے ڈیاکریٹک کو ••ایک ہی کردار•• پر اسٹیک کیا جاسکتا ہے۔ یونیکوڈ میں زیادہ تر حرف / ڈیاکریٹک مجموعوں کے پہلے سے تشکیل شدہ ورژن بھی شامل ہیں۔ یہ میراث انکوڈنگ میں اور اس سے تبادلوں کو آسان بناتے ہیں ، اور ایپلی کیشنز کو ایک ہی کردار کو جوڑنے کے بغیر اندرونی ٹیکسٹ فارمیٹ کے طور پر یونیکوڈ استعمال کرنے کی اجازت دیتے ہیں۔ مثال کے طور پر ، é کو یونیکوڈ میں U+0065 (لاطینی SMALL LETTER E) کے بعد U+0301 (COMBINING ACUTE ACCENT) کے طور پر پیش کیا جاسکتا ہے ، لیکن اسے پہلے سے تشکیل شدہ کردار U+E009 (LATTER WINTER SMALL LETTER EITH) کے طور پر بھی پیش کیا جاسکتا ہے۔ اس طرح ، بہت سے معاملات میں ، ایک ہی کردار کے ساتھ متعدد طریقوں سے نمٹنے کے لئے۔ یونیکوڈ کو کوڈ کرنے کا طریقہ کار کیننیکل مساوات فراہم کرتا ہے۔,کیا ڈایاکریٹک کے متعدد مثالیں نہیں ہو سکتے ہیں؟,True,False
154,273,16,5acd22b507355d001abf3646,یونیکوڈ,یونیکوڈ میں کردار کی شکل میں ترمیم کرنے کا ایک طریقہ کار شامل ہے جو معاون گلیف ریپرٹوری کو بہت بڑھاتا ہے۔ اس میں ڈیاکریٹک نشانات کو جوڑنے کا استعمال شامل ہے۔ وہ مرکزی کردار کے بعد داخل کیے جاتے ہیں۔ ایک ہی کردار پر متعدد جوڑنے والے ڈیاکریٹک نشانات کو اسٹیک کیا جاسکتا ہے۔ یونیکوڈ میں عام استعمال میں زیادہ تر حرف / ڈیاکریٹک مجموعوں کے پہلے سے تشکیل شدہ ورژن بھی شامل ہیں۔ یہ میراث انکوڈنگ میں اور اس سے تبادلوں کو آسان بناتے ہیں ، اور ایپلی کیشنز کو ••ایک ہی کردار کو جوڑنے•• کے بغیر اندرونی ٹیکسٹ فارمیٹ کے طور پر یونیکوڈ استعمال کرنے کی اجازت دیتے ہیں۔ مثال کے طور پر ، é کو یونیکوڈ میں U+0065 (لاطینی چھوٹا خط E) کے بعد U+0301 (COMBINING ACUTE ACCENT) کے طور پر نمائندگی کی جاسکتی ہے ، لیکن اسے پہلے سے تشکیل شدہ کردار U+E009 (چھوٹا خط WINTER EITHTE) کے طور پر بھی نمائندگی کی جاسکتی ہے۔ اس طرح ، بہت سے معاملات میں ، ایک ہی کردار کے ساتھ متعدد معاملات۔ یونیکوڈ کو کوڈ کرنے کا طریقہ کار کیننیکل مساوات فراہم کرتا ہے۔,کیا ایپلی کیشنز کو لاگو کرنا ہے؟,True,False
155,273,16,5acd22b507355d001abf3647,یونیکوڈ,یونیکوڈ میں کردار کی شکل میں ترمیم کرنے کا ایک طریقہ کار شامل ہے جو معاون گلیف ریپرٹوری کو بہت بڑھاتا ہے۔ اس میں ڈیاکریٹک نشانات کو جوڑنے کا استعمال شامل ہے۔ وہ مرکزی کردار کے بعد داخل کیے جاتے ہیں۔ ایک ہی کردار پر متعدد جوڑنے والے ڈیاکریٹک نشانات کو اسٹیک کیا جاسکتا ہے۔ یونیکوڈ میں زیادہ تر حرف / ڈیاکریٹک مجموعوں کے پہلے سے تشکیل شدہ ورژن بھی شامل ہیں۔ یہ میراث انکوڈنگ میں اور اس سے تبادلوں کو آسان بناتے ہیں ، اور ایپلی کیشنز کو یونیکوڈ کو ایک ہی کردار کو جوڑنے کے بغیر اندرونی ٹیکسٹ فارمیٹ کے طور پر استعمال کرنے کی اجازت دیتے ہیں۔ مثال کے طور پر ، é کو یونیکوڈ میں U+0065 (لاطینی چھوٹا خط E) کے بعد U+0301 (COMBINING ACUTE ACCENT) کے طور پر نمائندگی کی جاسکتی ہے ، لیکن اسے پہلے سے تشکیل شدہ کردار U+E009 (لاطینی خط WITH ACCENT) کے طور پر بھی نمائندگی کی جاسکتی ہے۔ اس طرح ، بہت سے معاملات میں ، متعدد صارفین کو ایک ہی کردار سے نمٹنے کی اجازت دیتے ہیں۔,آپ ایک کردار بنانے کے طریقوں میں redundancy کی روک تھام کیا ہے؟,True,True
156,273,16,5acd22b507355d001abf3648,یونیکوڈ,یونیکوڈ میں کردار کی شکل میں ترمیم کرنے کا ایک طریقہ کار شامل ہے جو معاون گلیف ریپرٹوری کو بہت بڑھاتا ہے۔ اس میں ڈیاکریٹک نشانات کو جوڑنے کا استعمال شامل ہے۔ انہیں مرکزی کردار کے بعد داخل کیا جاتا ہے۔ ایک ہی کردار پر متعدد جوڑنے والے ڈیاکریٹک نشانات کو اسٹیک کیا جاسکتا ہے۔ یونیکوڈ میں عام استعمال میں زیادہ تر حرف / ڈیاکریٹک مجموعوں کے پہلے سے تشکیل شدہ ورژن بھی شامل ہیں۔ یہ میراث انکوڈنگ میں اور اس سے تبادلوں کو آسان بناتے ہیں ، اور ایپلی کیشنز کو یونیکوڈ کو ایک ہی کردار کو جوڑنے کے بغیر اندرونی ٹیکسٹ فارمیٹ کے طور پر استعمال کرنے کی اجازت دیتے ہیں۔ مثال کے طور پر ، é کو یونیکوڈ میں ••U+0065•• (لاطینی چھوٹا خط E) کے بعد U+0301 (COMBINING ACUTE ACCENT) کے طور پر پیش کیا جاسکتا ہے ، لیکن اسے پہلے سے تشکیل شدہ کردار U+009E (لاطینی چھوٹا خط WINTER EUTE) کے طور پر بھی پیش کیا جاسکتا ہے۔ اس طرح ، بہت سے معاملات میں ، ایک ہی کردار کے ساتھ متعدد معاملات۔ یونیکوڈ کو کوڈ کرنے کا طریقہ کار کیننیکل مساوات فراہم کرتا ہے۔,یونیکوڈ میں بڑے حرف ای کا اشارہ کیسے کیا جاتا ہے؟,True,False
157,273,17,572809a13acd2414000df2f7,یونیکوڈ,سی جے کے آئیڈیوگرافس میں فی الحال صرف ان کی پہلے سے تشکیل شدہ شکل کے لئے کوڈز ہیں۔ پھر بھی ، ان میں سے زیادہ تر آئیڈیوگرافس میں سادہ عناصر شامل ہیں (جس کو انگریزی میں اکثر ••ریڈیکل•• کہا جاتا ہے) ، لہذا اصولی طور پر ، یونیکوڈ ان کو تحلیل کرسکتا تھا ، جیسا کہ اس نے ہنگول کے ساتھ کیا تھا۔ اس سے مطلوبہ کوڈ پوائنٹس کی تعداد بہت کم ہوجائے گی ، جبکہ عملی طور پر ہر تصوراتی آئیڈیوگرافس کی نمائش کی اجازت دی جائے گی (جو ہان اتحاد کی وجہ سے پیدا ہونے والے کچھ مسائل کو دور کرسکتا ہے۔ اسی طرح کا خیال کچھ ان پٹ طریقوں کے ذریعہ استعمال کیا جاتا ہے ، جیسے کانگجی اور ووبی۔ تاہم ، کردار انکوڈنگ کے لئے ایسا کرنے کی کوششوں نے اس حقیقت پر ٹھوکر کھائی ہے کہ آئیڈیوگرافس ہنگول کی طرح آسانی سے یا باقاعدگی سے تحلیل نہیں کرتے ہیں۔,CJK ideograms سادہ عناصر پر مشتمل ہے جسے انگریزی میں کیا کہا جاتا ہے؟,False,False
158,273,17,572809a13acd2414000df2f8,یونیکوڈ,سی جے کے آئیڈیوگرافس میں فی الحال صرف ان کی پہلے سے تشکیل شدہ شکل کے لئے کوڈز ہیں۔ پھر بھی ، ان میں سے زیادہ تر آئیڈیوگرافس میں سادہ عناصر شامل ہیں (جس کو انگریزی میں اکثر ریڈیکل کہا جاتا ہے) ، لہذا اصولی طور پر ، یونیکوڈ ان کو تحلیل کرسکتا تھا ، جیسا کہ اس نے ہنگول کے ساتھ کیا تھا۔ اس سے مطلوبہ کوڈ پوائنٹس کی تعداد بہت کم ہوجائے گی ، جبکہ عملی طور پر ہر تصوراتی آئیڈیوگرافس کی نمائش کی اجازت دی جائے گی (جو ہان اتحاد کی وجہ سے پیدا ہونے والے کچھ مسائل کو ختم کرسکتی ہے۔ اسی طرح کا خیال کچھ ان پٹ طریقوں کے ذریعہ استعمال کیا جاتا ہے ، جیسے کانگجی اور ووبی۔ تاہم ، کردار انکوڈنگ کے لئے ایسا کرنے کی کوششوں نے اس حقیقت پر ٹھوکر کھائی ہے کہ ••آئیڈیوگرافس ہنگول کی طرح آسانی سے یا باقاعدگی سے تحلیل نہیں کرتے••۔,ہنگول کی طرح آئیڈیگراف کو سادہ کیوں نہیں کیا جا سکتا؟,False,False
159,273,17,572809a13acd2414000df2f9,یونیکوڈ,سی جے کے آئیڈیوگرافس میں فی الحال صرف ان کی پہلے سے تشکیل شدہ شکل کے لئے کوڈز ہیں۔ پھر بھی ، ان میں سے زیادہ تر آئیڈیوگرافس میں سادہ عناصر شامل ہیں (جسے اکثر انگریزی میں ریڈیکل کہا جاتا ہے) ، لہذا اصولی طور پر ، یونیکوڈ ان کو تحلیل کرسکتا تھا ، جیسا کہ اس نے ہنگول کے ساتھ کیا تھا۔ اس سے ••ضروری کوڈ پوائنٹس کی تعداد میں بہت کم ہوجائے گی•• ، جبکہ عملی طور پر ہر قابل تصور آئیڈیوگرافس کی نمائش کی اجازت دی جائے گی (جو ہان اتحاد کی وجہ سے پیدا ہونے والے کچھ مسائل کو دور کرسکتی ہے۔ اسی طرح کا خیال کچھ ان پٹ طریقوں کے ذریعہ استعمال کیا جاتا ہے ، جیسے کانگجی اور ووبی۔ تاہم ، کردار انکوڈنگ کے لئے ایسا کرنے کی کوششوں نے اس حقیقت پر ٹھوکر کھائی ہے کہ آئیڈیوگرافس ہنگول کی طرح آسانی سے یا باقاعدگی سے تحلیل نہیں کرتے ہیں۔,یونیکوڈ کے ذریعہ آئیڈیگرافوں کو تحلیل کرنے کا کیا فائدہ ہوگا؟,False,False
160,273,17,5acd236507355d001abf3674,یونیکوڈ,••CJK•• آئیڈیوگرافس میں فی الحال صرف ان کی پہلے سے تشکیل شدہ شکل کے لئے کوڈز ہیں۔ پھر بھی ، ان میں سے زیادہ تر آئیڈیوگرافس میں سادہ عناصر شامل ہیں (جسے اکثر انگریزی میں ریڈیکل کہا جاتا ہے) ، لہذا اصولی طور پر ، یونیکوڈ ان کو تحلیل کرسکتا تھا ، جیسا کہ اس نے ہنگول کے ساتھ کیا تھا۔ اس سے مطلوبہ کوڈ پوائنٹس کی تعداد بہت کم ہوجائے گی ، جبکہ عملی طور پر ہر تصوراتی آئیڈیوگراف کی نمائش کی اجازت دی جائے گی (جو ہان اتحاد کی وجہ سے پیدا ہونے والے کچھ مسائل کو دور کرسکتی ہے۔ اسی طرح کا خیال کچھ ان پٹ طریقوں کے ذریعہ استعمال کیا جاتا ہے ، جیسے Cangjie اور Wubi۔ تاہم ، کردار انکوڈنگ کے لئے ایسا کرنے کی کوششوں نے اس حقیقت پر ٹھوکر کھائی ہے کہ آئیڈیوگرافس ہنگول کی طرح آسانی سے یا باقاعدگی سے تحلیل نہیں کرتے ہیں۔,کن آئیڈیگرافوں میں ابھی تک ان کی پہلے سے تشکیل شدہ شکل کے لئے کوڈ نہیں ہیں؟,True,False
161,273,17,5acd236507355d001abf3675,یونیکوڈ,سی جے کے آئیڈیوگرافس میں فی الحال صرف ان کی پہلے سے تشکیل شدہ شکل کے لئے کوڈز ہیں۔ پھر بھی ، ان میں سے زیادہ تر آئیڈیوگرافس میں سادہ عناصر شامل ہیں (جس کو انگریزی میں اکثر ••ریڈیکل•• کہا جاتا ہے) ، لہذا اصولی طور پر ، یونیکوڈ ان کو تحلیل کرسکتا تھا ، جیسا کہ اس نے ہنگول کے ساتھ کیا تھا۔ اس سے مطلوبہ کوڈ پوائنٹس کی تعداد بہت کم ہوجائے گی ، جبکہ عملی طور پر ہر تصوراتی آئیڈیوگرافس کی نمائش کی اجازت دی جائے گی (جو ہان اتحاد کی وجہ سے پیدا ہونے والے کچھ مسائل کو دور کرسکتا ہے۔ اسی طرح کا خیال کچھ ان پٹ طریقوں کے ذریعہ استعمال کیا جاتا ہے ، جیسے کانگجی اور ووبی۔ تاہم ، کردار انکوڈنگ کے لئے ایسا کرنے کی کوششوں نے اس حقیقت پر ٹھوکر کھائی ہے کہ آئیڈیوگرافس ہنگول کی طرح آسانی سے یا باقاعدگی سے تحلیل نہیں کرتے ہیں۔,انگریزی میں پہلے سے تشکیل شدہ شکلوں کو کیا کہا جاتا ہے؟,True,False
162,273,17,5acd236507355d001abf3676,یونیکوڈ,سی جے کے آئیڈیوگرافس میں فی الحال صرف ان کی پہلے سے تشکیل شدہ شکل کے لئے کوڈز ہیں۔ پھر بھی ، ان میں سے زیادہ تر آئیڈیوگرافس میں ••سادہ عناصر•• شامل ہیں (جس کو انگریزی میں اکثر ریڈیکل کہا جاتا ہے) ، لہذا اصولی طور پر ، یونیکوڈ ان کو تحلیل کرسکتا تھا ، جیسا کہ اس نے ہنگول کے ساتھ کیا تھا۔ اس سے مطلوبہ کوڈ پوائنٹس کی تعداد بہت کم ہوجائے گی ، جبکہ عملی طور پر ہر قابل تصور آئیڈیوگرافس کی نمائش کی اجازت دی جائے گی (جو ہان اتحاد کی وجہ سے پیدا ہونے والے کچھ مسائل کو دور کرسکتی ہے۔ اسی طرح کا خیال کچھ ان پٹ طریقوں کے ذریعہ استعمال کیا جاتا ہے ، جیسے کانگجی اور ووبی۔ تاہم ، کردار انکوڈنگ کے لئے ایسا کرنے کی کوششوں نے اس حقیقت پر ٹھوکر کھائی ہے کہ آئیڈیوگرافس ہنگول کی طرح آسانی سے یا باقاعدگی سے تحلیل نہیں کرتے ہیں۔,ہنگول میں شدت پسندوں کو کیا کہا جاتا ہے؟,True,False
163,273,17,5acd236507355d001abf3677,یونیکوڈ,سی جے کے آئیڈیوگرافس میں فی الحال صرف ان کی پہلے سے تشکیل شدہ شکل کے لئے کوڈز ہیں۔ پھر بھی ، ان میں سے زیادہ تر آئیڈیوگرافس میں سادہ عناصر شامل ہیں (جس کو انگریزی میں اکثر ریڈیکلز کہا جاتا ہے) ، لہذا اصولی طور پر ، یونیکوڈ ان کو ••تقسیم•• کرسکتا تھا ، جیسا کہ اس نے ہنگول کے ساتھ کیا تھا۔ اس سے مطلوبہ کوڈ پوائنٹس کی تعداد بہت کم ہوجائے گی ، جبکہ عملی طور پر ہر تصوراتی آئیڈیوگرافس کی نمائش کی اجازت دی جائے گی (جو ہان اتحاد کی وجہ سے پیدا ہونے والے کچھ مسائل کو ختم کرسکتی ہے۔ اسی طرح کا خیال کچھ ان پٹ طریقوں کے ذریعہ استعمال کیا جاتا ہے ، جیسے Cangjie اور Wubi۔ تاہم ، کردار انکوڈنگ کے لئے ایسا کرنے کی کوششوں نے اس حقیقت پر ٹھوکر کھائی ہے کہ آئیڈیوگرافس ہنگول کی طرح آسانی سے یا باقاعدگی سے تحلیل نہیں کرتے ہیں۔,یونیکوڈ نے سی جے کے آئیڈیگراف کے ساتھ کیا کیا؟,True,False
164,273,17,5acd236507355d001abf3678,یونیکوڈ,سی جے کے آئیڈیوگرافس میں فی الحال صرف ان کی پہلے سے تشکیل شدہ شکل کے لئے کوڈز ہیں۔ پھر بھی ، ان میں سے زیادہ تر آئیڈیوگرافس میں سادہ عناصر شامل ہیں (جس کو انگریزی میں اکثر ریڈیکل کہا جاتا ہے) ، لہذا اصولی طور پر ، یونیکوڈ ان کو تحلیل کرسکتا تھا ، جیسا کہ اس نے ہنگول کے ساتھ کیا تھا۔ اس سے مطلوبہ کوڈ پوائنٹس کی تعداد بہت کم ہوجائے گی ، جبکہ عملی طور پر ہر تصوراتی آئیڈیوگرافس کی نمائش کی اجازت دی جائے گی (جو ہان اتحاد کی وجہ سے پیدا ہونے والے کچھ مسائل کو ختم کرسکتی ہے۔ اسی طرح کا خیال کچھ ان پٹ طریقوں کے ذریعہ استعمال کیا جاتا ہے ، جیسے کانگجی اور ووبی۔ تاہم ، کردار انکوڈنگ کے لئے ایسا کرنے کی کوششوں نے اس حقیقت پر ٹھوکر کھائی ہے کہ ••آئیڈیوگرافس•• ہنگول کی طرح آسانی سے یا باقاعدگی سے تحلیل نہیں کرتے ہیں۔,ووبی میں باقاعدگی سے کیا سڑ جاتا ہے؟,True,False
165,273,18,572809e22ca10214002d9c44,یونیکوڈ,بہت سے اسکرپٹس ، بشمول عربی اور دیواناگری ، میں خصوصی املا کے قواعد ہیں جن کے لئے خطوں کے کچھ مجموعوں کو خصوصی لیگچر فارموں میں جوڑنے کی ضرورت ہوتی ہے۔ لیگچر کی تشکیل پر قابو پانے والے قواعد کافی پیچیدہ ہوسکتے ہیں ، جس کے لئے خصوصی اسکرپٹ تشکیل دینے والی ٹیکنالوجیز کی ضرورت ہوتی ہے جیسے ACE (••عربی خطاطی انجن•• 1980 کی دہائی میں ڈیکو ٹائپ کے ذریعہ اور یونیکوڈ معیاری کے طباعت شدہ ایڈیشن میں تمام عربی مثالیں پیدا کرنے کے لئے استعمال کیا گیا تھا) ، جو اوپن ٹائپ (ایڈوب اور مائیکروسافٹ کے ذریعہ) ، گرافائٹ (ایس آئی ایل انٹرنیشنل کے ذریعہ) یا اے اے ٹی (ایپل کے ذریعہ) کے لئے تصور کا ثبوت بن گیا۔,ACE کا مخفف کیا ہے؟,False,False
166,273,18,572809e22ca10214002d9c45,یونیکوڈ,بہت سے اسکرپٹس ، بشمول عربی اور دیواناگری ، میں خصوصی املا قوانین ہیں جن کے لئے خطوں کے کچھ مجموعوں کو خصوصی لیگچر فارموں میں جوڑنے کی ضرورت ہوتی ہے۔ لیگچر کی تشکیل پر قابو پانے والے قواعد کافی پیچیدہ ہوسکتے ہیں ، جس کے لئے خصوصی اسکرپٹ تشکیل دینے والی ٹیکنالوجیز کی ضرورت ہوتی ہے جیسے ACE (1980 کی دہائی میں ••ڈیکو ٹائپ•• کے ذریعہ عربی خطاطی انجن اور یونیکوڈ معیاری کے طباعت شدہ ایڈیشنوں میں تمام عربی مثالیں پیدا کرنے کے لئے استعمال کیا جاتا ہے) ، جو اوپن ٹائپ (ایڈوب اور مائیکروسافٹ) ، گرافائٹ (ایس آئی ایل انٹرنیشنل) ، یا اے اے ٹی (ایپل) کے لئے تصور کا ثبوت بن گیا۔,اے ایس ای کو کس نے بنایا؟,False,False
167,273,18,572809e22ca10214002d9c46,یونیکوڈ,بہت سے اسکرپٹس ، بشمول عربی اور دیواناگری ، میں خصوصی املا قوانین ہیں جن کے لئے خطوں کے کچھ مجموعوں کو خصوصی لیگچر فارموں میں جوڑنے کی ضرورت ہوتی ہے۔ لیگچر کی تشکیل پر قابو پانے والے قواعد کافی پیچیدہ ہوسکتے ہیں ، جس کے لئے خصوصی اسکرپٹ تشکیل دینے والی ٹیکنالوجیز کی ضرورت ہوتی ہے جیسے ACE (1980 کی دہائی میں ڈیکو ٹائپ کے ذریعہ عربی خطاطی انجن اور یونیکوڈ معیاری کے طباعت شدہ ایڈیشنوں میں تمام عربی مثالیں پیدا کرنے کے لئے استعمال کیا جاتا ہے) ، جو اوپن ٹائپ (ایڈوب اور مائیکروسافٹ کے ذریعہ) ، گرافائٹ (ایس آئی ایل انٹرنیشنل کے ذریعہ) یا اے اے ٹی (ایپل کے ذریعہ) کے لئے تصور کا ثبوت بن گیا۔,ACE کب تخلیق کیا گیا تھا؟,False,True
168,273,18,572809e22ca10214002d9c47,یونیکوڈ,بہت سے اسکرپٹس ، بشمول عربی اور دیواناگری ، میں خصوصی املا کے قواعد ہیں جن کے لئے خطوں کے کچھ مجموعوں کو خصوصی لیگچر فارموں میں جوڑنے کی ضرورت ہوتی ہے۔ لیگچر کی تشکیل پر قابو پانے والے قواعد کافی پیچیدہ ہوسکتے ہیں ، جس کے لئے خصوصی اسکرپٹ تشکیل دینے والی ٹیکنالوجیز کی ضرورت ہوتی ہے جیسے ACE (1980 کی دہائی میں ڈیکو ٹائپ کے ذریعہ عربی خطاطی انجن اور یونیکوڈ معیاری کے طباعت شدہ ایڈیشنوں میں تمام عربی مثالیں پیدا کرنے کے لئے استعمال کیا جاتا ہے) ، جو اوپن ٹائپ (ایڈوب اور مائیکروسافٹ) ، گرافائٹ (ایس آئی ایل انٹرنیشنل) ، یا اے اے ٹی (ایپل) کے لئے تصور کا ثبوت بن گیا۔,اوپن ٹائپ کو کس نے بنایا؟,False,True
169,273,18,572809e22ca10214002d9c48,یونیکوڈ,بہت سے اسکرپٹس ، بشمول عربی اور دیواناگری ، میں خصوصی املا کے قواعد ہیں جن کے لئے خطوں کے کچھ مجموعوں کو خصوصی لیگچر فارموں میں جوڑنے کی ضرورت ہوتی ہے۔ لیگچر کی تشکیل پر قابو پانے والے قواعد کافی پیچیدہ ہوسکتے ہیں ، جس کے لئے خصوصی اسکرپٹ تشکیل دینے والی ٹیکنالوجیز کی ضرورت ہوتی ہے جیسے ACE (1980 کی دہائی میں ڈیکو ٹائپ کے ذریعہ عربی خطاطی انجن اور یونیکوڈ معیاری کے طباعت شدہ ایڈیشن میں تمام عربی مثالیں پیدا کرنے کے لئے استعمال کیا جاتا ہے) ، جو اوپن ٹائپ (ایڈوب اور مائیکروسافٹ کے ذریعہ) ، گرافائٹ (ایس آئی ایل انٹرنیشنل کے ذریعہ) یا اے اے ٹی (ایپل کے ذریعہ) کے لئے تصور کا ثبوت بن گیا۔,گرافائٹ کو کس نے بنایا؟,False,True
170,273,18,5acd23f607355d001abf3686,یونیکوڈ,بہت سے اسکرپٹس ، بشمول عربی اور دیواناگری ، میں خصوصی املا قوانین ہیں جن کے لئے خطوں کے کچھ مجموعوں کو خصوصی لیگچر فارموں میں جوڑنے کی ضرورت ہوتی ہے۔ لیگچر کی تشکیل پر قابو پانے والے قواعد کافی پیچیدہ ہوسکتے ہیں ، جس کے لئے خصوصی اسکرپٹ تشکیل دینے والی ٹیکنالوجیز کی ضرورت ہوتی ہے جیسے ACE (1980 کی دہائی میں ڈیکو ٹائپ کے ذریعہ عربی خطاطی انجن اور یونیکوڈ معیاری کے طباعت شدہ ایڈیشنوں میں تمام عربی مثالیں پیدا کرنے کے لئے استعمال کیا جاتا ہے) ، جو اوپن ٹائپ (ایڈوب اور مائیکروسافٹ کے ذریعہ) ، گرافائٹ (ایس آئی ایل انٹرنیشنل کے ذریعہ) یا اے اے ٹی (ایپل کے ذریعہ) کے لئے تصور کا ثبوت بن گیا۔,اوپن ٹائپ کب بنایا گیا تھا؟,True,True
171,273,18,5acd23f607355d001abf3687,یونیکوڈ,بہت سے اسکرپٹس ، بشمول عربی اور دیواناگری ، میں خصوصی املا کے قواعد ہیں جن کے لئے خطوں کے کچھ مجموعوں کو خصوصی لیگچر فارموں میں جوڑنے کی ضرورت ہوتی ہے۔ لیگچر کی تشکیل پر قابو پانے والے قواعد کافی پیچیدہ ہوسکتے ہیں ، جس کے لئے خصوصی اسکرپٹ تشکیل دینے والی ٹیکنالوجیز کی ضرورت ہوتی ہے جیسے ACE (••عربی خطاطی انجن•• 1980 کی دہائی میں ڈیکو ٹائپ کے ذریعہ اور یونیکوڈ معیاری کے طباعت شدہ ایڈیشن میں تمام عربی مثالیں پیدا کرنے کے لئے استعمال کیا گیا تھا) ، جو اوپن ٹائپ (ایڈوب اور مائیکروسافٹ کے ذریعہ) ، گرافائٹ (ایس آئی ایل انٹرنیشنل کے ذریعہ) یا اے اے ٹی (ایپل کے ذریعہ) کے لئے تصور کا ثبوت بن گیا۔,AAT کا مخفف کیا ہے؟,True,False
172,273,18,5acd23f607355d001abf3688,یونیکوڈ,بہت سے اسکرپٹس ، بشمول عربی اور دیواناگری ، میں خصوصی املا قوانین ہیں جن کے لئے خطوں کے کچھ مجموعوں کو خصوصی لیگچر فارموں میں جوڑنے کی ضرورت ہوتی ہے۔ لیگچر کی تشکیل پر قابو پانے والے قواعد کافی پیچیدہ ہوسکتے ہیں ، جس میں خصوصی اسکرپٹ تشکیل دینے والی ٹیکنالوجیز کی ضرورت ہوتی ہے جیسے ACE (1980 کی دہائی میں ڈیکو ٹائپ کے ذریعہ عربی خطاطی انجن اور یونیکوڈ معیاری کے طباعت شدہ ایڈیشن میں تمام عربی مثالیں پیدا کرنے کے لئے استعمال کیا جاتا ہے) ، جو اوپن ٹائپ (ایڈوب اور مائیکروسافٹ کے ذریعہ) ، گرافائٹ (ایس آئی ایل انٹرنیشنل کے ذریعہ) یا اے اے ٹی (ایپل کے ذریعہ) کے لئے تصور کا ثبوت بن گیا۔,ایس آئی ایل انٹرنیشنل کے ساتھ کس نے شراکت داری کی؟,True,True
173,273,18,5acd23f607355d001abf3689,یونیکوڈ,بہت سے اسکرپٹس ، بشمول عربی اور دیواناگری ، میں خصوصی املا کے قواعد ہیں جن کے لئے خطوں کے کچھ مجموعوں کو خصوصی لیگچر فارموں میں جوڑنے کی ضرورت ہوتی ہے۔ لیگچر کی تشکیل پر قابو پانے والے قواعد کافی پیچیدہ ہوسکتے ہیں ، جس کے لئے خصوصی اسکرپٹ تشکیل دینے والی ٹیکنالوجیز کی ضرورت ہوتی ہے جیسے ACE (1980 کی دہائی میں ڈیکو ٹائپ کے ذریعہ عربی خطاطی انجن اور یونیکوڈ معیاری کے طباعت شدہ ایڈیشنوں میں تمام عربی مثالیں پیدا کرنے کے لئے استعمال کیا جاتا ہے) ، جو اوپن ٹائپ (ایڈوب اور مائیکروسافٹ) ، گرافائٹ (ایس آئی ایل انٹرنیشنل) ، یا اے اے ٹی (ایپل) کے لئے تصور کا ثبوت بن گیا۔,کون سی دو کمپنیاں DecoType تیار کرتی ہیں؟,True,True
174,273,18,5acd23f607355d001abf368a,یونیکوڈ,بہت سے اسکرپٹس ، جن میں ••عربی اور دیواناگری•• بھی شامل ہیں ، کے پاس خصوصی املا کے قواعد ہیں جن کے لئے حرفی شکلوں کے کچھ مجموعوں کو خصوصی لیگچر فارموں میں جوڑنے کی ضرورت ہوتی ہے۔ لیگچر کی تشکیل پر قابو پانے والے قواعد کافی پیچیدہ ہوسکتے ہیں ، جس کے لئے خصوصی اسکرپٹ تشکیل دینے والی ٹیکنالوجیز کی ضرورت ہوتی ہے جیسے ACE (1980 کی دہائی میں DecoType کے ذریعہ عربی خطاطی انجن اور یونیکوڈ معیاری کے طباعت شدہ ایڈیشن میں تمام عربی مثالیں پیدا کرنے کے لئے استعمال کیا جاتا ہے) ، جو اوپن ٹائپ (ایڈوب اور مائیکروسافٹ) ، گرافائٹ (ایس آئی ایل انٹرنیشنل) ، یا اے اے ٹی (ایپل) کے لئے تصور کا ثبوت بن گیا۔,حروف تہجی کے قواعد کے بغیر اسکرپٹ کی دو مثالیں کیا ہیں؟,True,False
175,273,19,57280b6b4b864d19001642ec,یونیکوڈ,آپریٹنگ سسٹم کو یہ بتانے کے لئے ہدایات ••فونٹس میں•• بھی سرایت کی جاتی ہیں کہ کس طرح مختلف حروف کے تسلسل کو صحیح طریقے سے آؤٹ پٹ کیا جائے۔ نشانوں یا ڈیاکریٹک کو جوڑنے کی جگہ کا ایک آسان حل نشانوں کو صفر کی چوڑائی تفویض کرنا ہے اور خود گلیف کو بائیں یا دائیں سائیڈ بیئرنگ کے بائیں یا دائیں (اسکرپٹ کی سمت پر منحصر ہے جس کے ساتھ ان کا استعمال کیا جانا ہے) پر رکھنا ہے۔ عام طور پر یہ نقطہ نظر صرف مونو اسپیس میں موثر ہوتا ہے ، لیکن بیس گلیف کی چوڑائی یا اونچائی کے مقابلے میں اس کی پوزیشن کو ایڈجسٹ نہیں کرے گا۔ یہ بصری طور پر عجیب ہوسکتا ہے اور یہ کچھ گلیفوں کو اوورلیپ کرسکتا ہے۔ حقیقی اسٹیکنگ ناممکن ہے ، لیکن محدود معاملات میں قریب ہوسکتا ہے (مثال کے طور پر ، تھائی ٹون جوڑنے والے صوتی اور نشان صرف مختلف اونچائی پر شروع ہوسکتے ہیں۔,فونٹس کو بتانے کے لئے ہدایات کہاں سرایت کی جاتی ہیں کہ کس طرح ترتیب کو آؤٹ پٹ کرنا ہے؟,False,False
176,273,19,57280b6b4b864d19001642ed,یونیکوڈ,آپریٹنگ سسٹم کو یہ بتانے کے لئے فونٹس میں ہدایات بھی سرایت کی جاتی ہیں کہ کس طرح مختلف حروف کے تسلسل کو صحیح طریقے سے آؤٹ پٹ کیا جائے۔ نشانوں یا ڈیاکریٹک کو جوڑنے کی جگہ کا ایک آسان حل یہ ہے کہ نشانوں کو صفر کی چوڑائی تفویض کی جائے اور خود گلیف کو بائیں یا دائیں سائیڈ بیئرنگ کے بائیں (اسکرپٹ کی سمت پر منحصر ہے جس کے ساتھ ان کا استعمال کیا جائے گا) پر رکھا جائے۔ عام طور پر یہ صرف مونو اسپیس فونٹس میں ہی موثر ہوتا ہے ، لیکن بیس گلیف کی چوڑائی یا اونچائی کے مقابلے میں اس کی پوزیشن کو ایڈجسٹ نہیں کرے گا۔ یہ بصری طور پر عجیب ہوسکتا ہے اور یہ کچھ گلیفوں کو اوورلیپ کرسکتا ہے۔ ••حقیقی اسٹیکنگ ناممکن ہے•• ، لیکن محدود معاملات میں قریب ہوسکتا ہے (مثال کے طور پر ، تھائی ٹاپ کو جوڑنے والے صوتی اور نشان صرف مختلف اونچائیوں پر شروع ہوسکتے ہیں۔,کیا حقیقی اسٹیکنگ حاصل کی جا سکتی ہے؟,False,False
177,273,19,57280b6b4b864d19001642ee,یونیکوڈ,آپریٹنگ سسٹم کو یہ بتانے کے لئے فونٹس میں ہدایات بھی سرایت کی جاتی ہیں کہ کس طرح مختلف حروف کے تسلسل کو صحیح طریقے سے آؤٹ پٹ کیا جائے۔ نشانوں یا ڈیاکریٹک کو جوڑنے کی جگہ کا ایک آسان حل یہ ہے کہ ••نشانوں کو صفر کی چوڑائی تفویض کریں اور خود گلیف کو بائیں یا دائیں سائیڈ بیئرنگ کے بائیں یا دائیں رکھیں•• (اسکرپٹ کی سمت پر منحصر ہے جس کے ساتھ ان کا استعمال کیا جائے گا۔ عام طور پر یہ نقطہ نظر صرف مونو اسپیس میں موثر ہوتا ہے ، لیکن بیس گلیف کی چوڑائی یا اونچائی کے مقابلے میں اس کی پوزیشن کو ایڈجسٹ نہیں کرے گا۔ یہ بصری طور پر عجیب ہوسکتا ہے اور یہ کچھ گلیفوں کو اوورلیپ کرسکتا ہے۔ حقیقی اسٹیکنگ ناممکن ہے ، لیکن محدود معاملات میں قریب ہوسکتا ہے (مثال کے طور پر ، تھائی ٹون جوڑنے والے صوتی اور نشان صرف مختلف اونچائی پر شروع ہوسکتے ہیں۔,مشترکہ نشانات کی جگہ کے لئے ایک حل کیا ہے؟,False,False
178,273,19,5acd24b707355d001abf36aa,یونیکوڈ,آپریٹنگ سسٹم کو بتانے کے لئے فونٹس میں ہدایات بھی سرایت کی جاتی ہیں کہ کس طرح مختلف حروف کے تسلسل کو صحیح طریقے سے آؤٹ پٹ کیا جائے۔ نشانوں یا ڈیاکریٹک کو جوڑنے کی جگہ کا ایک آسان حل نشانوں کو صفر کی چوڑائی تفویض کرنا ہے اور خود گلیف کو بائیں یا دائیں سائیڈ بیئرنگ کے بائیں (اسکرپٹ کی سمت پر منحصر ہے جس کے ساتھ انہیں استعمال کرنے کا ارادہ کیا گیا ہے) پر رکھنا ہے۔ عام طور پر یہ نقطہ نظر صرف مونو اسپیس میں موثر ہوتا ہے ، لیکن بیس گلیف کی چوڑائی یا اونچائی کے مقابلے میں اس کی پوزیشن کو ایڈجسٹ نہیں کرے گا۔ یہ بصری طور پر عجیب ہوسکتا ہے اور یہ کچھ گلیفوں کو اوورلیپ کرسکتا ہے۔ ••حقیقی•• اسٹیکنگ ناممکن ہے ، لیکن محدود معاملات میں قریب ہوسکتا ہے (مثال کے طور پر ، تھائی ٹاپ ٹون کو جوڑنے والے صوتی اور نشان صرف مختلف اونچائی پر شروع ہوسکتے ہیں۔,کس قسم کی اسٹیکنگ کی ضرورت ہے؟,True,False
179,273,19,5acd24b707355d001abf36ab,یونیکوڈ,آپریٹنگ سسٹم کو بتانے کے لئے فونٹس میں ہدایات بھی سرایت کی جاتی ہیں کہ کس طرح مختلف حروف کے تسلسل کو صحیح طریقے سے آؤٹ پٹ کیا جائے۔ نشانوں یا ڈیاکریٹک کو جوڑنے کی جگہ کا ایک آسان حل نشانوں کو صفر کی چوڑائی تفویض کرنا ہے اور خود گلیف کو بائیں یا دائیں سائیڈ بیئرنگ کے بائیں (اسکرپٹ کی سمت پر منحصر ہے جس کے ساتھ ان کا استعمال کیا جائے گا) پر رکھنا ہے۔ عام طور پر یہ صرف ••مون اسپیسڈ•• فونٹس میں موثر ہوتا ہے ، لیکن بیس گلیف کی چوڑائی یا اونچائی کے مقابلے میں اس کی پوزیشن کو ایڈجسٹ نہیں کرے گا۔ یہ بصری طور پر عجیب ہوسکتا ہے اور یہ کچھ گلیفوں کو اوورلیپ کرسکتا ہے۔ حقیقی اسٹیکنگ ناممکن ہے ، لیکن محدود معاملات میں قریب ہوسکتا ہے (مثال کے طور پر ، تھائی ٹاپ-کومبنگ صوتی اور نشانات صرف مختلف اونچائیوں پر شروع ہوسکتے ہیں۔,قریب سے اسٹیکنگ کس قسم کے فونٹس کے ساتھ ممکن نہیں ہے؟,True,False
180,273,19,5acd24b707355d001abf36ac,یونیکوڈ,آپریٹنگ سسٹم کو بتانے کے لئے ••فونٹس•• میں ہدایات بھی سرایت کی جاتی ہیں کہ کس طرح مختلف حروف کے تسلسل کو صحیح طریقے سے آؤٹ پٹ کیا جائے۔ نشانات یا ڈیاکریٹک کو جوڑنے کی جگہ کا ایک آسان حل یہ ہے کہ نشانات کو صفر کی چوڑائی تفویض کی جائے اور خود گلیف کو بائیں یا دائیں سائیڈ بیئرنگ کے بائیں (اسکرپٹ کی سمت پر منحصر ہے جس کے ساتھ ان کا استعمال کیا جائے گا) پر رکھا جائے۔ عام طور پر یہ نقطہ نظر صرف مونو اسپیس میں موثر ہوتا ہے ، لیکن بیس گلیف کی چوڑائی یا اونچائی کے مقابلے میں اس کی پوزیشن کو ایڈجسٹ نہیں کرے گا۔ یہ بصری طور پر عجیب ہوسکتا ہے اور یہ کچھ گلیفوں کو اوورلیپ کرسکتا ہے۔ حقیقی اسٹیکنگ ناممکن ہے ، لیکن محدود معاملات میں قریب ہوسکتا ہے (مثال کے طور پر ، تھائی ٹاپ جوڑنے والے صوتی اور نشان صرف مختلف اونچائی پر شروع ہوسکتے ہیں۔,آپریٹنگ سسٹم کیا کہتا ہے کہ کیا کرنا ہے؟,True,False
181,273,19,5acd24b707355d001abf36ad,یونیکوڈ,آپریٹنگ سسٹم کو بتانے کے لئے فونٹس میں ہدایات بھی سرایت کی جاتی ہیں کہ کس طرح مختلف حروف کے تسلسل کو صحیح طریقے سے آؤٹ پٹ کیا جائے۔ نشانات یا ڈیاکریٹک کو جوڑنے کی جگہ کا ایک آسان حل یہ ہے کہ نشانات کو ••صفر•• کی چوڑائی تفویض کی جائے اور خود گلیف کو بائیں یا دائیں سائیڈ بیئرنگ کے بائیں (اسکرپٹ کی سمت پر منحصر ہے جس کے ساتھ ان کا استعمال کیا جائے گا) پر رکھا جائے۔ عام طور پر یہ نقطہ نظر صرف مونو اسپیس میں موثر ہوتا ہے ، لیکن بیس گلیف کی چوڑائی یا اونچائی کے مقابلے میں اس کی پوزیشن کو ایڈجسٹ نہیں کرے گا۔ یہ بصری طور پر عجیب ہوسکتا ہے اور یہ کچھ گلیفوں کو اوورلیپ کرسکتا ہے۔ حقیقی اسٹیکنگ ناممکن ہے ، لیکن محدود معاملات میں قریب ہوسکتا ہے (مثال کے طور پر ، تھائی ٹون جوڑنے والے صوتی اور نشان صرف مختلف اونچائی پر شروع ہوسکتے ہیں۔,اس گلیف کو کیا عددی قدر تفویض کی گئی ہے؟,True,False
182,273,19,5acd24b707355d001abf36ae,یونیکوڈ,آپریٹنگ سسٹم کو بتانے کے لئے فونٹس میں ہدایات بھی سرایت کی جاتی ہیں کہ کس طرح مختلف حروف کے تسلسل کو صحیح طریقے سے آؤٹ پٹ کیا جائے۔ نشانوں یا ڈیاکریٹک کو جوڑنے کی جگہ کا ایک آسان حل نشانوں کو صفر کی چوڑائی تفویض کرنا ہے اور خود گلیف کو بائیں یا دائیں سائیڈ بیئرنگ کے بائیں (اسکرپٹ کی سمت پر منحصر ہے جس کے ساتھ انہیں استعمال کرنے کا ارادہ کیا گیا ہے) پر رکھنا ہے۔ عام طور پر یہ نقطہ نظر صرف مونو اسپیس میں موثر ہوتا ہے ، لیکن ••بیس گلیف•• کی چوڑائی یا اونچائی کے مقابلے میں اس کی پوزیشن کو ایڈجسٹ نہیں کرے گا۔ یہ بصری طور پر عجیب ہوسکتا ہے اور یہ کچھ گلیفوں کو اوورلیپ کرسکتا ہے۔ حقیقی اسٹیکنگ ناممکن ہے ، لیکن محدود معاملات میں قریب ہوسکتا ہے (مثال کے طور پر ، تھائی ٹون جوڑنے والے صوتی اور نشان صرف مختلف اونچائی پر شروع ہوسکتے ہیں۔,ایک نشان اس کے مقابلے میں اس کی پوزیشن کو ایڈجسٹ کیا ہے؟,True,False
183,273,20,57280bee2ca10214002d9c96,یونیکوڈ,یونیکوڈ کے کئی ذیلی سیٹ معیاری ہیں: مائیکروسافٹ ونڈوز چونکہ ونڈوز این ٹی 4.0 ••WGL-4 with 652 characters•• کی حمایت کرتا ہے ، جسے لاطینی ، یونانی ، یا سیریلک اسکرپٹ کا استعمال کرتے ہوئے تمام معاصر یورپی زبانوں کی حمایت کرنے کے لئے سمجھا جاتا ہے۔ یونیکوڈ کے دیگر معیاری ذیلی سیٹ میں کثیر لسانی یورپی ذیلی سیٹ شامل ہیں: MES-1 (صرف لاطینی اسکرپٹ ، 335 حروف) ، MES-2 (لاطینی ، یونانی اور سیریلک 1062 حروف) اور MES-3A & MES-3B (دو بڑے ذیلی سیٹ ، یہاں نہیں دکھائے گئے) ۔ نوٹ کریں کہ MES-2 میں MES-1 اور WGL-4 میں ہر کردار شامل ہے۔,ونڈوز یونیکوڈ کا کون سا ذیلی سیٹ استعمال کرتا ہے؟,False,False
184,273,20,57280bee2ca10214002d9c97,یونیکوڈ,یونیکوڈ کے کئی ذیلی سیٹ معیاری ہیں: مائیکروسافٹ ونڈوز چونکہ ونڈوز این ٹی 4.0 652 حروف کے ساتھ ڈبلیو جی ایل 4 کی حمایت کرتا ہے ، جسے لاطینی ، یونانی ، یا سیریلک اسکرپٹ کا استعمال کرتے ہوئے تمام معاصر یورپی زبانوں کی حمایت کرنے کے لئے سمجھا جاتا ہے۔ یونیکوڈ کے دیگر معیاری ذیلی سیٹ میں ••کثیر لسانی یورپی ذیلی سیٹ•• شامل ہیں۔ MES-1 (صرف لاطینی اسکرپٹ ، 335 حروف) ، MES-2 (لاطینی ، یونانی اور سیریلک 1062 حروف) اور MES-3A & MES-3B (دو بڑے ذیلی سیٹ ، یہاں نہیں دکھائے گئے) ۔ نوٹ کریں کہ MES-2 میں MES-1 اور WGL-4 میں ہر کردار شامل ہے۔,MES-1، MES-2، اور MES-3A اور MES-3B کا حصہ کیا ہے؟,False,False
185,273,20,57280bee2ca10214002d9c98,یونیکوڈ,یونیکوڈ کے کئی ذیلی سیٹ معیاری ہیں: مائیکروسافٹ ونڈوز چونکہ ونڈوز این ٹی 4.0 652 حروف کے ساتھ ڈبلیو جی ایل 4 کی حمایت کرتا ہے ، جسے لاطینی ، یونانی ، یا سیریلک اسکرپٹ کا استعمال کرتے ہوئے تمام معاصر یورپی زبانوں کی حمایت کرنے کے لئے سمجھا جاتا ہے۔ یونیکوڈ کے دیگر معیاری ذیلی سیٹ میں کثیر لسانی یورپی ذیلی سیٹ شامل ہیں: MES-1 (صرف لاطینی اسکرپٹ ، 335 حروف) ، MES-2 (لاطینی ، یونانی اور سیریلک 1062 حروف) اور MES-3A & MES-3B (دو بڑے ذیلی سیٹ ، یہاں نہیں دکھائے گئے) ۔ نوٹ کریں کہ ••MES-2•• میں MES-1 اور WGL-4 میں ہر کردار شامل ہے۔,کون سا ذیلی سیٹ MES-1 اور WGL-4 میں ہر کردار شامل ہے؟,False,False
186,273,20,57280bee2ca10214002d9c99,یونیکوڈ,یونیکوڈ کے کئی ذیلی سیٹ معیاری ہیں: مائیکروسافٹ ونڈوز ••ونڈوز این ٹی 4.0 کے بعد سے•• 652 حروف کے ساتھ ڈبلیو جی ایل 4 کی حمایت کرتا ہے ، جسے لاطینی ، یونانی ، یا سیریلک اسکرپٹ کا استعمال کرتے ہوئے تمام معاصر یورپی زبانوں کی حمایت کرنے کے لئے سمجھا جاتا ہے۔ یونیکوڈ کے دیگر معیاری ذیلی سیٹ میں کثیر لسانی یورپی ذیلی سیٹ شامل ہیں: MES-1 (صرف لاطینی اسکرپٹ ، 335 حروف) ، MES-2 (لاطینی ، یونانی اور سیریلک 1062 حروف) اور MES-3A & MES-3B (دو بڑے ذیلی سیٹ ، یہاں نہیں دکھائے گئے) ۔ نوٹ کریں کہ MES-2 میں MES-1 اور WGL-4 میں ہر کردار شامل ہے۔,مائیکروسافٹ ونڈوز نے کتنی دیر سے ڈبلیو جی ایل 4 کی حمایت کی ہے؟,False,False
187,273,20,57280bee2ca10214002d9c9a,یونیکوڈ,"یونیکوڈ کے کئی ذیلی سیٹ معیاری ہیں: مائیکروسافٹ ونڈوز چونکہ ونڈوز این ٹی 4.0 652 حروف کے ساتھ ڈبلیو جی ایل 4 کی حمایت کرتا ہے ، جسے لاطینی ، یونانی ، یا سیریلک اسکرپٹ کا استعمال کرتے ہوئے تمام معاصر یورپی زبانوں کی حمایت کرنے کے لئے سمجھا جاتا ہے۔ یونیکوڈ کے دیگر معیاری ذیلی سیٹ میں کثیر لسانی یورپی ذیلی سیٹ شامل ہیں: MES-1 (""صرف لاطینی اسکرپٹ ، 335 حروف) ، MES-2 (لاطینی ، یونانی اور سیریلک 1062 حروف) اور MES-3A & MES-3B (دو بڑے ذیلی سیٹ ، یہاں نہیں دکھائے گئے) ۔ نوٹ کریں کہ MES-2 میں MES-1 اور WGL-4 میں ہر کردار شامل ہے۔",MES-1 صرف کس سکرپٹ کا استعمال کرتا ہے؟,False,True
188,273,20,5acd276d07355d001abf3706,یونیکوڈ,یونیکوڈ کے کئی ذیلی سیٹ معیاری ہیں: ••مائیکروسافٹ ونڈوز•• چونکہ ونڈوز این ٹی 4.0 652 حروف کے ساتھ ڈبلیو جی ایل 4 کی حمایت کرتا ہے ، جسے لاطینی ، یونانی ، یا سیریلک اسکرپٹ کا استعمال کرتے ہوئے تمام معاصر یورپی زبانوں کی حمایت کرنے کے لئے سمجھا جاتا ہے۔ یونیکوڈ کے دیگر معیاری ذیلی سیٹ میں کثیر لسانی یورپی ذیلی سیٹ شامل ہیں: MES-1 (صرف لاطینی اسکرپٹ ، 335 حروف) ، MES-2 (لاطینی ، یونانی اور سیریلک 1062 حروف) اور MES-3A & MES-3B (دو بڑے ذیلی سیٹ ، یہاں نہیں دکھائے گئے) ۔ نوٹ کریں کہ MES-2 میں MES-1 اور WGL-4 میں ہر کردار شامل ہے۔,کون سا نظام MES-3A کا استعمال کرتا ہے؟,True,False
189,273,20,5acd276d07355d001abf3707,یونیکوڈ,یونیکوڈ کے کئی ذیلی سیٹ معیاری ہیں: مائیکروسافٹ ونڈوز چونکہ ونڈوز این ٹی 4.0 652 حروف کے ساتھ ڈبلیو جی ایل 4 کی حمایت کرتا ہے ، جسے لاطینی ، یونانی ، یا سیریلک اسکرپٹ کا استعمال کرتے ہوئے تمام معاصر یورپی زبانوں کی حمایت کرنے کے لئے سمجھا جاتا ہے۔ یونیکوڈ کے دیگر معیاری ذیلی سیٹ میں کثیر لسانی یورپی ذیلی سیٹ شامل ہیں: MES-1 (صرف لاطینی اسکرپٹ ، ••335•• حروف) ، MES-2 (لاطینی ، یونانی اور سیریلک 1062 حروف) اور MES-3A & MES-3B (دو بڑے ذیلی سیٹ ، یہاں نہیں دکھائے گئے) ۔ نوٹ کریں کہ MES-2 میں MES-1 اور WGL-4 میں ہر کردار شامل ہے۔,WGL-4 میں کتنے لاطینی حروف کی حمایت کی جاتی ہے؟,True,False
190,273,20,5acd276d07355d001abf3708,یونیکوڈ,یونیکوڈ کے کئی ذیلی سیٹ معیاری ہیں: مائیکروسافٹ ونڈوز چونکہ ونڈوز این ٹی 4.0 652 حروف کے ساتھ ڈبلیو جی ایل 4 کی حمایت کرتا ہے ، جسے لاطینی ، یونانی ، یا سیریلک اسکرپٹ کا استعمال کرتے ہوئے تمام معاصر یورپی زبانوں کی حمایت کرنے کے لئے سمجھا جاتا ہے۔ یونیکوڈ کے دیگر معیاری ذیلی سیٹ میں کثیر لسانی یورپی ذیلی سیٹ شامل ہیں: MES-1 (صرف لاطینی اسکرپٹ ، 335 حروف) ، MES-2 (لاطینی ، یونانی اور سیریلک ••1062•• حروف) اور MES-3A & MES-3B (دو بڑے ذیلی سیٹ ، یہاں نہیں دکھائے گئے) ۔ نوٹ کریں کہ MES-2 میں MES-1 اور WGL-4 میں ہر کردار شامل ہے۔,MES-3B میں کتنے حروف ہیں؟,True,False
191,273,20,5acd276d07355d001abf3709,یونیکوڈ,یونیکوڈ کے کئی ذیلی سیٹ معیاری ہیں: مائیکروسافٹ ونڈوز ونڈوز این ٹی 4.0 کے بعد سے 652 حروف کے ساتھ ڈبلیو جی ایل 4 کی حمایت کرتا ہے ، جسے لاطینی ، یونانی ، یا سیریلک اسکرپٹ کا استعمال کرتے ہوئے تمام معاصر یورپی زبانوں کی حمایت کرنے کے لئے سمجھا جاتا ہے۔ یونیکوڈ کے دیگر معیاری ذیلی سیٹ میں کثیر لسانی یورپی ذیلی سیٹ شامل ہیں: MES-1 (صرف لاطینی اسکرپٹ ، 335 حروف) ، MES-2 (لاطینی ، یونانی اور سیریلک 1062 حروف) اور MES-3A & MES-3B (دو بڑے ذیلی سیٹ ، یہاں نہیں دکھائے گئے) ۔ نوٹ کریں کہ MES-2 میں ••MES-1 اور WGL-4•• میں ہر کردار شامل ہے۔,MES-3A کون سے دو دوسرے سیٹ کو جوڑتا ہے؟,True,False
192,273,20,5acd276d07355d001abf370a,یونیکوڈ,یونیکوڈ کے کئی ذیلی سیٹ معیاری ہیں: مائیکروسافٹ ونڈوز چونکہ ونڈوز این ٹی 4.0 652 حروف کے ساتھ ڈبلیو جی ایل 4 کی حمایت کرتا ہے ، جسے لاطینی ، یونانی ، یا سیریلک اسکرپٹ کا استعمال کرتے ہوئے تمام معاصر یورپی زبانوں کی حمایت کرنے کے لئے سمجھا جاتا ہے۔ یونیکوڈ کے دیگر معیاری ذیلی سیٹ میں کثیر لسانی یورپی ذیلی سیٹ شامل ہیں: ••MES-1•• (صرف لاطینی اسکرپٹ ، 335 حروف) ، MES-2 (لاطینی ، یونانی اور سیریلک 1062 حروف) اور MES-3A & MES-3B (دو بڑے ذیلی سیٹ ، یہاں نہیں دکھائے گئے) ۔ نوٹ کریں کہ MES-2 میں MES-1 اور WGL-4 میں ہر کردار شامل ہے۔,کون سا ذیلی سیٹ صرف یونانی رسم الخط کا استعمال کرتا ہے؟,True,False
193,273,21,57280ea3ff5b5019007d9bf6,یونیکوڈ,رینڈرنگ سافٹ ویئر جو یونیکوڈ کردار کو مناسب طریقے سے پروسیس نہیں کرسکتا ہے اکثر اسے ••کھلے مستطیل ، یا یونیکوڈ متبادل کردار•• (یو + ایف ایف ایف ڈی ،) کے طور پر ظاہر کرتا ہے تاکہ نامعلوم کردار کی پوزیشن کی نشاندہی کی جاسکے۔ کچھ نظاموں نے اس طرح کے کرداروں کے بارے میں مزید معلومات فراہم کرنے کی کوشش کی ہے۔ ایپل کا آخری ریزورٹ فونٹ ایک متبادل گلیف ظاہر کرے گا جو کردار کی یونیکوڈ رینج کی نشاندہی کرتا ہے ، اور ایس آئی ایل انٹرنیشنل کا یونیکوڈ فال بیک فونٹ ایک باکس ظاہر کرے گا۔,جب یہ یونیکوڈ کردار پر عملدرآمد نہیں کر سکتا تو رینڈرنگ سافٹ ویئر کیا ظاہر کرتا ہے؟,False,False
194,273,21,57280ea3ff5b5019007d9bf7,یونیکوڈ,رینڈرنگ سافٹ ویئر جو یونیکوڈ کردار کو مناسب طریقے سے پروسیس نہیں کرسکتا ہے وہ اکثر اسے ایک کھلے مستطیل ، یا یونیکوڈ متبادل کردار (••U + FFFD••) کے طور پر ظاہر کرتا ہے تاکہ نامعلوم کردار کی پوزیشن کی نشاندہی کی جاسکے۔ کچھ نظاموں نے اس طرح کے کرداروں کے بارے میں مزید معلومات فراہم کرنے کی کوشش کی ہے۔ ایپل کا آخری ریزورٹ فونٹ ایک متبادل گلیف ظاہر کرے گا جو کردار کی یونیکوڈ رینج کی نشاندہی کرتا ہے ، اور ایس آئی ایل انٹرنیشنل کا یونیکوڈ فال بیک فونٹ ایک باکس ظاہر کرے گا جو کردار کی ہیکساڈیسیمل اسکالر قیمت کو ظاہر کرتا ہے۔,یونیکوڈ متبادل کردار کے لئے کوڈ کیا ہے؟,False,False
195,273,21,57280ea3ff5b5019007d9bf8,یونیکوڈ,رینڈرنگ سافٹ ویئر جو یونیکوڈ کردار کو مناسب طریقے سے پروسیس نہیں کرسکتا ہے اکثر اسے ایک کھلے مستطیل ، یا یونیکوڈ متبادل کردار (U + FFFD ،) کے طور پر ظاہر کرتا ہے تاکہ نامعلوم کردار کی پوزیشن کی نشاندہی کی جاسکے۔ کچھ نظاموں نے اس طرح کے کرداروں کے بارے میں مزید معلومات فراہم کرنے کی کوشش کی ہے۔ ایپل کا ••آخری ریسورٹ•• فونٹ ایک متبادل گلیف ظاہر کرے گا جو کردار کی یونیکوڈ رینج کی نشاندہی کرتا ہے ، اور ایس آئی ایل انٹرنیشنل کا یونیکوڈ فال بیک فونٹ ایک باکس ظاہر کرے گا۔,ایپل کے فونٹ کا نام کیا ہے؟,False,False
196,273,21,57280ea3ff5b5019007d9bf9,یونیکوڈ,رینڈرنگ سافٹ ویئر جو یونیکوڈ کردار کو مناسب طریقے سے پروسیس نہیں کرسکتا ہے اکثر اسے ایک کھلے مستطیل ، یا یونیکوڈ متبادل کردار (یو + ایف ایف ایف ڈی ،) کے طور پر ظاہر کرتا ہے تاکہ نامعلوم کردار کی پوزیشن کی نشاندہی کی جاسکے۔ کچھ نظاموں نے اس طرح کے کرداروں کے بارے میں مزید معلومات فراہم کرنے کی کوشش کی ہے۔ ایپل کا آخری ریزورٹ فونٹ ایک متبادل گلیف ظاہر کرے گا جو کردار کی یونیکوڈ رینج کی نشاندہی کرتا ہے ، اور ایس آئی ایل انٹرنیشنل کا یونیکوڈ فال بیک فونٹ ••ایک باکس دکھائے گا جس میں کردار کی ہیکساڈیسیمل اسکالر قیمت دکھائی جاتی ہے۔••,جب یہ کسی کردار کو صحیح طریقے سے ظاہر نہیں کرسکتا ہے تو ایس آئی ایل کا یونیکوڈ فال بیک فونٹ کیا ظاہر کرتا ہے؟,False,False
197,273,21,57280ea3ff5b5019007d9bfa,یونیکوڈ,رینڈرنگ سافٹ ویئر جو یونیکوڈ کردار کو مناسب طریقے سے پروسیس نہیں کرسکتا ہے وہ اکثر اسے ایک کھلے مستطیل ، یا یونیکوڈ متبادل کردار (یو + ایف ایف ایف ڈی ،) کے طور پر ظاہر کرتا ہے تاکہ نامعلوم کردار کی پوزیشن کی نشاندہی کی جاسکے۔ کچھ نظاموں نے اس طرح کے کرداروں کے بارے میں مزید معلومات فراہم کرنے کی کوشش کی ہے۔ ایپل کا آخری ریزورٹ فونٹ ایک متبادل گلیف ظاہر کرے گا جو کردار کی یونیکوڈ رینج کی نشاندہی کرتا ہے ، اور ••ایس آئی ایل انٹرنیشنل•• یونیکوڈ فال بیک فونٹ ایک باکس دکھائے گا جس میں کردار کی ہیکساڈیسیمل اسکالر قیمت دکھائی جاتی ہے۔,کون سی کمپنی یونیکوڈ فال بیک فونٹ استعمال کرتی ہے؟,False,False
198,273,21,5acd29f507355d001abf3772,یونیکوڈ,رینڈرنگ سافٹ ویئر جو یونیکوڈ کردار کو مناسب طریقے سے پروسیس نہیں کرسکتا ہے وہ اکثر اسے ایک کھلے مستطیل ، یا یونیکوڈ متبادل کردار (••U + FFFD••) کے طور پر ظاہر کرتا ہے تاکہ نامعلوم کردار کی پوزیشن کی نشاندہی کی جاسکے۔ کچھ نظاموں نے اس طرح کے کرداروں کے بارے میں مزید معلومات فراہم کرنے کی کوشش کی ہے۔ ایپل کا آخری ریزورٹ فونٹ ایک متبادل گلیف ظاہر کرے گا جو کردار کی یونیکوڈ رینج کی نشاندہی کرتا ہے ، اور ایس آئی ایل انٹرنیشنل کا یونیکوڈ فال بیک فونٹ ایک باکس ظاہر کرے گا جو کردار کی ہیکساڈیسیمل اسکالر قیمت کو ظاہر کرتا ہے۔,ایک کھلے مستطیل کے لئے یونیکوڈ کیا ہے؟,True,False
199,273,21,5acd29f507355d001abf3773,یونیکوڈ,رینڈرنگ سافٹ ویئر جو یونیکوڈ کردار کو مناسب طریقے سے پروسیس نہیں کرسکتا ہے وہ اکثر اسے ایک کھلے مستطیل ، یا یونیکوڈ متبادل کردار (یو + ایف ایف ایف ڈی ،) کے طور پر ظاہر کرتا ہے تاکہ نامعلوم کردار کی پوزیشن کی نشاندہی کی جاسکے۔ کچھ نظاموں نے اس طرح کے کرداروں کے بارے میں مزید معلومات فراہم کرنے کی کوشش کی ہے۔ ••ایپل•• کا آخری ریزورٹ فونٹ ایک متبادل گلیف ظاہر کرے گا جو کردار کی یونیکوڈ رینج کی نشاندہی کرتا ہے ، اور ایس آئی ایل انٹرنیشنل کا یونیکوڈ فال بیک فونٹ ایک باکس ظاہر کرے گا۔,کون سی کمپنی یو + ایف ایف ایف ڈی استعمال کرتی ہے؟,True,False
200,273,21,5acd29f507355d001abf3774,یونیکوڈ,رینڈرنگ سافٹ ویئر جو یونیکوڈ کردار کو مناسب طریقے سے پروسیس نہیں کرسکتا ہے اکثر اسے ایک کھلے مستطیل ، یا یونیکوڈ متبادل کردار (U + FFFD ، •• ••) کے طور پر ظاہر کرتا ہے ، تاکہ نامعلوم کردار کی پوزیشن کی نشاندہی کی جاسکے۔ کچھ نظاموں نے اس طرح کے کرداروں کے بارے میں مزید معلومات فراہم کرنے کی کوشش کی ہے۔ ایپل کا آخری ریزورٹ فونٹ ایک متبادل گلیف ظاہر کرے گا جو کردار کی یونیکوڈ رینج کی نشاندہی کرتا ہے ، اور ایس آئی ایل انٹرنیشنل کا یونیکوڈ فال بیک فونٹ ایک باکس ظاہر کرے گا۔,ایپل کے لاسٹ ریسورٹ فونٹ میں کون سا گلیف دکھایا گیا ہے؟,True,False
201,273,21,5acd29f507355d001abf3775,یونیکوڈ,رینڈرنگ سافٹ ویئر جو یونیکوڈ کردار کو مناسب طریقے سے پروسیس نہیں کرسکتا ہے اکثر اسے ایک کھلے مستطیل ، یا یونیکوڈ متبادل کردار (U + FFFD ،) کے طور پر ظاہر کرتا ہے تاکہ نامعلوم کردار کی پوزیشن کی نشاندہی کی جاسکے۔ کچھ نظاموں نے اس طرح کے کرداروں کے بارے میں مزید معلومات فراہم کرنے کی کوشش کی ہے۔ ایپل کا آخری ریزورٹ فونٹ ایک متبادل گلیف ظاہر کرے گا جو کردار کی یونیکوڈ رینج کی نشاندہی کرتا ہے ، اور ایس آئی ایل انٹرنیشنل کا ••یونیکوڈ فال بیک•• فونٹ ایک باکس ظاہر کرے گا جو کردار کی ہیکساڈیسیمل اسکالر قیمت کو ظاہر کرتا ہے۔,SIL کی طرف سے کیا سافٹ ویئر یونیکوڈ حروف پر عملدرآمد نہیں کر سکتا؟,True,False
202,273,22,57280fad3acd2414000df365,یونیکوڈ,••یونیکوڈ•• متن کے اندرونی پروسیسنگ اور اسٹوریج کے لئے غالب اسکیم بن گیا ہے۔ اگرچہ متن کا ایک بڑا حصہ اب بھی میراث انکوڈنگ میں ذخیرہ کیا جاتا ہے ، لیکن یونیکوڈ کو تقریبا exclusively خصوصی طور پر نئے انفارمیشن پروسیسنگ سسٹم کی تعمیر کے لئے استعمال کیا جاتا ہے۔ ابتدائی اپنانے والے UCS-2 (UTF-16 کے لئے فکسڈ چوڑائی دو بائٹ پیش خیمہ) کا استعمال کرتے تھے اور بعد میں UTF-16 (متغیر چوڑائی موجودہ معیار) میں منتقل ہوگئے ، کیونکہ یہ غیر بی ایم پی حروف کی حمایت شامل کرنے کا سب سے کم پریشان کن طریقہ تھا۔ سب سے مشہور ایسا نظام ونڈوز این ٹی (اور اس کی اولاد ، ونڈوز 2000 ، ونڈوز ایکس پی ، ونڈوز وسٹا اور ونڈوز 7) ہے ، جو واحد اندرونی کردار انکوڈنگ کے طور پر UTF-16 کا استعمال کرتا ہے۔ جاوا اور .NET bytecode ماحول ، میک OS X ، اور KDE بھی اسے اندرونی نمائندگی کے لئے استعمال کرتے ہیں۔ یونیکوڈ مائیکروسافٹ کے لئے ونڈوز 95 پرت کے ذریعے دستیاب ہے۔,اندرونی پروسیسنگ کے لئے غالب اسکیم کیا ہے؟,False,False
203,273,22,57280fad3acd2414000df366,یونیکوڈ,یونیکوڈ متن کے اندرونی پروسیسنگ اور اسٹوریج کے لئے غالب اسکیم بن گیا ہے۔ اگرچہ متن کا ایک بڑا حصہ اب بھی میراث انکوڈنگ میں ذخیرہ کیا جاتا ہے ، لیکن یونیکوڈ کو تقریبا exclusively خصوصی طور پر نئے انفارمیشن پروسیسنگ سسٹم کی تعمیر کے لئے استعمال کیا جاتا ہے۔ ابتدائی اپنانے والے UCS-2 (UTF-16 کے لئے فکسڈ چوڑائی دو بائٹ پیش خیمہ) کا استعمال کرتے تھے اور بعد میں UTF-16 (متغیر چوڑائی موجودہ معیار) میں منتقل ہوگئے ، کیونکہ یہ غیر بی ایم پی حروف کے لئے حمایت شامل کرنے کا سب سے کم پریشان کن طریقہ تھا۔ سب سے مشہور ایسا نظام ونڈوز این ٹی (اور اس کی اولاد ، ونڈوز 2000 ، ونڈوز ایکس پی ، ونڈوز وسٹا اور ونڈوز 7) ہے ، جو UTF-16 کو واحد اندرونی کردار انکوڈنگ کے طور پر استعمال کرتا ہے۔ جاوا اور .NET بائٹ کوڈ ماحول ، میک ایکس ، اور کے ڈی ای بھی اسے اندرونی نمائندگی کے لئے استعمال کرتے ہیں۔ یونیکوڈ ونڈ 95 ••مائیکروسافٹ پرت•• کے ذریعے دستیاب ہے۔,ونڈوز کے ذریعے یونیکوڈ کس پر دستیاب ہے؟,False,False
204,273,22,57280fad3acd2414000df367,یونیکوڈ,یونیکوڈ متن کے اندرونی پروسیسنگ اور اسٹوریج کے لئے غالب اسکیم بن گیا ہے۔ اگرچہ متن کا ایک بڑا حصہ اب بھی میراث انکوڈنگ میں ذخیرہ کیا جاتا ہے ، لیکن یونیکوڈ کو تقریبا exclusively خصوصی طور پر نئے انفارمیشن پروسیسنگ سسٹم کی تعمیر کے لئے استعمال کیا جاتا ہے۔ ابتدائی اپنانے والے ••یو سی ایس -2•• (یو ٹی ایف 16 کے لئے فکسڈ چوڑائی دو بائٹ پیش خیمہ) کا استعمال کرتے تھے اور بعد میں یو ٹی ایف 16 (متغیر چوڑائی موجودہ معیار) میں منتقل ہوگئے ، کیونکہ یہ غیر بی ایم پی حروف کے لئے حمایت شامل کرنے کا سب سے کم پریشان کن طریقہ تھا۔ سب سے مشہور ایسا نظام ونڈوز این ٹی (اور اس کی اولاد ، ونڈوز 2000 ، ونڈوز ایکس پی ، ونڈوز وسٹا اور ونڈوز 7) ہے ، جو یو ٹی ایف 16 کو واحد اندرونی کردار انکوڈنگ کے طور پر استعمال کرتا ہے۔ جاوا اور .NET بائٹ کوڈ ماحول ، میک او ایس ایکس ، اور کے ڈی ای بھی اسے اندرونی نمائندگی کے لئے استعمال کرتے ہیں۔ یونیکوڈ مائیکروسافٹ کے لئے ونڈ 95 پرت پر دستیاب ہے۔,UTF-16 کا دو بائٹ کا پیش خیمہ کیا تھا؟,False,False
205,273,22,57280fad3acd2414000df368,یونیکوڈ,یونیکوڈ متن کے اندرونی پروسیسنگ اور اسٹوریج کے لئے غالب اسکیم بن گیا ہے۔ اگرچہ متن کا ایک بڑا حصہ اب بھی میراث انکوڈنگ میں ذخیرہ کیا جاتا ہے ، ••یونیکوڈ•• تقریبا exclusively خصوصی طور پر نئے انفارمیشن پروسیسنگ سسٹم کی تعمیر کے لئے استعمال کیا جاتا ہے۔ ابتدائی اپنانے والے UCS-2 (UTF-16 کے لئے فکسڈ چوڑائی دو بائٹ پیش خیمہ) کا استعمال کرتے تھے اور بعد میں UTF-16 (متغیر چوڑائی موجودہ معیار) میں منتقل ہوگئے ، کیونکہ یہ غیر BMP حروف کی حمایت شامل کرنے کا سب سے کم پریشان کن طریقہ تھا۔ سب سے مشہور ایسا نظام ونڈوز این ٹی (اور اس کی اولاد ، ونڈوز 2000 ، ونڈوز ایکس پی ، ونڈوز وسٹا اور ونڈوز 7) ہے ، جو UTF-16 کو واحد اندرونی حروف انکوڈنگ کے طور پر استعمال کرتا ہے۔ جاوا اور .NET bytecode ماحول ، میک OS X ، اور KDE بھی اسے اندرونی نمائندگی کے لئے استعمال کرتے ہیں۔ یونیکوڈ مائیکروسافٹ کے لئے ونڈ 95 پرت کے ذریعے دستیاب ہے۔,نئے انفارمیشن پروسیسنگ سسٹم کی تعمیر کے لئے تقریبا خصوصی طور پر کیا استعمال کیا جاتا ہے؟,False,False
206,273,22,5acd2c8407355d001abf37ce,یونیکوڈ,یونیکوڈ متن کے اندرونی پروسیسنگ اور اسٹوریج کے لئے غالب اسکیم بن گیا ہے۔ اگرچہ متن کا ایک بڑا حصہ اب بھی میراث انکوڈنگ میں ذخیرہ کیا جاتا ہے ، لیکن یونیکوڈ کو تقریبا exclusively خصوصی طور پر ••نئے انفارمیشن پروسیسنگ سسٹم کی تعمیر•• کے لئے استعمال کیا جاتا ہے۔ ابتدائی اپنانے والے UCS-2 (UTF-16 کے لئے فکسڈ چوڑائی دو بائٹ پیش خیمہ) کا استعمال کرتے تھے اور بعد میں UTF-16 (متغیر چوڑائی موجودہ معیار) میں منتقل ہوگئے ، کیونکہ یہ غیر بی ایم پی حروف کے لئے حمایت شامل کرنے کا سب سے کم پریشان کن طریقہ تھا۔ سب سے مشہور ایسا نظام ونڈوز این ٹی (اور اس کی اولاد ، ونڈوز 2000 ، ونڈوز ایکس پی ، ونڈوز وسٹا اور ونڈوز 7) ہے ، جو UTF-16 کو اندرونی واحد کردار انکوڈنگ کے طور پر استعمال کرتا ہے۔ جاوا اور .NET بائٹ کوڈ ماحول ، میک او ایس ایکس ، اور کے ڈی ای بھی اسے اندرونی نمائندگی کے لئے استعمال کرتے ہیں۔ یونیکوڈ مائیکروسافٹ یونیکوڈ کے لئے پرت 95 کے ذریعے دستیاب ہے۔,میراث انکوڈنگ خصوصی طور پر کس کے لئے استعمال کیا جاتا ہے؟,True,False
207,273,22,5acd2c8407355d001abf37cf,یونیکوڈ,یونیکوڈ متن کے اندرونی پروسیسنگ اور اسٹوریج کے لئے غالب اسکیم بن گیا ہے۔ اگرچہ متن کا ایک بڑا حصہ اب بھی میراث انکوڈنگ میں ذخیرہ کیا جاتا ہے ، لیکن یونیکوڈ کو تقریبا exclusively خصوصی طور پر نئے انفارمیشن پروسیسنگ سسٹم کی تعمیر کے لئے استعمال کیا جاتا ہے۔ ابتدائی اپنانے والے UCS-2 (فکسڈ چوڑائی دو بائٹ پیش رو ••UTF-16••) کا استعمال کرتے تھے اور بعد میں UTF-16 (متغیر چوڑائی موجودہ معیار) میں منتقل ہوگئے ، کیونکہ یہ غیر بی ایم پی حروف کے لئے حمایت شامل کرنے کا سب سے کم پریشان کن طریقہ تھا۔ سب سے مشہور ایسا نظام ونڈوز این ٹی (اور اس کی اولاد ، ونڈوز 2000 ، ونڈوز ایکس پی ، ونڈوز وسٹا اور ونڈوز 7) ہے ، جو UTF-16 کو اندرونی واحد کردار انکوڈنگ کے طور پر استعمال کرتا ہے۔ جاوا اور .NET بائٹ کوڈ ماحول ، میک OS X ، اور KDE بھی اسے اندرونی نمائندگی کے لئے استعمال کرتے ہیں۔ یونیکوڈ مائیکروسافٹ یونیکوڈ کے لئے ونڈ 95 پرت کے ذریعے دستیاب ہے۔,یو سی ایس 2 کا پیش خیمہ کیا تھا؟,True,False
208,273,22,5acd2c8407355d001abf37d0,یونیکوڈ,یونیکوڈ متن کے اندرونی پروسیسنگ اور اسٹوریج کے لئے غالب اسکیم بن گیا ہے۔ اگرچہ متن کا ایک بڑا حصہ اب بھی میراث انکوڈنگ میں ذخیرہ کیا جاتا ہے ، لیکن یونیکوڈ کو تقریبا exclusively خصوصی طور پر نئے انفارمیشن پروسیسنگ سسٹم کی تعمیر کے لئے استعمال کیا جاتا ہے۔ ابتدائی اپنانے والے UCS-2 (UTF-16 کے لئے فکسڈ چوڑائی دو بائٹ پیش خیمہ) کا استعمال کرتے تھے اور بعد میں UTF-16 (متغیر چوڑائی موجودہ معیار) میں منتقل ہوگئے ، کیونکہ یہ غیر بی ایم پی حروف کی حمایت شامل کرنے کا سب سے کم پریشان کن طریقہ تھا۔ سب سے مشہور ایسا نظام ونڈوز این ٹی (اور اس کی اولاد ، ••ونڈوز 2000 ، ونڈوز ایکس پی ، ونڈوز وسٹا اور ونڈوز 7••) ہے ، جو UTF-16 کو اندرونی واحد کردار انکوڈنگ کے طور پر استعمال کرتا ہے۔ جاوا اور .NET بائٹ کوڈ ماحول ، میک او ایس ایکس ، اور کے ڈی ای بھی اسے اندرونی نمائندگی کے لئے استعمال کرتے ہیں۔ یونیکوڈ مائیکروسافٹ یونیکوڈ کے لئے پرت 95 کے ذریعے دستیاب ہے۔,میک او ایس ایکس سے کیا نکلا؟,True,False
209,273,22,5acd2c8407355d001abf37d1,یونیکوڈ,یونیکوڈ متن کے اندرونی پروسیسنگ اور اسٹوریج کے لئے غالب اسکیم بن گیا ہے۔ اگرچہ متن کا ایک بڑا حصہ اب بھی میراث انکوڈنگ میں ذخیرہ کیا جاتا ہے ، لیکن یونیکوڈ کو تقریبا exclusively خصوصی طور پر نئے انفارمیشن پروسیسنگ سسٹم کی تعمیر کے لئے استعمال کیا جاتا ہے۔ ابتدائی اپنانے والے UCS-2 (UTF-16 کے لئے فکسڈ چوڑائی دو بائٹ پیش خیمہ) کا استعمال کرتے تھے اور بعد میں UTF-16 (متغیر چوڑائی موجودہ معیار) میں منتقل ہوگئے ، کیونکہ یہ غیر بی ایم پی حروف کے لئے حمایت شامل کرنے کا سب سے کم پریشان کن طریقہ تھا۔ سب سے مشہور ایسا نظام ونڈوز این ٹی (اور اس کی اولاد ، ونڈوز 2000 ، ونڈوز ایکس پی ، ونڈوز وسٹا اور ونڈوز 7) ہے ، جو UTF-16 کو واحد اندرونی کردار انکوڈنگ کے طور پر استعمال کرتا ہے۔ جاوا اور .NET ••بائٹ کوڈ ماحول•• ، میک OS X ، اور KDE بھی اسے اندرونی نمائندگی کے لئے استعمال کرتے ہیں۔ یونیکوڈ ونڈ 95 پر دستیاب ہے۔,میک او ایس ایکس اور کے ڈی ای کو کیا کہا جاتا ہے؟,True,False
210,273,22,5acd2c8407355d001abf37d2,یونیکوڈ,یونیکوڈ متن کے اندرونی پروسیسنگ اور اسٹوریج کے لئے غالب اسکیم بن گیا ہے۔ اگرچہ متن کا ایک بڑا حصہ اب بھی میراث انکوڈنگ میں ذخیرہ کیا جاتا ہے ، لیکن یونیکوڈ کو تقریبا exclusively خصوصی طور پر نئے انفارمیشن پروسیسنگ سسٹم کی تعمیر کے لئے استعمال کیا جاتا ہے۔ ابتدائی اپنانے والے ••یو سی ایس -2•• (یو ٹی ایف 16 کے لئے فکسڈ چوڑائی دو بائٹ پیش خیمہ) کا استعمال کرتے تھے اور بعد میں یو ٹی ایف 16 (متغیر چوڑائی موجودہ معیار) میں منتقل ہوگئے ، کیونکہ یہ غیر بی ایم پی حروف کے لئے حمایت شامل کرنے کا سب سے کم پریشان کن طریقہ تھا۔ سب سے مشہور ایسا نظام ونڈوز این ٹی (اور اس کی اولاد ، ونڈوز 2000 ، ونڈوز ایکس پی ، ونڈوز وسٹا اور ونڈوز 7) ہے ، جو یو ٹی ایف 16 کو واحد اندرونی کردار انکوڈنگ کے طور پر استعمال کرتا ہے۔ جاوا اور .NET بائٹ کوڈ ماحول ، میک او ایس ایکس ، اور کے ڈی ای بھی اسے اندرونی نمائندگی کے لئے استعمال کرتے ہیں۔ یونیکوڈ مائیکروسافٹ کے لئے ونڈ 95 پرت پر دستیاب ہے۔,فکسڈ چوڑائی ایک بائٹ کیا ہے؟,True,False
211,273,23,572810c62ca10214002d9d00,یونیکوڈ,MIME ای میل میں غیر ASCII حروف کو انکوڈ کرنے کے لئے دو مختلف میکانزم کی وضاحت کرتا ہے ، اس پر منحصر ہے کہ آیا حروف ای میل ہیڈر میں ہیں (جیسے موضوع:) ، یا پیغام کے متن کے جسم میں؛ دونوں صورتوں میں ، اصل کردار سیٹ کی شناخت کے ساتھ ساتھ ٹرانسفر انکوڈنگ بھی کی جاتی ہے۔ یونیکوڈ کے ای میل ٹرانسمیشن کے لئے ••UTF-8 کردار سیٹ اور بیس 64 یا کوٹڈ پرنٹ ایبل ٹرانسفر انکوڈنگ•• کی سفارش کی جاتی ہے ، اس پر منحصر ہے کہ آیا پیغام کا زیادہ تر حصہ ASCII حروف پر مشتمل ہے۔ دو مختلف میکانزم کی تفصیلات MIME معیارات میں بیان کی گئی ہیں اور عام طور پر ای میل سافٹ ویئر کے صارفین سے پوشیدہ ہیں۔,یونیکوڈ کے ای میل ٹرانسمیشن کے لئے کیا سفارش کی جاتی ہے؟,False,False
212,273,23,572810c62ca10214002d9d01,یونیکوڈ,MIME ای میل میں غیر ASCII حروف کو انکوڈ کرنے کے لئے دو مختلف میکانزم کی وضاحت کرتا ہے ، اس پر منحصر ہے کہ آیا حروف ای میل ہیڈر میں ہیں (جیسے موضوع:) ، یا پیغام کے متن کے جسم میں؛ دونوں صورتوں میں ، اصل کردار سیٹ کی شناخت کے ساتھ ساتھ ٹرانسفر انکوڈنگ بھی کی جاتی ہے۔ یونیکوڈ کے ای میل ٹرانسمیشن کے لئے UTF-8 کردار سیٹ اور بیس 64 یا کوٹڈ پرنٹ ایبل ٹرانسفر انکوڈنگ کی سفارش کی جاتی ہے ، اس پر منحصر ہے کہ آیا پیغام کا زیادہ تر حصہ ASCII حروف پر مشتمل ہے۔ دو مختلف میکانزم کی تفصیلات ••MIME معیارات•• میں بیان کی گئی ہیں اور عام طور پر ای میل سافٹ ویئر کے صارفین سے پوشیدہ ہیں۔,ای میل کی منتقلی کے لئے دو میکانزم کی تفصیلات کہاں بیان کی گئی ہیں؟,False,False
213,273,23,572810c62ca10214002d9d02,یونیکوڈ,MIME ای میل میں غیر ASCII حروف کو انکوڈ کرنے کے لئے ••دو مختلف میکانزم•• کی وضاحت کرتا ہے ، اس پر منحصر ہے کہ آیا حروف ای میل ہیڈر میں ہیں (جیسے موضوع:) ، یا پیغام کے متن کے جسم میں؛ دونوں صورتوں میں ، اصل کردار سیٹ کی شناخت کے ساتھ ساتھ ٹرانسفر انکوڈنگ بھی کی جاتی ہے۔ یونیکوڈ کے ای میل ٹرانسمیشن کے لئے UTF-8 کردار سیٹ اور بیس 64 یا کوٹڈ پرنٹ ایبل ٹرانسفر انکوڈنگ کی سفارش کی جاتی ہے ، اس پر منحصر ہے کہ آیا پیغام کا زیادہ تر حصہ ASCII حروف پر مشتمل ہے۔ دو مختلف میکانزم کی تفصیلات MIME معیارات میں بیان کی گئی ہیں اور عام طور پر ای میل سافٹ ویئر کے صارفین سے پوشیدہ ہیں۔,ای میل میں یونیکوڈ انکوڈنگ کے لئے MIME کتنے مختلف میکانزم کی وضاحت کرتا ہے؟,False,False
214,273,23,5acd2f3507355d001abf382e,یونیکوڈ,MIME ای میل میں غیر ASCII حروف کو انکوڈ کرنے کے لئے ••دو•• مختلف میکانزم کی وضاحت کرتا ہے ، اس پر منحصر ہے کہ آیا حروف ای میل ہیڈر میں ہیں (جیسے موضوع:) ، یا پیغام کے متن کے جسم میں؛ دونوں صورتوں میں ، اصل کردار سیٹ کی شناخت کے ساتھ ساتھ ٹرانسفر انکوڈنگ بھی کی جاتی ہے۔ یونیکوڈ کے ای میل ٹرانسمیشن کے لئے UTF-8 کردار سیٹ اور بیس 64 یا کوٹڈ پرنٹ ایبل ٹرانسفر انکوڈنگ کی سفارش کی جاتی ہے ، اس پر منحصر ہے کہ آیا پیغام کا زیادہ تر حصہ ASCII حروف پر مشتمل ہے۔ دو مختلف میکانزم کی تفصیلات MIME معیارات میں بیان کی گئی ہیں اور عام طور پر ای میل سافٹ ویئر کے صارفین سے پوشیدہ ہیں۔,ایک ای میل میں ASCII حروف کو کتنے طریقوں سے انکوڈ کیا جاسکتا ہے؟,True,False
215,273,23,5acd2f3507355d001abf382f,یونیکوڈ,MIME ای میل میں غیر ASCII حروف کو انکوڈ کرنے کے لئے دو مختلف میکانزم کی وضاحت کرتا ہے ، اس پر منحصر ہے کہ آیا حروف ای میل ہیڈر میں ہیں (جیسے ••موضوع:••) ، یا پیغام کے متن کے جسم میں؛ دونوں صورتوں میں ، اصل کردار سیٹ کی شناخت کے ساتھ ساتھ ٹرانسفر انکوڈنگ بھی کی جاتی ہے۔ یونیکوڈ کے ای میل ٹرانسمیشن کے لئے UTF-8 کردار سیٹ اور بیس 64 یا کوٹڈ پرنٹ ایبل ٹرانسفر انکوڈنگ کی سفارش کی جاتی ہے ، اس پر منحصر ہے کہ آیا پیغام کا زیادہ تر حصہ ASCII حروف پر مشتمل ہے۔ دونوں مختلف میکانزم کی تفصیلات MIME معیارات میں بیان کی گئی ہیں اور عام طور پر ای میل سافٹ ویئر کے صارفین سے پوشیدہ ہیں۔,متن کے جسم کا حوالہ دینے کا ایک اور طریقہ کیا ہے؟,True,False
216,273,23,5acd2f3507355d001abf3830,یونیکوڈ,MIME ای میل میں غیر ASCII حروف کو انکوڈ کرنے کے لئے دو مختلف میکانزم کی وضاحت کرتا ہے ، اس پر منحصر ہے کہ آیا حروف ای میل ہیڈر میں ہیں (جیسے موضوع:) ، یا پیغام کے متن کے جسم میں؛ دونوں صورتوں میں ، اصل کردار سیٹ کی شناخت کے ساتھ ساتھ ٹرانسفر انکوڈنگ بھی کی جاتی ہے۔ یونیکوڈ کے ای میل ٹرانسمیشن کے لئے UTF-8 کردار سیٹ اور بیس 64 یا کوٹڈ پرنٹ ایبل ٹرانسفر انکوڈنگ کی سفارش کی جاتی ہے ، اس پر منحصر ہے کہ آیا پیغام کا زیادہ تر حصہ ASCII حروف پر مشتمل ہے۔ دو مختلف میکانزم کی تفصیلات ••MIME معیارات•• میں بیان کی گئی ہیں اور عام طور پر ای میل سافٹ ویئر کے صارفین سے پوشیدہ ہیں۔,صارف کے لئے کون سی وضاحتیں نظر آتی ہیں؟,True,False
217,273,23,5acd2f3507355d001abf3831,یونیکوڈ,MIME ای میل میں غیر ASCII حروف کو انکوڈ کرنے کے لئے دو مختلف میکانزم کی وضاحت کرتا ہے ، اس پر منحصر ہے کہ آیا حروف ای میل ہیڈر میں ہیں (جیسے موضوع:) ، یا پیغام کے متن کے جسم میں؛ دونوں صورتوں میں ، اصل کردار سیٹ کی شناخت کے ساتھ ساتھ ٹرانسفر انکوڈنگ بھی کی جاتی ہے۔ یونیکوڈ کے ••ای میل ٹرانسمیشن•• کے لئے UTF-8 کردار سیٹ اور بیس 64 یا کوٹڈ پرنٹ ایبل ٹرانسفر انکوڈنگ کی سفارش کی جاتی ہے ، اس پر منحصر ہے کہ آیا پیغام کا زیادہ تر حصہ ASCII حروف پر مشتمل ہے۔ دو مختلف میکانزم کی تفصیلات MIME معیارات میں بیان کی گئی ہیں اور عام طور پر ای میل سافٹ ویئر کے صارفین سے پوشیدہ ہیں۔,Base64 کی سفارش کب نہیں کی جاتی ہے؟,True,False
218,273,24,572812d44b864d19001643c8,یونیکوڈ,مارکیٹ میں ہزاروں فونٹ موجود ہیں ، لیکن ••ایک درجن سے بھی کم فونٹ•• - کبھی کبھی پین یونیکوڈ فونٹس کے طور پر بیان کیا جاتا ہے - یونیکوڈ کے زیادہ تر کرداروں کی حمایت کرنے کی کوشش کرتے ہیں۔ اس کے بجائے ، یونیکوڈ پر مبنی فونٹ عام طور پر صرف بنیادی ASCII اور مخصوص اسکرپٹس یا حروف یا علامتوں کے سیٹ کی حمایت پر توجہ دیتے ہیں۔ کئی وجوہات اس نقطہ نظر کو جائز قرار دیتی ہیں: ایپلی کیشنز اور دستاویزات کو شاذ و نادر ہی ایک یا دو سے زیادہ تحریری نظاموں کے حروف کو پیش کرنے کی ضرورت ہوتی ہے۔ فونٹ کمپیوٹنگ ماحول میں وسائل کا مطالبہ کرتے ہیں۔ اور آپریٹنگ سسٹم اور ایپلی کیشنز ضرورت کے مطابق علیحدہ فونٹ فائلوں سے گلیف معلومات حاصل کرنے کے سلسلے میں بڑھتی ہوئی ذہانت کا مظاہرہ کرتے ہیں۔ اس کے علاوہ ، دسیوں ہزاروں گلیفوں کے لئے رینڈرنگ ہدایات کا ایک مستقل سیٹ ڈیزائن کرنا ایک یادگار کام ہے۔ ایسا منصوبہ زیادہ تر ٹائپ فیسوں کے لئے کم ہونے والی واپسی کا نقطہ گزر جاتا ہے۔,کتنے فونٹ یونیکوڈ کے کردار کے ذخیرے کی اکثریت کی حمایت کرتے ہیں؟,False,False
219,273,24,572812d44b864d19001643c9,یونیکوڈ,مارکیٹ میں ہزاروں فونٹ موجود ہیں ، لیکن ایک درجن سے بھی کم فونٹ - کبھی کبھی ••پین یونیکوڈ فونٹ•• کے طور پر بیان کیے جاتے ہیں - یونیکوڈ کے زیادہ تر کرداروں کی حمایت کرنے کی کوشش کرتے ہیں۔ اس کے بجائے ، یونیکوڈ پر مبنی فونٹ عام طور پر صرف بنیادی ASCII اور مخصوص اسکرپٹس یا حروف یا علامتوں کے سیٹ کی حمایت پر توجہ دیتے ہیں۔ کئی وجوہات اس نقطہ نظر کو جائز قرار دیتی ہیں: ایپلی کیشنز اور دستاویزات کو شاذ و نادر ہی ایک یا دو سے زیادہ تحریری نظاموں کے حروف کو پیش کرنے کی ضرورت ہوتی ہے۔ فونٹ کمپیوٹنگ ماحول میں وسائل کا مطالبہ کرتے ہیں۔ اور آپریٹنگ سسٹم اور ایپلی کیشنز ضرورت کے مطابق علیحدہ فونٹ فائلوں سے گلیف معلومات حاصل کرنے کے سلسلے میں بڑھتی ہوئی ذہانت کا مظاہرہ کرتے ہیں۔ اس کے علاوہ ، دسیوں ہزاروں گلیفوں کے لئے رینڈرنگ ہدایات کا ایک مستقل سیٹ ڈیزائن کرنا ایک یادگار کام ہے۔ ایسا منصوبہ زیادہ تر ٹائپ فیسوں کے لئے کم ہونے والی واپسی کا نقطہ گزر جاتا ہے۔,یونیکوڈ کی حمایت کرنے والے فونٹس کو کیا کہا جاتا ہے؟,False,False
220,273,24,572812d44b864d19001643ca,یونیکوڈ,مارکیٹ میں ہزاروں فونٹ موجود ہیں ، لیکن ایک درجن سے بھی کم فونٹ - کبھی کبھی پین یونیکوڈ فونٹس کے طور پر بیان کیے جاتے ہیں - یونیکوڈ کے زیادہ تر کرداروں کی حمایت کرنے کی کوشش کرتے ہیں۔ اس کے بجائے ، یونیکوڈ پر مبنی فونٹ عام طور پر صرف ••بنیادی ASCII اور خاص اسکرپٹ یا حروف یا علامتوں کے سیٹ•• کی حمایت پر توجہ دیتے ہیں۔ کئی وجوہات اس نقطہ نظر کو جائز قرار دیتی ہیں: ایپلی کیشنز اور دستاویزات کو شاذ و نادر ہی ایک یا دو سے زیادہ تحریری نظاموں کے حروف کو پیش کرنے کی ضرورت ہوتی ہے۔ فونٹ کمپیوٹنگ ماحول میں وسائل کا مطالبہ کرتے ہیں۔ اور آپریٹنگ سسٹم اور ایپلی کیشنز ضرورت کے مطابق علیحدہ فونٹ فائلوں سے گلیف معلومات حاصل کرنے کے سلسلے میں بڑھتی ہوئی ذہانت کا مظاہرہ کرتے ہیں۔ اس کے علاوہ ، دسیوں ہزاروں گلیفوں کے لئے رینڈرنگ ہدایات کا ایک مستقل سیٹ ڈیزائن کرنا ایک یادگار کام ہے۔ ایسا منصوبہ زیادہ تر ٹائپ فیسوں کے لئے کم ہونے والی واپسی کا نقطہ گزر جاتا ہے۔,یونیکوڈ پر مبنی فونٹ عام طور پر کس کی حمایت پر مرکوز ہوتے ہیں؟,False,False
221,273,24,5acd309b07355d001abf3888,یونیکوڈ,مارکیٹ میں ہزاروں فونٹ موجود ہیں ، لیکن ایک درجن سے بھی کم فونٹ - کبھی کبھی ••پین یونیکوڈ•• فونٹ کے طور پر بیان کیے جاتے ہیں - یونیکوڈ کے زیادہ تر کرداروں کی حمایت کرنے کی کوشش کرتے ہیں۔ اس کے بجائے ، یونیکوڈ پر مبنی فونٹ عام طور پر صرف بنیادی ASCII اور مخصوص اسکرپٹس یا حروف یا علامتوں کے سیٹ کی حمایت پر توجہ دیتے ہیں۔ کئی وجوہات اس نقطہ نظر کو جائز قرار دیتی ہیں: ایپلی کیشنز اور دستاویزات کو شاذ و نادر ہی ایک یا دو سے زیادہ تحریری نظاموں کے حروف کو پیش کرنے کی ضرورت ہوتی ہے۔ فونٹ کمپیوٹنگ ماحول میں وسائل کا مطالبہ کرتے ہیں۔ اور آپریٹنگ سسٹم اور ایپلی کیشنز ضرورت کے مطابق علیحدہ فونٹ فائلوں سے گلیف معلومات حاصل کرنے کے سلسلے میں بڑھتی ہوئی ذہانت کا مظاہرہ کرتے ہیں۔ اس کے علاوہ ، دسیوں ہزاروں گلیفوں کے لئے رینڈرنگ ہدایات کا ایک مستقل سیٹ ڈیزائن کرنا ایک یادگار کام ہے۔ ایسا منصوبہ زیادہ تر ٹائپ فیسوں کے لئے کم ہونے والی واپسی کا نقطہ گزر جاتا ہے۔,مارکیٹ میں زیادہ تر فونٹس کو کیا کہا جاتا ہے؟,True,False
222,273,24,5acd309b07355d001abf3889,یونیکوڈ,مارکیٹ میں ہزاروں فونٹ موجود ہیں ، لیکن ایک درجن سے بھی کم فونٹ - کبھی کبھی پین یونیکوڈ فونٹس کے طور پر بیان کیے جاتے ہیں - یونیکوڈ کے زیادہ تر کرداروں کی حمایت کرنے کی کوشش کرتے ہیں۔ اس کے بجائے ، یونیکوڈ پر مبنی فونٹ عام طور پر صرف ••بنیادی ASCII اور خاص اسکرپٹ یا حروف یا علامتوں کے سیٹ•• کی حمایت پر توجہ دیتے ہیں۔ کئی وجوہات اس نقطہ نظر کو جائز قرار دیتی ہیں: ایپلی کیشنز اور دستاویزات کو شاذ و نادر ہی ایک یا دو سے زیادہ تحریری نظاموں کے حروف کو پیش کرنے کی ضرورت ہوتی ہے۔ فونٹ کمپیوٹنگ ماحول میں وسائل کا مطالبہ کرتے ہیں۔ اور آپریٹنگ سسٹم اور ایپلی کیشنز ضرورت کے مطابق علیحدہ فونٹ فائلوں سے گلیف معلومات حاصل کرنے کے سلسلے میں بڑھتی ہوئی ذہانت کا مظاہرہ کرتے ہیں۔ اس کے علاوہ ، دسیوں ہزاروں گلیفوں کے لئے رینڈرنگ ہدایات کا ایک مستقل سیٹ ڈیزائن کرنا ایک یادگار کام ہے۔ ایسا منصوبہ زیادہ تر ٹائپ فیسوں کے لئے کم ہونے والی واپسی کا نقطہ گزر جاتا ہے۔,پین یونیکوڈ فونٹس صرف کیا حمایت کرتے ہیں؟,True,False
223,273,24,5acd309b07355d001abf388a,یونیکوڈ,مارکیٹ میں ہزاروں فونٹ موجود ہیں ، لیکن ایک درجن سے بھی کم فونٹ - کبھی کبھی پین یونیکوڈ فونٹس کے طور پر بیان کیے جاتے ہیں - یونیکوڈ کے زیادہ تر کرداروں کی حمایت کرنے کی کوشش کرتے ہیں۔ اس کے بجائے ، یونیکوڈ پر مبنی فونٹ عام طور پر صرف بنیادی ASCII اور مخصوص اسکرپٹس یا حروف یا علامتوں کے سیٹ کی حمایت پر توجہ دیتے ہیں۔ کئی وجوہات اس نقطہ نظر کو جائز قرار دیتی ہیں: ••ایپلی کیشنز اور دستاویزات•• کو شاذ و نادر ہی ایک یا دو سے زیادہ تحریری نظاموں کے حروف کو پیش کرنے کی ضرورت ہوتی ہے۔ فونٹ کمپیوٹنگ ماحول میں وسائل کا مطالبہ کرتے ہیں۔ اور آپریٹنگ سسٹم اور ایپلی کیشنز ضرورت کے مطابق علیحدہ فونٹ فائلوں سے گلیف معلومات حاصل کرنے کے سلسلے میں بڑھتی ہوئی ذہانت کا مظاہرہ کرتے ہیں۔ مزید برآں ، دسیوں ہزاروں گلیفوں کے لئے رینڈرنگ ہدایات کا ایک مستقل سیٹ ڈیزائن کرنا ایک بہت بڑا کام ہے۔,عام طور پر ایک یا دو سے زیادہ لکھنے کے نظام کی ضرورت کیا ہے؟,True,False
224,273,24,5acd309b07355d001abf388b,یونیکوڈ,مارکیٹ میں ہزاروں فونٹ موجود ہیں ، لیکن ایک درجن سے بھی کم فونٹ - کبھی کبھی پین یونیکوڈ فونٹس کے طور پر بیان کیے جاتے ہیں - یونیکوڈ کے زیادہ تر کرداروں کی حمایت کرنے کی کوشش کرتے ہیں۔ اس کے بجائے ، یونیکوڈ پر مبنی فونٹ عام طور پر صرف بنیادی ASCII اور مخصوص اسکرپٹس یا حروف یا علامتوں کے سیٹ کی حمایت پر توجہ دیتے ہیں۔ کئی وجوہات اس نقطہ نظر کو جائز قرار دیتی ہیں: ایپلی کیشنز اور دستاویزات کو شاذ و نادر ہی ایک یا دو سے زیادہ تحریری نظاموں کے حروف کو پیش کرنے کی ضرورت ہوتی ہے۔ فونٹ کمپیوٹنگ ماحول میں وسائل کی طلب کرتے ہیں۔ اور آپریٹنگ سسٹم اور ایپلی کیشنز ضرورت کے مطابق علیحدہ فونٹ فائلوں سے گلیف معلومات حاصل کرنے کے سلسلے میں بڑھتی ہوئی ذہانت کا مظاہرہ کرتے ہیں۔ اس کے علاوہ ، دسیوں ہزاروں گلیفوں کے لئے رینڈرنگ ہدایات کا ایک مستقل سیٹ ڈیزائن کرنا ایک بہت بڑا کام ہے۔ ایسا منصوبہ زیادہ ٹائپ فیسوں کے لئے کم ہونے والی واپسی کا نقطہ گزر جاتا ہے۔,کمپیوٹنگ ماحول کے لئے ایک اور نام کیا ہے؟,True,True
225,273,25,572813b04b864d19001643e2,یونیکوڈ,نئی لائن کے لحاظ سے ، یونیکوڈ نے ••U+2028•• LINE SEPARATOR اور U+2029 PARAGRAPH SEPARATOR متعارف کرایا۔ یہ پیراگراف اور لائنوں کو معنوی طور پر انکوڈنگ کرنے کے لئے ایک یونیکوڈ حل فراہم کرنے کی کوشش تھی ، ممکنہ طور پر مختلف پلیٹ فارم کے تمام حلوں کی جگہ لے لیتی ہے۔ ایسا کرتے ہوئے ، یونیکوڈ تاریخی پلیٹ فارم پر منحصر حلوں کے ارد گرد ایک راستہ فراہم کرتا ہے۔ اس کے باوجود ، بہت کم اگر کوئی یونیکوڈ حل نے ان یونیکوڈ لائن اور پیراگراف علیحدگی کو واحد کیننیکل لائن اختتامی حروف کے طور پر اپنایا ہے۔ تاہم ، اس مسئلے کو حل کرنے کا ایک عام نقطہ نظر نیو لائن نارملائزیشن کے ذریعے ہے۔ یہ میک او ایس ایکس میں کوکو ٹیکسٹ سسٹم کے ساتھ اور ڈبلیو 3 سی ایکس ایم ایل اور ایچ ٹی ایم ایل سفارشات کے ساتھ بھی حاصل کیا جاتا ہے۔ اس نقطہ نظر میں ہر ممکنہ نیو لائن کردار کو اندرونی طور پر ایک عام نیو لائن میں تبدیل کیا جاتا ہے (جس سے کوئی فرق نہیں پڑتا ہے کیونکہ یہ متن کو رینڈر کرنے کے لئے ایک اندرونی آپریشن ہے۔ دوسرے الفاظ میں ، نظام اصل میں انکوڈنگ کے قطع نظر نیو لائن کردار کا علاج کرسکتا ہے۔,لائنوں کو الگ کرنے کے لئے کوڈ کیا ہے؟,False,False
226,273,25,572813b04b864d19001643e3,یونیکوڈ,نئی لائن کے لحاظ سے ، یونیکوڈ نے U+2028 LINE SEPARATOR اور ••U+2029•• PARAGRAPH SEPARATOR متعارف کرایا۔ یہ پیراگراف اور لائنوں کو سیمنٹک طور پر انکوڈنگ کرنے کے لئے ایک یونیکوڈ حل فراہم کرنے کی کوشش تھی ، ممکنہ طور پر مختلف پلیٹ فارم کے تمام حلوں کی جگہ لے لے۔ ایسا کرتے ہوئے ، یونیکوڈ تاریخی پلیٹ فارم پر منحصر حلوں کے ارد گرد ایک راستہ فراہم کرتا ہے۔ اس کے باوجود ، بہت کم اگر کوئی یونیکوڈ حل نے ان یونیکوڈ لائن اور پیراگراف علیحدگی کو واحد کیننیکل لائن اختتامی حروف کے طور پر اپنایا ہے۔ تاہم ، اس مسئلے کو حل کرنے کا ایک عام نقطہ نظر نیو لائن نارملائزیشن کے ذریعے ہے۔ یہ میک او ایس ایکس میں کوکو ٹیکسٹ سسٹم کے ساتھ اور ڈبلیو 3 سی ایکس ایم ایل اور ایچ ٹی ایم ایل کی سفارشات کے ساتھ بھی حاصل کیا جاتا ہے۔ اس نقطہ نظر میں ہر ممکنہ نیو لائن کردار کو اندرونی طور پر ایک عام نیو لائن میں تبدیل کیا جاتا ہے (جس سے کوئی فرق نہیں پڑتا ہے کیونکہ یہ متن کو رینڈر کرنے کے لئے ایک اندرونی آپریشن ہے۔ دوسرے الفاظ میں۔,پیراگرافوں کو الگ کرنے کا کوڈ کیا ہے؟,False,False
227,273,25,572813b04b864d19001643e4,یونیکوڈ,نئی لائن کے لحاظ سے ، یونیکوڈ نے U+2028 LINE SEPARATOR اور U+2029 PARAGRAPH SEPARATOR متعارف کرایا۔ یہ پیراگراف اور لائنوں کو معنوی طور پر انکوڈنگ کرنے کے لئے ایک یونیکوڈ حل فراہم کرنے کی کوشش تھی ، ممکنہ طور پر مختلف پلیٹ فارم کے تمام حلوں کی جگہ لے لیتی ہے۔ ایسا کرتے ہوئے ، یونیکوڈ تاریخی پلیٹ فارم پر منحصر حلوں کے ارد گرد ایک راستہ فراہم کرتا ہے۔ اس کے باوجود ، بہت کم اگر کوئی یونیکوڈ حل نے ان یونیکوڈ لائن اور پیراگراف علیحدگی کو واحد کیننیکل لائن اختتامی حروف کے طور پر اپنایا ہے۔ تاہم ، اس مسئلے کو حل کرنے کا ایک عام نقطہ نظر نیو لائن نارملائزیشن کے ذریعے ہے۔ یہ میک او ایس ایکس میں ••کوکاوا ٹیکسٹ سسٹم•• کے ساتھ اور ڈبلیو 3 سی ایکس ایم ایل اور ایچ ٹی ایم ایل سفارشات کے ساتھ بھی حاصل کیا جاتا ہے۔ اس نقطہ نظر میں ہر ممکنہ نیو لائن کردار کو اندرونی طور پر ایک عام نیو لائن میں تبدیل کیا جاتا ہے (جس سے کوئی فرق نہیں پڑتا ہے کیونکہ یہ رینڈرنگ کے لئے اندرونی آپریشن ہے۔ دوسرے الفاظ میں ، ٹیکسٹ سسٹم اصل میں انکوڈنگ کے قطع نظر صحیح طریقے سے نیو لائن کردار کا علاج کرسکتا ہے۔,میک او ایس ایکس میں نیو لائن نارملائزیشن کیسے حاصل کی جاتی ہے؟,False,False
228,273,25,572813b04b864d19001643e5,یونیکوڈ,نئی لائن کے لحاظ سے ، یونیکوڈ نے U+2028 LINE SEPARATOR اور U+2029 PARAGRAPH SEPARATOR متعارف کرایا۔ یہ پیراگراف اور لائنوں کو سمینٹک طور پر انکوڈنگ کرنے کے لئے ایک یونیکوڈ حل فراہم کرنے کی کوشش تھی ، ممکنہ طور پر مختلف پلیٹ فارم کے تمام حلوں کی جگہ لے لیتی ہے۔ ایسا کرتے ہوئے ، یونیکوڈ تاریخی پلیٹ فارم پر منحصر حلوں کے ارد گرد ایک راستہ فراہم کرتا ہے۔ اس کے باوجود ، بہت کم اگر کوئی یونیکوڈ حل نے ان یونیکوڈ لائن اور پیراگراف علیحدگی کو واحد کینیکل لائن اختتامی حروف کے طور پر اپنایا ہے۔ تاہم ، اس مسئلے کو حل کرنے کا ایک عام نقطہ نظر نیو لائن نارملائزیشن کے ذریعے ہے۔ یہ میک او ایس ایکس میں کوکو ٹیکسٹ سسٹم کے ساتھ اور ڈبلیو 3 سی ایکس ایم ایل اور ایچ ٹی ایم ایل کی سفارشات کے ساتھ بھی حاصل کیا جاتا ہے۔ اس نقطہ نظر میں ••ہر ممکنہ نیو لائن کردار کو اندرونی طور پر ایک عام نیو لائن میں تبدیل کیا جاتا ہے•• (جس سے کوئی فرق نہیں پڑتا ہے کیونکہ یہ رینڈرنگ کے لئے اندرونی آپریشن ہے۔ دوسرے الفاظ میں ، سسٹم اصل انکوڈنگ کے بغیر نئے متن کو صحیح طریقے سے علاج کرسکتا ہے۔,نیو لائن نارملائزیشن فارمیٹ کیسے کام کرتا ہے؟,False,False
229,273,25,5acd431a07355d001abf3af0,یونیکوڈ,نئی لائن کے لحاظ سے ، یونیکوڈ نے ••U+2028 LINE SEPARATOR اور U+2029 PARAGRAPH SEPARATOR•• متعارف کرایا۔ یہ پیراگراف اور لائنوں کو معنوی طور پر انکوڈنگ کرنے کے لئے ایک یونیکوڈ حل فراہم کرنے کی کوشش تھی ، ممکنہ طور پر مختلف پلیٹ فارم کے تمام حلوں کی جگہ لے لیتی ہے۔ ایسا کرتے ہوئے ، یونیکوڈ تاریخی پلیٹ فارم پر منحصر حلوں کے ارد گرد ایک راستہ فراہم کرتا ہے۔ اس کے باوجود ، بہت کم اگر کوئی یونیکوڈ حل نے ان یونیکوڈ لائن اور پیراگراف علیحدہ کاروں کو واحد کیننیکل لائن اختتامی حروف کے طور پر اپنایا ہے۔ تاہم ، اس مسئلے کو حل کرنے کا ایک عام نقطہ نظر نیو لائن نارملائزیشن کے ذریعے ہے۔ یہ میک او ایس ایکس میں کوکو ٹیکسٹ سسٹم کے ساتھ اور ڈبلیو 3 سی ایکس ایم ایل اور ایچ ٹی ایم ایل سفارشات کے ساتھ بھی حاصل کیا جاتا ہے۔ اس نقطہ نظر میں ہر ممکنہ نیو لائن کردار کو اندرونی طور پر ایک عام نیو لائن میں تبدیل کیا جاتا ہے (جس سے کوئی فرق نہیں پڑتا ہے کیونکہ یہ متن کو رینڈر کرنے کے لئے صرف ایک اندرونی آپریشن ہے۔ دوسرے الفاظ میں۔,یونیکوڈ نے کون سا وسیع پیمانے پر اپنایا ہوا حل فراہم کیا؟,True,False
230,273,25,5acd431a07355d001abf3af1,یونیکوڈ,نئی لائن کے لحاظ سے ، یونیکوڈ نے U+2028 LINE SEPARATOR اور U+2029 PARAGRAPH SEPARATOR متعارف کرایا۔ یہ پیراگراف اور لائنوں کو سمینٹک طور پر انکوڈنگ کرنے کے لئے ایک یونیکوڈ حل فراہم کرنے کی کوشش تھی ، ممکنہ طور پر مختلف پلیٹ فارم کے تمام حلوں کی جگہ لے لیتی ہے۔ ایسا کرتے ہوئے ، یونیکوڈ تاریخی پلیٹ فارم پر منحصر حلوں کے ارد گرد ایک راستہ فراہم کرتا ہے۔ اس کے باوجود ، بہت کم اگر کوئی یونیکوڈ حل نے ان یونیکوڈ لائن اور پیراگراف علیحدگی کو واحد کینیکل لائن اختتامی حروف کے طور پر اپنایا ہے۔ تاہم ، اس مسئلے کو حل کرنے کا ایک عام نقطہ نظر نیو لائن نارملائزیشن کے ذریعے ہے۔ یہ ••میک او ایس ایکس•• میں کوکو ٹیکسٹ سسٹم کے ساتھ اور ڈبلیو 3 سی ایکس ایم ایل اور ایچ ٹی ایم ایل سفارشات کے ساتھ بھی حاصل کیا جاتا ہے۔ اس نقطہ نظر میں ہر ممکنہ نیو لائن کردار کو اندرونی طور پر ایک عام نیو لائن میں تبدیل کیا جاتا ہے (جس سے کوئی فرق نہیں پڑتا ہے کیونکہ یہ متن کو رینڈر کرنے کے لئے ایک اندرونی آپریشن ہے۔ دوسرے الفاظ میں ، سسٹم اصل انکوڈنگ سے قطع نظر نیو لائن کو صحیح طریقے سے علاج کرسکتا ہے۔,ایچ ٹی ایم ایل سفارشات کا استعمال کیا کرتا ہے؟,True,False
231,273,25,5acd431a07355d001abf3af2,یونیکوڈ,نئی لائن کے لحاظ سے ، یونیکوڈ نے U+2028 LINE SEPARATOR اور U+2029 PARAGRAPH SEPARATOR متعارف کرایا۔ یہ پیراگراف اور لائنوں کو سمینٹک طور پر انکوڈنگ کرنے کے لئے ایک یونیکوڈ حل فراہم کرنے کی کوشش تھی ، ممکنہ طور پر مختلف پلیٹ فارم کے تمام حلوں کی جگہ لے لیتی ہے۔ ایسا کرتے ہوئے ، یونیکوڈ تاریخی پلیٹ فارم پر منحصر حلوں کے ارد گرد ایک راستہ فراہم کرتا ہے۔ اس کے باوجود ، بہت کم اگر کوئی یونیکوڈ حل نے ان یونیکوڈ لائن اور پیراگراف علیحدگی کو واحد کیننیکل لائن اختتامی حروف کے طور پر اپنایا ہے۔ تاہم ، اس مسئلے کو حل کرنے کا ایک عام نقطہ نظر نیو لائن نارملائزیشن کے ذریعے ہے۔ یہ میک او ایس ایکس میں کوکو ٹیکسٹ سسٹم کے ساتھ اور ڈبلیو 3 سی ایکس ایم ایل اور ایچ ٹی ایم ایل سفارشات کے ساتھ بھی حاصل کیا جاتا ہے۔ اس نقطہ نظر میں ہر ممکنہ نیو لائن کردار کو اندرونی طور پر ایک عام نیو لائن میں تبدیل کیا جاتا ہے (جس سے کوئی فرق نہیں پڑتا ہے کیونکہ ••یہ متن کو رینڈر کرنے کے لئے صرف ایک اندرونی آپریشن ہے۔•• دوسرے الفاظ میں ، نظام نئے لائن کو صحیح طریقے سے علاج کرسکتا ہے۔,اس سے کیا فرق پڑتا ہے کہ کون سا نیا لائن کردار منتخب کیا جاتا ہے؟,True,False
232,273,25,5acd431a07355d001abf3af3,یونیکوڈ,نئی لائن کے لحاظ سے ، یونیکوڈ نے U+2028 LINE SEPARATOR اور U+2029 PARAGRAPH SEPARATOR متعارف کرایا۔ یہ پیراگراف اور لائنوں کو سمینٹک طور پر انکوڈنگ کرنے کے لئے ایک یونیکوڈ حل فراہم کرنے کی کوشش تھی ، ممکنہ طور پر مختلف پلیٹ فارم کے تمام حلوں کی جگہ لے لیتی ہے۔ ایسا کرتے ہوئے ، یونیکوڈ تاریخی پلیٹ فارم پر منحصر حلوں کے ارد گرد ایک راستہ فراہم کرتا ہے۔ اس کے باوجود ، بہت کم اگر کوئی یونیکوڈ حل نے ان یونیکوڈ لائن اور پیراگراف علیحدگی کو واحد کینیکل لائن اختتامی حروف کے طور پر اپنایا ہے۔ تاہم ، اس مسئلے کو حل کرنے کا ایک عام نقطہ نظر نیو لائن نارملائزیشن کے ذریعے ہے۔ یہ میک او ایس ایکس میں کوکو ٹیکسٹ سسٹم کے ساتھ اور ••ڈبلیو 3 سی ایکس ایم ایل•• اور ایچ ٹی ایم ایل سفارشات کے ساتھ بھی حاصل کیا جاتا ہے۔ اس نقطہ نظر میں ہر ممکنہ نیو لائن کردار کو اندرونی طور پر ایک عام نیو لائن میں تبدیل کیا جاتا ہے (جس سے کوئی فرق نہیں پڑتا ہے کیونکہ یہ متن کو رینڈر کرنے کے لئے ایک اندرونی آپریشن ہے۔ دوسرے الفاظ میں۔,کوکو ٹیکسٹ سسٹم کا نام کیا ہے؟,True,False
233,273,25,5acd431a07355d001abf3af4,یونیکوڈ,نئی لائن کے لحاظ سے ، یونیکوڈ نے U+2028 LINE SEPARATOR اور U+2029 PARAGRAPH SEPARATOR متعارف کرایا۔ یہ پیراگراف اور لائنوں کو سمینٹک طور پر انکوڈنگ کرنے کے لئے ایک یونیکوڈ حل فراہم کرنے کی کوشش تھی ، ممکنہ طور پر مختلف پلیٹ فارم کے تمام حلوں کی جگہ لے لیتی ہے۔ ایسا کرتے ہوئے ، یونیکوڈ تاریخی پلیٹ فارم پر منحصر حلوں کے ارد گرد ایک راستہ فراہم کرتا ہے۔ اس کے باوجود ، بہت کم اگر کوئی یونیکوڈ حل نے ان یونیکوڈ لائن اور پیراگراف علیحدگی کو واحد کیننیکل لائن اختتامی حروف کے طور پر اپنایا ہے۔ تاہم ، اس مسئلے کو حل کرنے کا ایک عام نقطہ نظر نیو لائن نارملائزیشن کے ذریعے ہے۔ یہ میک او ایس ایکس میں کوکو ٹیکسٹ سسٹم کے ساتھ اور ڈبلیو 3 سی ایکس ایم ایل اور ایچ ٹی ایم ایل کی سفارشات کے ساتھ بھی حاصل کیا جاتا ہے۔ اس نقطہ نظر میں ••ہر ممکنہ نیو لائن کردار•• کو اندرونی طور پر ایک عام نیو لائن میں تبدیل کیا جاتا ہے (جس سے کوئی فرق نہیں پڑتا ہے کیونکہ یہ رینڈرنگ کے لئے اندرونی آپریشن ہے۔ دوسرے الفاظ میں ، ٹیکسٹ سسٹم اصل میں انکوڈنگ سے قطع نظر صحیح طریقے سے نیو لائن کردار کا علاج کرسکتا ہے۔,عام نئی لائنیں کس میں تبدیل کی جاتی ہیں؟,True,False
234,273,26,572814a54b864d190016440e,یونیکوڈ,"یونیکوڈ پر تنقید کی گئی ہے کہ وہ کانجی کی پرانی اور متبادل شکلوں کو الگ الگ انکوڈ کرنے میں ناکام رہا ہے ، جس کے بارے میں نقادوں کا کہنا ہے کہ ، ""قدیم جاپانی اور غیر معمولی جاپانی ناموں کی پروسیسنگ کو پیچیدہ کرتا ہے۔ یہ اکثر اس حقیقت کی وجہ سے ہوتا ہے کہ یونیکوڈ گلیفوں کے بجائے حروف کو انکوڈ کرتا ہے (بنیادی کردار کی بصری نمائندگی جو اکثر ایک زبان سے دوسری زبان میں مختلف ہوتی ہے) ۔ گلیفوں کا اتحاد اس تاثر کی طرف جاتا ہے کہ زبانیں خود ، نہ صرف بنیادی کردار کی نمائندگی ، ضم کی جارہی ہیں۔ [ وضاحت کی ضرورت ہے ] یونیکوڈ کی ہان اتحاد کی پالیسی کی مخالفت میں چینی ، جاپانی اور کوریائی حروف کے مابین طرز کے اختلافات کو برقرار رکھنے والے متبادل انکوڈنگ بنانے کی کئی کوششیں کی گئی ہیں۔ ایک مثال TRON ہے (اگرچہ یہ جاپان میں وسیع پیمانے پر قبول نہیں کیا جاتا ہے ، کچھ صارفین کو تاریخی جاپانی متن کو سنبھالنے کی ضرورت ہے اور اس کی حمایت کرتے ہیں۔",یونیکوڈ پر تنقید کیوں کی گئی ہے کہ اس میں کانجی کی شکلوں کو الگ سے کوڈ نہیں کیا گیا ہے؟,False,True
235,273,26,572814a54b864d190016440f,یونیکوڈ,یونیکوڈ پر تنقید کی گئی ہے کہ وہ کانجی کی پرانی اور متبادل شکلوں کو الگ الگ انکوڈ کرنے میں ناکام رہا ہے ، جس کے بارے میں نقادوں کا کہنا ہے کہ یہ قدیم جاپانی اور غیر معمولی جاپانی ناموں کی پروسیسنگ کو پیچیدہ کرتا ہے۔ یہ اکثر اس حقیقت کی وجہ سے ہوتا ہے کہ یونیکوڈ گلیفوں کے بجائے حروف کو انکوڈ کرتا ہے (بنیادی کردار کی بصری نمائندگی جو اکثر ایک زبان سے دوسری زبان میں مختلف ہوتی ہے) ۔ گلیفوں کا اتحاد اس تاثر کی طرف جاتا ہے کہ خود زبانیں ، نہ صرف بنیادی کردار کی نمائندگی ، ضم کی جارہی ہیں۔ یونیکوڈ کی ہان اتحاد کی پالیسی کی مخالفت میں ••چینی ، جاپانی اور کورین حروف کے مابین طرز کے اختلافات کو برقرار رکھنے والے متبادل انکوڈنگز•• بنانے کی کئی کوششیں کی گئی ہیں۔ اس کی ایک مثال TRON ہے (اگرچہ یہ جاپان میں وسیع پیمانے پر قبول نہیں کیا گیا ہے ، کچھ صارفین کو تاریخی جاپانی متن کو سنبھالنے کی ضرورت ہے اور اس کی حمایت کرتے ہیں۔,ٹرون کیا ہے؟,False,False
236,273,26,572814a54b864d1900164410,یونیکوڈ,یونیکوڈ پر تنقید کی گئی ہے کہ وہ کانجی کی پرانی اور متبادل شکلوں کو الگ الگ انکوڈ کرنے میں ناکام رہا ہے ، جس کے بارے میں نقادوں کا کہنا ہے کہ یہ قدیم جاپانی اور غیر معمولی جاپانی ناموں کی پروسیسنگ کو پیچیدہ کرتا ہے۔ یہ اکثر اس حقیقت کی وجہ سے ہوتا ہے کہ یونیکوڈ گلیفوں کے بجائے حروف کو انکوڈ کرتا ہے (بنیادی کردار کی بصری نمائندگی جو اکثر ایک زبان سے دوسری زبان میں مختلف ہوتی ہے) ۔ گلیفوں کا اتحاد اس تاثر کی طرف جاتا ہے کہ ••زبانیں خود ، نہ صرف بنیادی کردار کی نمائندگی ، ضم کی جارہی ہیں۔•• وضاحت کی ضرورت ہے۔ یونیکوڈ کی ہان اتحاد کی پالیسی کی مخالفت میں چینی ، جاپانی اور کوریائی حروف کے مابین طرز کے اختلافات کو برقرار رکھنے والے متبادل انکوڈنگ بنانے کی کئی کوششیں کی گئی ہیں۔ ایک مثال TRON ہے (اگرچہ یہ جاپان میں وسیع پیمانے پر قبول نہیں کیا گیا ہے ، کچھ صارفین کو تاریخی جاپانی متن کو سنبھالنے کی ضرورت ہے۔,گلیفوں کے اتحاد سے کیا تاثر پیدا ہوتا ہے؟,False,False
237,273,26,5acd478d07355d001abf3bf8,یونیکوڈ,یونیکوڈ پر تنقید کی گئی ہے کہ وہ کانجی کی پرانی اور متبادل شکلوں کو الگ الگ انکوڈ کرنے میں ناکام رہا ہے ، جس کے بارے میں نقادوں کا کہنا ہے کہ یہ قدیم جاپانی اور غیر معمولی جاپانی ناموں کی پروسیسنگ کو پیچیدہ کرتا ہے۔ یہ اکثر اس حقیقت کی وجہ سے ہوتا ہے کہ یونیکوڈ ••گلیف•• کے بجائے حروف کو انکوڈ کرتا ہے (بنیادی کردار کی بصری نمائندگی جو اکثر ایک زبان سے دوسری زبان میں مختلف ہوتی ہے) ۔ گلیفوں کا اتحاد اس تاثر کی طرف جاتا ہے کہ زبانیں خود ، نہ صرف بنیادی کردار کی نمائندگی ، ضم کی جارہی ہیں۔ [ وضاحت کی ضرورت ہے ] یونیکوڈ کی ہان اتحاد کی پالیسی کی مخالفت میں چینی ، جاپانی اور کوریائی حروف کے مابین اسٹائلسٹک اختلافات کو برقرار رکھنے والے متبادل انکوڈنگ بنانے کی کئی کوششیں کی گئی ہیں۔ ایک مثال TRON ہے (اگرچہ یہ جاپان میں وسیع پیمانے پر قبول نہیں کیا جاتا ہے ، کچھ صارفین کو تاریخی جاپانی متن کو سنبھالنے کی ضرورت ہے۔,یونیکوڈ حروف کے بجائے کیا انکوڈ کرتا ہے؟,True,False
238,273,26,5acd478d07355d001abf3bf9,یونیکوڈ,یونیکوڈ کو تنقید کا نشانہ بنایا گیا ہے کہ وہ کانجی کی پرانی اور متبادل شکلوں کو الگ الگ انکوڈ کرنے میں ناکام رہا ہے ، جو ، ناقدین کا استدلال ہے ، قدیم جاپانی اور غیر معمولی جاپانی ناموں کی پروسیسنگ کو پیچیدہ کرتا ہے۔ یہ اکثر اس حقیقت کی وجہ سے ہوتا ہے کہ یونیکوڈ گلیفوں کے بجائے حروف کو انکوڈ کرتا ہے (••بنیادی کردار کی بصری نمائندگی جو اکثر ایک زبان سے دوسری زبان میں مختلف ہوتی ہے••) ۔ گلیفوں کا اتحاد اس تاثر کی طرف جاتا ہے کہ زبانیں خود ، نہ صرف بنیادی کردار کی نمائندگی ، ضم کی جارہی ہیں۔ [ وضاحت کی ضرورت ہے ] یونیکوڈ کی ہان اتحاد کی پالیسی کی مخالفت میں چینی ، جاپانی اور کوریائی حروف کے مابین طرز کے اختلافات کو برقرار رکھنے والے متبادل انکوڈنگ بنانے کی کئی کوششیں کی گئی ہیں۔ ایک مثال TRON ہے (اگرچہ یہ جاپان میں وسیع پیمانے پر اپنایا نہیں گیا ہے ، کچھ صارفین کو اسے سنبھالنے کی ضرورت ہے۔),کرداروں کی تعریف کس طرح کی جاتی ہے؟,True,False
239,273,26,5acd478d07355d001abf3bfa,یونیکوڈ,یونیکوڈ پر تنقید کی گئی ہے کہ وہ کانجی کی پرانی اور متبادل شکلوں کو الگ الگ انکوڈ کرنے میں ناکام رہا ہے ، جس کے بارے میں نقادوں کا کہنا ہے کہ یہ قدیم جاپانی اور غیر معمولی جاپانی ناموں کی پروسیسنگ کو پیچیدہ کرتا ہے۔ یہ اکثر اس حقیقت کی وجہ سے ہوتا ہے کہ یونیکوڈ گلیفوں کے بجائے حروف کو انکوڈ کرتا ہے (بنیادی کردار کی بصری نمائندگی جو اکثر ایک زبان سے دوسری زبان میں مختلف ہوتی ہے) ۔ گلیفوں کا اتحاد اس تاثر کی طرف جاتا ہے کہ زبان خود ، نہ صرف بنیادی کردار کی نمائندگی ، ضم کی جارہی ہے۔ چینی ، جاپانی اور کوریائی حروف کے مابین طرز کے اختلافات کو برقرار رکھنے کے لئے متبادل انکوڈنگ بنانے کی کئی کوششیں کی گئی ہیں۔ یونیکوڈ کی ہان اتحاد کی پالیسی کی مخالفت میں۔ ایک مثال ••ٹرون•• ہے (اگرچہ یہ جاپان میں وسیع پیمانے پر قبول نہیں کیا گیا ہے ، کچھ صارفین کو تاریخی جاپانی متن کو سنبھالنے کی ضرورت ہے اور اس کی حمایت کرتے ہیں۔,جاپان میں کون سا متبادل مقبول ہو گیا ہے؟,True,False
240,273,26,5acd478d07355d001abf3bfb,یونیکوڈ,یونیکوڈ پر تنقید کی گئی ہے کہ وہ کانجی کی پرانی اور متبادل شکلوں کو علیحدہ علیحدہ انکوڈ کرنے میں ناکام رہا ہے ، جو ، ناقدین کا استدلال ہے ، قدیم جاپانی اور غیر معمولی جاپانی ناموں کی پروسیسنگ کو پیچیدہ کرتا ہے۔ یہ اکثر اس حقیقت کی وجہ سے ہوتا ہے کہ یونیکوڈ گلیفوں کے بجائے حروف کو انکوڈ کرتا ہے (بنیادی کردار کی بصری نمائندگی جو اکثر ایک زبان سے دوسری زبان میں مختلف ہوتی ہے) ۔ گلیفوں کا اتحاد اس تاثر کی طرف جاتا ہے کہ زبان خود ، نہ صرف بنیادی کردار کی نمائندگی ، ضم کی جارہی ہے۔ یونیکوڈ کی ہان اتحاد کی پالیسی کی مخالفت میں ••چینی ، جاپانی اور کورین•• حروف کے مابین طرز کے اختلافات کو برقرار رکھنے والے متبادل انکوڈنگ بنانے کی کئی کوششیں کی گئی ہیں۔ ایک مثال TRON ہے (اگرچہ یہ جاپان میں وسیع پیمانے پر قبول نہیں کیا جاتا ہے ، کچھ صارفین کو تاریخی جاپانی متن کو سنبھالنے کی ضرورت ہے اور اس کی حمایت کرتے ہیں۔,کون سی زبانیں گلیفوں کے اتحاد سے متاثر نہیں ہوتی ہیں؟,True,False
241,273,26,5acd478d07355d001abf3bfc,یونیکوڈ,یونیکوڈ کو تنقید کا نشانہ بنایا گیا ہے کہ وہ کانجی کی پرانی اور متبادل شکلوں کو الگ الگ انکوڈ کرنے میں ناکام رہا ہے ، جو ، ناقدین کا کہنا ہے کہ ، قدیم جاپانی اور غیر معمولی جاپانی ناموں کی پروسیسنگ کو پیچیدہ کرتا ہے۔ یہ اکثر اس حقیقت کی وجہ سے ہوتا ہے کہ یونیکوڈ گلیفوں کے بجائے حروف کو انکوڈ کرتا ہے (بنیادی کردار کی بصری نمائندگی جو اکثر ایک زبان سے دوسری زبان میں مختلف ہوتی ہے) ۔ گلیفوں کا اتحاد اس تاثر کی طرف جاتا ہے کہ ••زبانیں خود•• ، نہ صرف بنیادی کردار کی نمائندگی ، ضم کی جارہی ہیں۔ [ وضاحت کی ضرورت ہے ] یونیکوڈ کی ہان اتحاد کی پالیسی کی مخالفت میں چینی ، جاپانی اور کوریائی حروف کے مابین طرز کے اختلافات کو برقرار رکھنے والے متبادل انکوڈنگ بنانے کی کئی کوششیں کی گئی ہیں۔ ایک مثال TRON ہے (اگرچہ یہ جاپان میں وسیع پیمانے پر قبول نہیں کیا گیا ہے ، کچھ صارفین کو تاریخی جاپانی متن کو سنبھالنے کی ضرورت ہے۔,صرف glyphs کے ساتھ مل کر کیا ملایا جا رہا ہے؟,True,False
242,273,27,572815a04b864d190016443a,یونیکوڈ,جدید فونٹ ٹکنالوجی یونیکوڈ تغیرات کے تسلسل کی شکل میں ، متبادل گلیف نمائندگیوں کے مجموعہ کے لحاظ سے ایک متحد ہان کردار کی تصویر کشی کرنے کی ضرورت کے عملی مسئلے کو حل کرنے کا ایک ذریعہ فراہم کرتی ہے۔ مثال کے طور پر ، اوپن ٹائپ کی ••اعلی درجے کی ٹائپوگرافک•• میزیں کردار کو گلیف میپنگ کے عمل کو انجام دیتے وقت متعدد متبادل گلیف نمائندگیوں میں سے ایک کو منتخب کرنے کی اجازت دیتی ہیں۔ اس معاملے میں ، معلومات کو سادہ متن کے اندر فراہم کیا جاسکتا ہے تاکہ یہ نامزد کیا جاسکے کہ کون سا متبادل کردار فارم منتخب کرنا ہے۔,اوپن ٹائپ کی کون سی میزیں متبادل گلیف نمائندگیوں کے انتخاب کی اجازت دیتی ہیں؟,False,False
243,273,27,572815a04b864d190016443b,یونیکوڈ,جدید فونٹ ٹکنالوجی یونیکوڈ تغیرات کے تسلسل کی شکل میں ، متبادل گلیف نمائندگیوں کے مجموعہ کے لحاظ سے ایک متحد ہان کردار کی تصویر کشی کرنے کی ضرورت کے عملی مسئلے کو حل کرنے کا ایک ذریعہ فراہم کرتی ہے۔ مثال کے طور پر ، اوپن ٹائپ کی ایڈوانسڈ ٹائپوگرافک ٹیبلز کردار کو گلیف میپنگ کے عمل کو انجام دیتے وقت متعدد متبادل گلیف نمائندگیوں میں سے ایک کو منتخب کرنے کی اجازت دیتی ہیں۔ اس معاملے میں ، معلومات کو ••عام متن•• کے اندر فراہم کیا جاسکتا ہے تاکہ یہ نامزد کیا جاسکے کہ کون سا متبادل کردار فارم منتخب کرنا ہے۔,کہاں سے معلومات فراہم کی جاتی ہے کہ کون سا کردار فارم منتخب کرنا ہے؟,False,False
244,273,27,572815a04b864d190016443c,یونیکوڈ,جدید فونٹ ٹکنالوجی ••یونیکوڈ تغیرات تسلسل•• کی شکل میں متبادل گلیف نمائندگیوں کے مجموعہ کے لحاظ سے متحد ہان کردار کی نمائندگی کرنے کی ضرورت کے عملی مسئلے کو حل کرنے کا ایک ذریعہ فراہم کرتی ہے۔ مثال کے طور پر ، اوپن ٹائپ کی ایڈوانسڈ ٹائپوگرافک ٹیبلز کردار سے گلیف میپنگ کے عمل کو انجام دیتے وقت متعدد متبادل گلیف نمائندگیوں میں سے ایک کو منتخب کرنے کی اجازت دیتی ہیں۔ اس معاملے میں ، معلومات کو سادہ متن کے اندر فراہم کیا جاسکتا ہے تاکہ یہ نامزد کیا جاسکے کہ کون سا متبادل کردار فارم منتخب کرنا ہے۔,جدید فونٹ ٹیکنالوجی ایک ہان کردار کو متبادل گلیف نمائندگیوں میں پیش کرنے کے مسئلے کو کس طرح حل کرتی ہے؟,False,False
245,273,27,5acd4aa407355d001abf3c28,یونیکوڈ,••جدید فونٹ ٹکنالوجی•• یونیکوڈ تغیرات کے تسلسل کی شکل میں ، متبادل گلیف نمائندگیوں کے مجموعہ کے لحاظ سے ایک متحد ہان کردار کی تصویر کشی کرنے کی ضرورت کے عملی مسئلے کو حل کرنے کا ایک ذریعہ فراہم کرتا ہے۔ مثال کے طور پر ، اوپن ٹائپ کی ایڈوانسڈ ٹائپوگرافک ٹیبلز کردار کو گلیف میپنگ کے عمل کو انجام دیتے وقت متعدد متبادل گلیف نمائندگیوں میں سے ایک کو منتخب کرنے کی اجازت دیتی ہیں۔ اس معاملے میں ، معلومات کو سادہ متن کے اندر فراہم کیا جاسکتا ہے تاکہ یہ نامزد کیا جاسکے کہ کون سا متبادل کردار فارم منتخب کرنا ہے۔,اتحاد کے عملی پہلوؤں کو کس چیز نے خراب کیا ہے؟,True,False
246,273,27,5acd4aa407355d001abf3c29,یونیکوڈ,جدید فونٹ ٹکنالوجی یونیکوڈ تغیرات کے تسلسل کی شکل میں ، متبادل گلیف نمائندگیوں کے مجموعہ کے لحاظ سے ایک متحد ہان کردار کی تصویر کشی کرنے کی ضرورت کے عملی مسئلے کو حل کرنے کا ایک ذریعہ فراہم کرتی ہے۔ مثال کے طور پر ، اوپن ٹائپ کی ••اعلی درجے کی ٹائپوگرافک میزیں•• کردار کو گلیف میپنگ کے عمل کو انجام دیتے وقت متعدد متبادل گلیف نمائندگیوں میں سے ایک کو منتخب کرنے کی اجازت دیتی ہیں۔ اس معاملے میں ، معلومات کو سادہ متن کے اندر فراہم کیا جاسکتا ہے تاکہ یہ طے کیا جاسکے کہ کون سا متبادل کردار فارم منتخب کرنا ہے۔,اوپن ٹائپ کو متبادل گلیف رکھنے سے کیا روکتا ہے؟,True,False
247,273,27,5acd4aa407355d001abf3c2a,یونیکوڈ,جدید فونٹ ٹکنالوجی یونیکوڈ تغیرات کے تسلسل کی شکل میں ، متبادل گلیف نمائندگیوں کے مجموعہ کے لحاظ سے ایک متحد ہان کردار کی تصویر کشی کرنے کی ضرورت کے عملی مسئلے کو حل کرنے کا ایک ذریعہ فراہم کرتی ہے۔ مثال کے طور پر ، اوپن ٹائپ کی ایڈوانسڈ ٹائپوگرافک ٹیبلز کردار کو گلیف میپنگ کے عمل کو انجام دیتے وقت متعدد متبادل گلیف نمائندگیوں میں سے ایک کو منتخب کرنے کی اجازت دیتی ہیں۔ اس معاملے میں ، معلومات کو ••عام متن•• کے اندر فراہم کیا جاسکتا ہے تاکہ یہ نامزد کیا جاسکے کہ کون سا متبادل کردار فارم منتخب کرنا ہے۔,کون سا متبادل کردار منتخب کرنا ہے اس کا تعین کیا کرتا ہے؟,True,False
248,273,28,57281627ff5b5019007d9cd4,یونیکوڈ,یونیکوڈ کو کسی بھی ••پہلے سے موجود کردار انکوڈنگز•• میں اور اس سے کوڈ پوائنٹ بذریعہ کوڈ پوائنٹ راؤنڈ ٹرپ فارمیٹ تبادلوں کو فراہم کرنے کے لئے ڈیزائن کیا گیا تھا ، تاکہ پرانے کردار سیٹوں میں ٹیکسٹ فائلوں کو سادگی سے یونیکوڈ میں تبدیل کیا جاسکے ، اور پھر واپس اور اسی فائل کو واپس حاصل کیا جاسکے۔ اس کا مطلب یہ ہے کہ متضاد ورثہ فن تعمیرات ، جیسے ڈیاکریٹک اور پہلے سے تشکیل شدہ کرداروں کو جوڑنا ، دونوں یونیکوڈ میں موجود ہیں ، جس سے کچھ متن کی نمائندگی کرنے کا ایک سے زیادہ طریقہ ملتا ہے۔ یہ کوریائی ہنگول کے لئے تین مختلف انکوڈنگ فارموں میں سب سے زیادہ واضح ہے۔ ورژن 3.0 کے بعد سے ، کوئی بھی پہلے سے تشکیل شدہ کردار جو پہلے سے موجود کرداروں کے مجموعہ کے تسلسل کے ذریعہ نمائندگی کیا جاسکتا ہے اب یونیکوڈ کے مختلف ورژن استعمال کرنے والے سافٹ ویئر کے مابین باہمی تعاون کو برقرار رکھنے کے لئے شامل نہیں کیا جاسکتا ہے۔,یونیکوڈ ایک راؤنڈ ٹرپ فارمیٹ تبادلوں کے لئے ڈیزائن کیا گیا تھا اور کیا سے؟,False,False
249,273,28,57281627ff5b5019007d9cd5,یونیکوڈ,یونیکوڈ کو کوڈ پوائنٹ بذریعہ کوڈ پوائنٹ راؤنڈ ٹرپ فارمیٹ تبادلوں کو کسی بھی پہلے سے موجود کردار انکوڈنگ سے اور اس سے فراہم کرنے کے لئے ڈیزائن کیا گیا تھا ، تاکہ پرانے کردار سیٹوں میں ٹیکسٹ فائلوں کو سادگی سے یونیکوڈ میں تبدیل کیا جاسکے ، اور پھر واپس اور اسی فائل کو واپس حاصل کیا جاسکے۔ اس کا مطلب یہ ہے کہ متضاد ورثہ فن تعمیرات ، جیسے ڈیاکریٹک اور پہلے سے تشکیل شدہ کرداروں کو جوڑنا ، دونوں یونیکوڈ میں موجود ہیں ، جس سے کچھ متن کی نمائندگی کا ایک سے زیادہ طریقہ ملتا ہے۔ یہ کوریائی ہنگول کے لئے ••تین مختلف انکوڈنگ فارم•• میں سب سے زیادہ واضح ہے۔ ورژن 3.0 کے بعد سے ، کوئی بھی پہلے سے تشکیل شدہ کردار جو پہلے سے موجود کرداروں کے مجموعہ کے تسلسل کے ذریعہ نمائندگی کیا جاسکتا ہے اب یونیکوڈ کے مختلف ورژن استعمال کرنے والے سافٹ ویئر کے مابین باہمی تعاون کو برقرار رکھنے کے لئے شامل نہیں کیا جاسکتا ہے۔,کوریائی ہنگول کے لئے کتنے انکوڈنگ فارم ہیں؟,False,False
250,273,28,57281627ff5b5019007d9cd6,یونیکوڈ,یونیکوڈ کو کوڈ پوائنٹ بذریعہ کوڈ پوائنٹ راؤنڈ ٹرپ فارمیٹ تبادلوں کو کسی بھی پہلے سے موجود کردار انکوڈنگ سے اور اس سے فراہم کرنے کے لئے ڈیزائن کیا گیا تھا ، تاکہ پرانے کردار سیٹوں میں ٹیکسٹ فائلوں کو سادگی سے یونیکوڈ میں تبدیل کیا جاسکے ، اور پھر واپس اور اسی فائل کو واپس حاصل کیا جاسکے۔ اس کا مطلب یہ ہے کہ متضاد ورثہ فن تعمیرات ، جیسے ڈیاکریٹک اور پہلے سے تشکیل شدہ کرداروں کو جوڑنا ، دونوں یونیکوڈ میں موجود ہیں ، جس سے کچھ متن کی نمائندگی کا ایک سے زیادہ طریقہ ملتا ہے۔ یہ کوریائی ہنگول کے لئے تین مختلف انکوڈنگ فارموں میں سب سے زیادہ واضح ہے۔ ••ورژن 3.0•• کے بعد سے ، کوئی بھی پہلے سے تشکیل شدہ کردار جو پہلے سے موجود کرداروں کے مجموعہ کے تسلسل کے ذریعہ نمائندگی کیا جاسکتا ہے اب یونیکوڈ کے مختلف ورژن استعمال کرنے والے سافٹ ویئر کے مابین باہمی تعاون کو برقرار رکھنے کے لئے شامل نہیں کیا جاسکتا ہے۔,کس ورژن کے بعد سے پہلے سے موجود حروف اب معیاری میں شامل نہیں کیا جا سکتا ہے؟,False,False
251,273,28,5acd55da07355d001abf3d98,یونیکوڈ,یونیکوڈ کو کسی بھی ••پہلے سے موجود کردار انکوڈنگز•• میں اور اس سے کوڈ پوائنٹ بذریعہ کوڈ پوائنٹ راؤنڈ ٹرپ فارمیٹ تبادلوں کو فراہم کرنے کے لئے ڈیزائن کیا گیا تھا ، تاکہ پرانے کردار سیٹوں میں ٹیکسٹ فائلوں کو سادگی سے یونیکوڈ میں تبدیل کیا جاسکے ، اور پھر واپس اور اسی فائل کو واپس حاصل کیا جاسکے۔ اس کا مطلب یہ ہے کہ متضاد ورثہ فن تعمیرات ، جیسے ڈیاکریٹک اور پہلے سے تشکیل شدہ کرداروں کو جوڑنا ، دونوں یونیکوڈ میں موجود ہیں ، جس سے کچھ متن کی نمائندگی کرنے کا ایک سے زیادہ طریقہ ملتا ہے۔ یہ کوریائی ہنگول کے لئے تین مختلف انکوڈنگ فارموں میں سب سے زیادہ واضح ہے۔ ورژن 3.0 کے بعد سے ، کوئی بھی پہلے سے تشکیل شدہ کردار جو پہلے سے موجود کرداروں کے مجموعہ کے تسلسل کے ذریعہ نمائندگی کیا جاسکتا ہے اب یونیکوڈ کے مختلف ورژن استعمال کرنے والے سافٹ ویئر کے مابین باہمی تعاون کو برقرار رکھنے کے لئے شامل نہیں کیا جاسکتا ہے۔,یونیکوڈ کو کیا میں تبدیل کیا جاتا ہے؟,True,False
252,273,28,5acd55da07355d001abf3d99,یونیکوڈ,یونیکوڈ کو کوڈ پوائنٹ بذریعہ کوڈ پوائنٹ راؤنڈ ٹرپ فارمیٹ تبادلوں کو کسی بھی پہلے سے موجود کردار انکوڈنگ سے اور اس سے فراہم کرنے کے لئے ڈیزائن کیا گیا تھا ، تاکہ پرانے کردار سیٹوں میں ٹیکسٹ فائلوں کو سادگی سے یونیکوڈ میں تبدیل کیا جاسکے ، اور پھر واپس اور اسی فائل کو واپس حاصل کیا جاسکے۔ اس کا مطلب یہ ہے کہ متضاد ورثہ فن تعمیرات ، جیسے ڈیاکریٹک اور پہلے سے تشکیل شدہ کرداروں کو جوڑنا ، دونوں یونیکوڈ میں موجود ہیں ، جس سے کچھ متن کی نمائندگی کا ایک سے زیادہ طریقہ ملتا ہے۔ یہ کوریائی ہنگول کے لئے ••تین•• مختلف انکوڈنگ فارموں میں سب سے زیادہ واضح ہے۔ ورژن 3.0 کے بعد سے ، کوئی بھی پہلے سے تشکیل شدہ کردار جو پہلے سے موجود کرداروں کے مجموعہ کے تسلسل کے ذریعہ نمائندگی کیا جاسکتا ہے اب یونیکوڈ کے مختلف ورژن استعمال کرنے والے سافٹ ویئر کے مابین باہمی تعاون کو برقرار رکھنے کے لئے شامل نہیں کیا جاسکتا ہے۔,یونیکوڈ میں کتنے انکوڈنگ فارم ہیں؟,True,False
253,273,28,5acd55da07355d001abf3d9a,یونیکوڈ,یونیکوڈ کو کوڈ پوائنٹ بذریعہ کوڈ پوائنٹ راؤنڈ ٹرپ فارمیٹ تبادلوں کو کسی بھی پہلے سے موجود کردار انکوڈنگ سے اور اس سے فراہم کرنے کے لئے ڈیزائن کیا گیا تھا ، تاکہ پرانے کردار سیٹوں میں ٹیکسٹ فائلوں کو سادگی سے یونیکوڈ میں تبدیل کیا جاسکے ، اور پھر واپس اور اسی فائل کو واپس حاصل کیا جاسکے۔ اس کا مطلب یہ ہے کہ متضاد ورثہ فن تعمیرات ، جیسے ڈیاکریٹک اور پہلے سے تشکیل شدہ کرداروں کو جوڑنا ، دونوں یونیکوڈ میں موجود ہیں ، جس سے کچھ متن کی نمائندگی کا ایک سے زیادہ طریقہ ملتا ہے۔ یہ کوریائی ہنگول کے لئے تین مختلف انکوڈنگ فارموں میں سب سے زیادہ واضح ہے۔ ورژن ••3.0•• کے بعد سے ، کوئی بھی پہلے سے تشکیل شدہ کردار جو پہلے سے موجود کرداروں کے مجموعہ کے تسلسل کے ذریعہ نمائندگی کیا جاسکتا ہے اب یونیکوڈ کے مختلف ورژن استعمال کرنے والے سافٹ ویئر کے مابین باہمی تعاون کو برقرار رکھنے کے لئے شامل نہیں کیا جاسکتا ہے۔,کس ورژن کے بعد پہلے سے موجود حروف کو شامل کرنا ممکن ہو گیا؟,True,False
254,273,28,5acd55da07355d001abf3d9b,یونیکوڈ,یونیکوڈ کو کوڈ پوائنٹ بذریعہ کوڈ پوائنٹ راؤنڈ ٹرپ فارمیٹ تبادلوں کو کسی بھی پہلے سے موجود کردار انکوڈنگ سے اور اس سے فراہم کرنے کے لئے ڈیزائن کیا گیا تھا ، تاکہ پرانے کردار سیٹوں میں ٹیکسٹ فائلوں کو سادگی سے یونیکوڈ میں تبدیل کیا جاسکے ، اور پھر واپس اور اسی فائل کو واپس حاصل کیا جاسکے۔ اس کا مطلب یہ ہے کہ متضاد ورثہ فن تعمیرات ، جیسے ڈیاکریٹک اور پہلے سے تشکیل شدہ کرداروں کو جوڑنا ، دونوں یونیکوڈ میں موجود ہیں ، جس سے کچھ متن کی نمائندگی کا ایک سے زیادہ طریقہ ملتا ہے۔ یہ کوریائی ہنگول کے لئے تین مختلف انکوڈنگ فارموں میں سب سے زیادہ واضح ہے۔ ورژن 3.0 کے بعد سے ، یونیکوڈ کے مختلف ورژن استعمال کرنے والے سافٹ ویئر کے مابین باہمی تعاون کو برقرار رکھنے کے لئے کوئی بھی ••پہلے سے تشکیل شدہ کردار جو پہلے سے موجود کرداروں کے مجموعہ کے ذریعہ نمائندگی کیا جاسکتا ہے•• اب معیاری میں شامل نہیں کیا جاسکتا ہے۔,کس قسم کے حروف کو ورژن پوسٹ 3.0 میں شامل کیا جا سکتا ہے؟,True,False
255,273,28,5acd55da07355d001abf3d9c,یونیکوڈ,یونیکوڈ کو کوڈ پوائنٹ بذریعہ کوڈ پوائنٹ راؤنڈ ٹرپ فارمیٹ تبادلوں کو کسی بھی پہلے سے موجود کردار انکوڈنگ سے اور اس سے فراہم کرنے کے لئے ڈیزائن کیا گیا تھا ، تاکہ پرانے کردار سیٹوں میں ٹیکسٹ فائلوں کو سادگی سے یونیکوڈ میں تبدیل کیا جاسکے ، اور پھر واپس اور اسی فائل کو واپس حاصل کیا جاسکے۔ اس کا مطلب یہ ہے کہ متضاد ورثہ فن تعمیرات ، جیسے ڈایاکریٹک اور پہلے سے تشکیل شدہ کرداروں کو جوڑنا ، دونوں یونیکوڈ میں موجود ہیں ، جس سے کچھ متن کی نمائندگی کا ایک سے زیادہ طریقہ ملتا ہے۔ یہ کوریائی ہنگول کے لئے تین مختلف انکوڈنگ فارموں میں سب سے زیادہ واضح ہے۔ ورژن 3.0 کے بعد سے ، کوئی بھی پہلے سے تشکیل شدہ کردار جو پہلے سے موجود کرداروں کے مشترکہ تسلسل کے ذریعہ نمائندگی کیا جاسکتا ہے اب یونیکوڈ کے مختلف ورژن استعمال کرنے والے سافٹ ویئر کے مابین ••باہمی تعاون•• کو برقرار رکھنے کے لئے معیاری میں شامل نہیں کیا جاسکتا ہے۔,حروف شامل کرنے سے کیا محفوظ رکھنے میں مدد ملتی ہے؟,True,False
256,273,29,572816943acd2414000df433,یونیکوڈ,یونیکوڈ میں موجودہ ورثے کے کرداروں کے سیٹ اور کرداروں کے مابین ••انجیکٹو میپنگ•• فراہم کی جانی چاہئے تاکہ یونیکوڈ میں تبادلوں کو آسان بنایا جاسکے اور ورثے کے سافٹ ویئر کے ساتھ باہمی تعاون کی اجازت دی جاسکے۔ شفٹ جے آئی ایس یا ای یو سی جے پی اور یونیکوڈ جیسے سابقہ جاپانی انکوڈنگز کے مابین مختلف میپنگ میں مستقل مزاجی کی کمی نے راؤنڈ ٹرپ فارمیٹ تبادلوں کی عدم مطابقت کا باعث بنا ، خاص طور پر JIS X 0208 ' ⁇ ' (1-33 ، WAVE DASH) کے کردار کی میپنگ ، جو ورثے کے ڈیٹا بیس کے اعداد و شمار میں بہت زیادہ استعمال ہوتا ہے ، یا تو U+FF5E <unk> FULLWIDTH TILDE (مائیکروسافٹ ونڈوز میں) یا U+301C <unk> WAVE DASH (دیگر وینڈرز) ۔,موجودہ میراث حروف سیٹ میں حروف اور یونیکوڈ میں حروف کے درمیان کس قسم کی میپنگ فراہم کی جانی چاہئے؟,False,False
257,273,29,572816943acd2414000df434,یونیکوڈ,موجودہ ورثے کے کرداروں کے سیٹ اور یونیکوڈ میں کرداروں کے مابین انجیکٹیو میپنگ فراہم کی جانی چاہئے تاکہ یونیکوڈ میں تبادلوں کو آسان بنایا جاسکے اور ورثے کے سافٹ ویئر کے ساتھ باہمی تعاون کی اجازت دی جاسکے۔ سابقہ جاپانی انکوڈنگز جیسے ••شفٹ جے آئی ایس یا ای یو سی جے پی•• اور یونیکوڈ کے مابین مختلف میپنگ میں مستقل مزاجی کی کمی نے راؤنڈ ٹرپ فارمیٹ تبادلوں کی عدم مطابقت کا باعث بنا ، خاص طور پر JIS X 0208 ' ⁇ ' (1-33 ، WAVE DASH) کے کردار کی میپنگ ، جو ورثے کے ڈیٹا بیس کے اعداد و شمار میں بہت زیادہ استعمال ہوتا ہے ، یا تو U+FF5E <unk> FULLWTHID TILDE (مائیکروسافٹ ونڈوز میں) یا U+301C <unk> WAVE DASH (دیگر وینڈرز) ۔,کس پہلے جاپانی انکوڈنگ اور یونیکوڈ کے مابین مستقل مزاجی کی کمی کی وجہ سے عدم مطابقت پیدا ہوئی؟,False,False
258,273,29,572816943acd2414000df435,یونیکوڈ,موجودہ ورثے کے کرداروں کے سیٹ اور یونیکوڈ میں کرداروں کے مابین انجیکٹیو میپنگ فراہم کی جانی چاہئے تاکہ یونیکوڈ میں تبادلوں کو آسان بنایا جاسکے اور ورثے کے سافٹ ویئر کے ساتھ باہمی تعاون کی اجازت دی جاسکے۔ شفٹ جے آئی ایس یا ای یو سی جے پی اور یونیکوڈ جیسے سابقہ جاپانی انکوڈنگز کے مابین مختلف میپنگ میں مستقل مزاجی کی کمی نے راؤنڈ ٹرپ فارمیٹ تبادلوں کی عدم مطابقت کا باعث بنا ، خاص طور پر JIS X 0208 ' ⁇ ' (1-33 ، WAVE DASH) کے کردار کی میپنگ ، جو ورثے کے ڈیٹا بیس ڈیٹا میں بہت زیادہ استعمال ہوتا ہے ، یا تو ••U + FF5E•• <unk> FULLWIDTH TILDE (مائیکروسافٹ ونڈوز میں) یا U + 301C <unk> WAVE DASH (دوسرے وینڈرز) ۔,مائیکروسافٹ ونڈوز میں مکمل چوڑائی ٹیلڈ کردار کوڈ کیا ہے؟,False,False
259,273,29,5acd56b907355d001abf3db6,یونیکوڈ,یونیکوڈ میں موجودہ ورثے کے کرداروں کے سیٹ اور کرداروں کے مابین ••انجیکٹو میپنگ•• فراہم کی جانی چاہئے تاکہ یونیکوڈ میں تبادلوں کو آسان بنایا جاسکے اور ورثے کے سافٹ ویئر کے ساتھ باہمی تعاون کی اجازت دی جاسکے۔ شفٹ جے آئی ایس یا ای یو سی جے پی اور یونیکوڈ جیسے سابقہ جاپانی انکوڈنگز کے مابین مختلف میپنگ میں مستقل مزاجی کی کمی نے راؤنڈ ٹرپ فارمیٹ تبادلوں کی عدم مطابقت کا باعث بنا ، خاص طور پر JIS X 0208 ' ⁇ ' (1-33 ، WAVE DASH) کے کردار کی میپنگ ، جو ورثے کے ڈیٹا بیس کے اعداد و شمار میں بہت زیادہ استعمال ہوتا ہے ، یا تو U+FF5E <unk> FULLWIDTH TILDE (مائیکروسافٹ ونڈوز میں) یا U+301C <unk> WAVE DASH (دیگر وینڈرز) ۔,یونیکوڈ سے حروف کو تبدیل کرنے میں کیا مدد کرتا ہے؟,True,False
260,273,29,5acd56b907355d001abf3db7,یونیکوڈ,موجودہ ورثے کے کرداروں کے سیٹ اور یونیکوڈ میں کرداروں کے مابین انجیکٹیو میپنگ فراہم کی جانی چاہئے تاکہ یونیکوڈ میں تبادلوں کو آسان بنایا جاسکے اور ورثے کے سافٹ ویئر کے ساتھ باہمی تعاون کی اجازت دی جاسکے۔ سابقہ جاپانی انکوڈنگز جیسے شفٹ جے آئی ایس یا ای یو سی جے پی اور یونیکوڈ کے مابین مختلف میپنگ میں مستقل مزاجی کی کمی نے راؤنڈ ٹرپ فارمیٹ تبادلوں کی عدم مطابقت کا باعث بنا ، خاص طور پر JIS X 0208 ' ⁇ ' (1-33 ، WAVE DASH) کے کردار کی میپنگ ، جو ورثے کے ڈیٹا بیس کے اعداد و شمار میں بہت زیادہ استعمال ہوتا ہے ، یا تو U+FF5E <unk> FULLWIDTH TILDE (مائیکروسافٹ ونڈوز میں) یا U+301C <unk> WAVE DASH (دیگر وینڈرز) ۔,WAVE DASH صرف OS کے کس ورژن میں پایا جاتا ہے؟,True,True
261,273,29,5acd56b907355d001abf3db8,یونیکوڈ,موجودہ ورثے کے کرداروں کے سیٹ اور یونیکوڈ میں کرداروں کے مابین انجیکٹیو میپنگ فراہم کی جانی چاہئے تاکہ یونیکوڈ میں تبادلوں کو آسان بنایا جاسکے اور ورثے کے سافٹ ویئر کے ساتھ باہمی تعاون کی اجازت دی جاسکے۔ شفٹ جے آئی ایس یا ای یو سی جے پی اور یونیکوڈ جیسے سابقہ جاپانی انکوڈنگز کے مابین مختلف میپنگ میں مستقل مزاجی کی کمی نے راؤنڈ ٹرپ فارمیٹ تبادلوں کی عدم مطابقت کا باعث بنا ، خاص طور پر JIS X 0208 ' ⁇ ' (1-33 ، WAVE DASH) کے کردار کی میپنگ ، جو ورثے کے ڈیٹا بیس ڈیٹا میں بہت زیادہ استعمال ہوتا ہے ، یا تو ••U + FF5E•• <unk> FULLWIDTH TILDE (مائیکروسافٹ ونڈوز میں) یا U + 301C <unk> WAVE DASH (دوسرے وینڈرز) ۔,EUC-JP کے لئے ونڈوز کوڈ کیا ہے؟,True,False
262,273,29,5acd56b907355d001abf3db9,یونیکوڈ,موجودہ ورثے کے کرداروں کے سیٹ اور یونیکوڈ میں کرداروں کے مابین انجیکٹیو میپنگ فراہم کی جانی چاہئے تاکہ یونیکوڈ میں تبادلوں کو آسان بنایا جاسکے اور ورثے کے سافٹ ویئر کے ساتھ باہمی تعاون کی اجازت دی جاسکے۔ سابقہ جاپانی انکوڈنگز جیسے ••شفٹ جے آئی ایس یا ای یو سی جے پی•• اور یونیکوڈ کے مابین مختلف میپنگ میں مستقل مزاجی کی کمی نے راؤنڈ ٹرپ فارمیٹ تبادلوں کی عدم مطابقت کا باعث بنا ، خاص طور پر JIS X 0208 ' ⁇ ' (1-33 ، WAVE DASH) کے کردار کی میپنگ ، جو ورثے کے ڈیٹا بیس کے اعداد و شمار میں بہت زیادہ استعمال ہوتا ہے ، یا تو U+FF5E <unk> FULLWTHID TILDE (مائیکروسافٹ ونڈوز میں) یا U+301C <unk> WAVE DASH (دیگر وینڈرز) ۔,یونیکوڈ کی دو شکلوں کے نام کیا ہیں؟,True,False
263,273,29,5acd56b907355d001abf3dba,یونیکوڈ,موجودہ ورثے کے کرداروں کے سیٹ اور یونیکوڈ میں کرداروں کے مابین انجیکٹیو میپنگ فراہم کی جانی چاہئے تاکہ یونیکوڈ میں تبادلوں کو آسان بنایا جاسکے اور ورثے کے سافٹ ویئر کے ساتھ باہمی تعاون کی اجازت دی جاسکے۔ سابقہ جاپانی انکوڈنگز جیسے شفٹ جے آئی ایس یا ای یو سی جے پی اور یونیکوڈ کے مابین مختلف میپنگ میں مستقل مزاجی کی کمی نے ••راؤنڈ ٹرپ فارمیٹ تبادلوں کی عدم مطابقت•• کا باعث بنا ، خاص طور پر JIS X 0208 ' ⁇ ' (1-33 ، WAVE DASH) کے کردار کی میپنگ ، جو ورثے کے ڈیٹا بیس کے اعداد و شمار میں بہت زیادہ استعمال ہوتا ہے ، یا تو U+FF5E <unk> FULLWIDTH TILDE (مائیکروسافٹ ونڈوز میں) یا U+301C <unk> WAVE DASH (دیگر وینڈرز) ۔,مستقل مزاجی کی کمی کیا روکتی ہے؟,True,False
264,273,30,5728171b4b864d1900164452,یونیکوڈ,تامل اور دیواناگری جیسے انڈک اسکرپٹس کو ہر ایک کو صرف ••128•• کوڈ پوائنٹس مختص کیے جاتے ہیں ، جو ISCII معیار سے ملتے ہیں۔ یونیکوڈ انڈک متن کی صحیح رینڈرنگ کے لئے ذخیرہ شدہ منطقی ترتیب والے حروف کو بصری ترتیب میں تبدیل کرنے اور اجزاء سے لیگچر (یعنی کنجیکٹ) بنانے کی ضرورت ہے۔ کچھ مقامی اسکالرز نے ان لیگچر کے لئے یونیکوڈ کوڈ پوائنٹس کی تفویض کے حق میں استدلال کیا ، جو دوسرے تحریری نظاموں کے عمل کے خلاف ہے ، حالانکہ یونیکوڈ میں صرف پیچھے کی مطابقت کے مقاصد کے لئے کچھ عربی اور دیگر لیگچر شامل ہیں۔ یونیکوڈ میں کسی بھی نئے لیگچر کی انکوڈنگ نہیں ہوگی ، جزوی طور پر کیونکہ لیگچر کا سیٹ فونٹ پر منحصر ہے ، اور یونیکوڈ فونٹ کی مختلف حالتوں سے آزاد انکوڈنگ ہے۔ اسی طرح کا مسئلہ تبتی اسکریپ کے لئے پیدا ہوا [ حوالہ درکار ] (چینی نیشنل اسٹینڈرڈ تنظیم اسی طرح کی تبدیلی حاصل کرنے میں ناکام رہی) ۔,تمل اور دیواناگری کو کتنے کوڈ پوائنٹس مختص کیے گئے ہیں؟,False,False
265,273,30,5728171b4b864d1900164453,یونیکوڈ,تامل اور دیواناگری جیسے انڈک اسکرپٹس کو ہر ایک کو صرف 128 کوڈ پوائنٹس مختص کیے جاتے ہیں ، جو آئی ایس سی آئی معیاری سے ملتے ہیں۔ یونیکوڈ انڈک متن کی صحیح رینڈرنگ کے لئے ذخیرہ شدہ منطقی ترتیب والے حروف کو بصری ترتیب میں تبدیل کرنے اور اجزاء سے لیگچر (یعنی ••کنجیکٹ•• تشکیل دینے کی ضرورت ہے۔ کچھ مقامی اسکالرز نے ان لیگچر کے لئے یونیکوڈ کوڈ پوائنٹس کی تفویض کے حق میں استدلال کیا ، جو دوسرے تحریری نظام کے عمل کے خلاف ہے ، حالانکہ یونیکوڈ میں صرف پیچھے کی مطابقت کے مقاصد کے لئے کچھ عربی اور دیگر لیگچر شامل ہیں۔ یونیکوڈ میں کسی بھی نئے لیگچر کی انکوڈنگ نہیں ہوگی ، جزوی طور پر کیونکہ لیگچر کا سیٹ فونٹ پر منحصر ہے ، اور یونیکوڈ فونٹ کی مختلف حالتوں سے آزاد انکوڈنگ ہے۔ اسی طرح کا مسئلہ تبتی اسکریپ کے لئے پیدا ہوا [ حوالہ درکار] (چینی نیشنل اسٹینڈرڈ تنظیم اسی طرح کی تبدیلی حاصل کرنے میں ناکام رہی) ۔,ligatures کے لئے ایک اور لفظ کیا ہے؟,False,False
266,273,30,5728171b4b864d1900164454,یونیکوڈ,تامل اور دیواناگری جیسے انڈک اسکرپٹس کو ہر ایک کو صرف ••128 کوڈ پوائنٹس•• مختص کیے جاتے ہیں ، جو ISCII معیار سے ملتے ہیں۔ یونیکوڈ انڈک متن کی صحیح رینڈرنگ کے لئے ذخیرہ شدہ منطقی ترتیب والے حروف کو بصری ترتیب میں تبدیل کرنے اور اجزاء سے لیگچر (یعنی کنجیکٹ) بنانے کی ضرورت ہوتی ہے۔ کچھ مقامی اسکالرز نے ان لیگچر کے لئے یونیکوڈ کوڈ پوائنٹس کی تفویض کے حق میں استدلال کیا ، جو دوسرے لکھنے کے نظام کے عمل کے خلاف ہے ، حالانکہ یونیکوڈ میں صرف پیچھے کی مطابقت کے مقاصد کے لئے کچھ عربی اور دیگر لیگچر شامل ہیں۔ یونیکوڈ میں کسی بھی نئے لیگچر کی انکوڈنگ نہیں ہوگی ، جزوی طور پر کیونکہ لیگچر کا سیٹ فونٹ پر منحصر ہے ، اور یونیکوڈ فونٹ کی مختلف حالتوں سے آزاد انکوڈنگ ہے۔ اسی طرح کا مسئلہ تبتی اسکریپ کے لئے پیدا ہوا [ حوالہ کی ضرورت ہے ] (چینی نیشنل اسٹینڈرڈ تنظیم اسی طرح کی تبدیلی حاصل کرنے میں ناکام رہی) ۔,آئی ایس سی آئی آئی معیار کیا ہے؟,False,False
267,273,30,5acd579107355d001abf3dec,یونیکوڈ,تامل اور دیواناگری جیسے انڈک اسکرپٹس کو ہر ایک کو صرف ••128 کوڈ•• پوائنٹس مختص کیے جاتے ہیں ، جو ISCII معیار سے ملتے ہیں۔ یونیکوڈ انڈک متن کی صحیح رینڈرنگ کے لئے ذخیرہ شدہ منطقی ترتیب والے حروف کو بصری ترتیب میں تبدیل کرنے اور اجزاء سے لیگچر (یعنی کنجیکٹ) بنانے کی ضرورت ہوتی ہے۔ کچھ مقامی اسکالرز نے ان لیگچر کے لئے یونیکوڈ کوڈ پوائنٹس کی تفویض کے حق میں استدلال کیا ، جو دوسرے تحریری نظام کے عمل کے خلاف ہے ، حالانکہ یونیکوڈ میں صرف پیچھے کی مطابقت کے مقاصد کے لئے کچھ عربی اور دیگر لیگچر شامل ہیں۔ یونیکوڈ میں کسی بھی نئے لیگچر کا انکوڈنگ نہیں ہوگا ، جزوی طور پر کیونکہ لیگچر کا سیٹ فونٹ پر منحصر ہے ، اور یونیکوڈ فونٹ کی مختلف حالتوں سے آزاد انکوڈنگ ہے۔ اسی طرح کا مسئلہ تبتی اسکریپ کے لئے پیدا ہوا [ حوالہ درکار ] (چینی نیشنل اسٹینڈرڈ تنظیم اسی طرح کی تبدیلی حاصل کرنے میں ناکام رہی) ۔,عربی کو کتنے پوائنٹس دیے جاتے ہیں؟,True,False
268,273,30,5acd579107355d001abf3ded,یونیکوڈ,تامل اور دیواناگری جیسے انڈک اسکرپٹس کو ہر ایک کو صرف 128 کوڈ پوائنٹس مختص کیے جاتے ہیں ، جو ISCII معیار سے ملتے ہیں۔ یونیکوڈ انڈک متن کی صحیح رینڈرنگ کے لئے ذخیرہ شدہ منطقی ترتیب والے حروف کو بصری ترتیب میں تبدیل کرنے اور اجزاء سے لیگچر (یعنی کنجیکٹ) بنانے کی ضرورت ہوتی ہے۔ کچھ ••مقامی اسکالرز•• نے ان لیگچر کے لئے یونیکوڈ کوڈ پوائنٹس کی تفویض کے حق میں استدلال کیا ، جو دوسرے تحریری نظاموں کے عمل کے خلاف ہے ، حالانکہ یونیکوڈ میں صرف پیچھے کی مطابقت کے مقاصد کے لئے کچھ عربی اور دیگر لیگچر شامل ہیں۔ یونیکوڈ میں کسی بھی نئے لیگچر کی انکوڈنگ نہیں ہوگی ، جزوی طور پر کیونکہ لیگچر کا سیٹ فونٹ پر منحصر ہے ، اور یونیکوڈ فونٹ کی مختلف حالتوں سے آزاد انکوڈنگ ہے۔ اسی طرح کا مسئلہ تبتی اسکریپ کے لئے پیدا ہوا [ حوالہ کی ضرورت ہے ] (چینی نیشنل اسٹینڈرڈ تنظیم اسی طرح کی تبدیلی حاصل کرنے میں ناکام رہی) ۔,کس نے استدلال کیا کہ انڈک اسکرپٹس کو دیگر تحریری نظاموں کے عمل کی پیروی کرنی چاہئے؟,True,False
269,273,30,5acd579107355d001abf3dee,یونیکوڈ,تامل اور دیواناگری جیسے انڈک اسکرپٹس کو ہر ایک کو صرف 128 کوڈ پوائنٹس مختص کیے جاتے ہیں ، جو ISCII معیار سے ملتے ہیں۔ یونیکوڈ انڈک متن کی صحیح رینڈرنگ کے لئے ذخیرہ شدہ منطقی ترتیب والے حروف کو بصری ترتیب میں تبدیل کرنے اور اجزاء سے لیگچر (یعنی کنجیکٹ) بنانے کی ضرورت ہوتی ہے۔ کچھ مقامی اسکالرز نے ان لیگچر کے لئے یونیکوڈ کوڈ پوائنٹس کی تفویض کے حق میں استدلال کیا ، جو دوسرے تحریری نظاموں کے عمل کے خلاف ہے ، حالانکہ یونیکوڈ میں صرف پیچھے کی مطابقت کے مقاصد کے لئے کچھ عربی اور دیگر لیگچر شامل ہیں۔ یونیکوڈ میں کسی بھی نئے لیگچر کی انکوڈنگ نہیں ہوگی ، جزوی طور پر کیونکہ لیگچر کا سیٹ فونٹ پر منحصر ہے ، اور ••یونیکوڈ فونٹ تغیرات سے آزاد انکوڈنگ ہے۔•• اسی طرح کا مسئلہ تبتی اسکریپ کے لئے پیدا ہوا [ حوالہ درکار] (چینی نیشنل اسٹینڈرڈ تنظیم اسی طرح کی تبدیلی حاصل کرنے میں ناکام رہی) ۔,یونیکوڈ میں مزید پابندیاں کیوں ہونے کا امکان ہے؟,True,False
270,273,30,5acd579107355d001abf3def,یونیکوڈ,تامل اور دیواناگری جیسے انڈک اسکرپٹس کو ہر ایک کو صرف 128 کوڈ پوائنٹس مختص کیے جاتے ہیں ، جو ISCII معیار سے ملتے ہیں۔ یونیکوڈ انڈک متن کی صحیح رینڈرنگ کے لئے ذخیرہ شدہ منطقی ترتیب والے حروف کو بصری ترتیب میں تبدیل کرنے اور اجزاء سے لیگچر (یعنی کنجیکٹ) بنانے کی ضرورت ہوتی ہے۔ کچھ مقامی اسکالرز نے ان لیگچر کے لئے یونیکوڈ کوڈ پوائنٹس کی تفویض کے حق میں استدلال کیا ، جو دوسرے تحریری نظاموں کے عمل کے خلاف ہے ، حالانکہ یونیکوڈ میں صرف پیچھے کی مطابقت کے مقاصد کے لئے کچھ عربی اور دیگر لیگچر شامل ہیں۔ یونیکوڈ میں کسی بھی نئے لیگچر کی انکوڈنگ نہیں ہوگی ، جزوی طور پر کیونکہ لیگچر کا سیٹ فونٹ پر منحصر ہے ، اور یونیکوڈ فونٹ کی مختلف حالتوں سے آزاد انکوڈنگ ہے۔ اسی طرح کا مسئلہ تبتی اسکریپ کے لئے پیدا ہوا [ حوالہ کی ضرورت ہے ] ( ••قومی معیاری•• تنظیم اسی طرح کی تبدیلی حاصل کرنے میں ناکام رہی) ۔,کس تنظیم نے تبت کے رسم الخط کے لئے کامیابی کے ساتھ بحث کی؟,True,False
271,273,30,5acd579107355d001abf3df0,یونیکوڈ,تامل اور دیواناگری جیسے انڈک اسکرپٹس کو ہر ایک کو صرف 128 کوڈ پوائنٹس مختص کیے جاتے ہیں ، جو آئی ایس سی آئی معیاری سے ملتے ہیں۔ یونیکوڈ انڈک متن کی صحیح رینڈرنگ کے لئے ذخیرہ شدہ منطقی ترتیب والے حروف کو ••بصری ترتیب•• میں تبدیل کرنے اور اجزاء سے باہر لیگچر (یعنی کنجیکٹ) بنانے کی ضرورت ہوتی ہے۔ کچھ مقامی اسکالرز نے ان لیگچر کے لئے یونیکوڈ کوڈ پوائنٹس کی تفویض کے حق میں استدلال کیا ، جو دوسرے تحریری نظاموں کے عمل کے خلاف ہے ، حالانکہ یونیکوڈ میں صرف پیچھے کی مطابقت کے مقاصد کے لئے کچھ عربی اور دیگر لیگچر شامل ہیں۔ یونیکوڈ میں کسی بھی نئے لیگچر کا انکوڈنگ نہیں ہوگا ، جزوی طور پر کیونکہ لیگچر کا سیٹ فونٹ پر منحصر ہے ، اور یونیکوڈ فونٹ کی مختلف حالتوں سے آزاد انکوڈنگ ہے۔ اسی طرح کا مسئلہ تبتی اسکریپ کے لئے پیدا ہوا [ حوالہ کی ضرورت ہے ] (چینی نیشنل اسٹینڈرڈ تنظیم اسی طرح کی تبدیلی حاصل کرنے میں ناکام رہی) ۔,بصری ترتیب کس میں تبدیل ہو جاتی ہے؟,True,False
272,273,31,572817d93acd2414000df455,یونیکوڈ,تھائی حروف تہجی کی حمایت کو تھائی حروف کی ترتیب کے لئے تنقید کا نشانہ بنایا گیا ہے۔ پچھلے حروف تہجی کے بائیں طرف لکھے گئے صوتیوں کو صوتی ترتیب کے بجائے بصری ترتیب میں لکھا گیا ہے ، دوسرے انڈک اسکرپٹس کی یونیکوڈ نمائندگیوں کے برعکس۔ یہ پیچیدگی اس وجہ سے ہے کہ یونیکوڈ نے ••تھائی انڈسٹریل اسٹینڈرڈ 620•• کو وراثت میں لیا ہے ، جو اسی طرح کام کرتا تھا ، اور یہ وہ طریقہ تھا جس میں تھائی ہمیشہ کی بورڈ پر لکھا جاتا تھا۔ یہ ترتیب دینے کا مسئلہ یونیکوڈ collation کے عمل کو تھوڑا سا پیچیدہ کرتا ہے ، جس میں ٹیبل سرچ اپ کی ضرورت ہوتی ہے تاکہ تھائی حروف کو collation کے لئے دوبارہ ترتیب دیا جاسکے۔ یہاں تک کہ اگر یونیکوڈ نے بولی جانے والی ترتیب کے مطابق انکوڈنگ کو اپنایا ہو تو ، اب بھی الفاظ کو ڈکشنری میں collate کرنا پریشانی کا باعث بنے گا۔ مثال کے طور پر ، لفظ [ظاہر کرتا ہے] ایک حروف تہجی کے ساتھ کلسٹر انجام دیتا ہے (حرف تہجی کے لئے ایک فطری ترتیب کے ساتھ) ۔,یونیکوڈ نے تھائی زبان سے متعلق کس معیار کو وراثت میں حاصل کیا؟,False,False
273,273,31,572817d93acd2414000df456,یونیکوڈ,تھائی حروف تہجی کی حمایت کو ••تھائی حروف کی ترتیب•• کے لئے تنقید کا نشانہ بنایا گیا ہے۔ پچھلے حروف تہجی کے بائیں طرف لکھے گئے صوتیوں کو صوتی ترتیب کے بجائے بصری ترتیب میں لکھا گیا ہے ، دوسرے انڈک اسکرپٹس کی یونیکوڈ نمائندگیوں کے برعکس۔ یہ پیچیدگی یونیکوڈ کی وجہ سے ہے تھائی انڈسٹریل اسٹینڈرڈ 620 کو وراثت میں ملی ہے ، جو اسی طرح کام کرتا تھا ، اور یہ وہ طریقہ تھا جس میں تھائی ہمیشہ کی بورڈ پر لکھا جاتا تھا۔ یہ ترتیب دینے کا مسئلہ یونیکوڈ collation کے عمل کو تھوڑا سا پیچیدہ کرتا ہے ، جس میں ٹیبل سرچ اپس کی ضرورت ہوتی ہے تاکہ تھائی حروف کو collation کے لئے دوبارہ ترتیب دیا جاسکے۔ یہاں تک کہ اگر یونیکوڈ نے بولی ہوئی ترتیب کے مطابق انکوڈنگ کو اپنایا ہو تو ، پھر بھی الفاظ کو ڈکشنری ترتیب میں collate کرنا پریشانی کا باعث بنے گا۔ مثال کے طور پر ، لفظ [sa:] ایک حروف تہجی کے ساتھ کلسٹر انجام دیتا ہے (حرف تہجی کے لئے ایک فطری v کے ساتھ) ۔,تھائی حروف تہجی کی حمایت پر تنقید کیوں کی گئی ہے؟,False,False
274,273,31,572817d93acd2414000df457,یونیکوڈ,تھائی حروف تہجی کی حمایت کو اس کی ترتیب کے لئے تنقید کا نشانہ بنایا گیا ہے۔ ••تھائی حروف کی ترتیب کے لئے تھائی حروف کی حمایت کی گئی ہے۔ پچھلے حروف تہجی کے بائیں طرف لکھے گئے صوتی حروف تہجی صوتی ترتیب کے بجائے بصری ترتیب میں لکھے گئے ہیں۔•• دیگر انڈک اسکرپٹس کی یونیکوڈ نمائندگیوں کے برعکس ، اس پیچیدگی کی وجہ یہ ہے کہ یونیکوڈ نے تھائی انڈسٹریل اسٹینڈرڈ 620 کو وراثت میں لیا ہے ، جو اسی طرح کام کرتا تھا ، اور یہ وہ طریقہ تھا جس میں تھائی ہمیشہ کی بورڈ پر لکھا جاتا تھا۔ یہ ترتیب دینے کا مسئلہ یونیکوڈ collation عمل کو تھوڑا سا پیچیدہ کرتا ہے ، جس میں ٹیبل سرچ اپ کی ضرورت ہوتی ہے تاکہ تھائی حروف کو collation کے لئے دوبارہ ترتیب دیا جاسکے۔ یہاں تک کہ اگر یونیکوڈ نے بولی جانے والی ترتیب کے مطابق انکوڈنگ کو اپنایا ہو تو ، پھر بھی لغت میں الفاظ کو مرتب کرنا پریشانی کا باعث ہوگا۔ مثال کے طور پر ، لفظ [d] دکھاتا ہے] ایک حروف تہجی کے ساتھ کلسٹر (حرف تہجی کے لئے ایک فطری ترتیب کے ساتھ) ، لفظ کے بعد آتا ہے۔,تھائی حروف کو غلط ترتیب کیسے دی گئی ہے؟,False,False
275,273,31,5acd58ac07355d001abf3e14,یونیکوڈ,تھائی حروف تہجی کی حمایت کو تھائی حروف کی ترتیب کے لئے تنقید کا نشانہ بنایا گیا ہے۔ سابقہ حروف تہجی کے بائیں طرف لکھے جانے والے صوتیوں کو ••صوتی ترتیب•• کے بجائے بصری ترتیب میں لکھا گیا ہے۔ اس پیچیدگی کی وجہ یہ ہے کہ یونیکوڈ نے تھائی انڈسٹریل اسٹینڈرڈ 620 کو وراثت میں لیا ہے ، جو اسی طرح کام کرتا تھا ، اور یہ وہ طریقہ تھا جس میں تھائی ہمیشہ کی بورڈ پر لکھا جاتا تھا۔ یہ ترتیب دینے کا مسئلہ یونیکوڈ کالیشن کے عمل کو تھوڑا سا پیچیدہ کرتا ہے ، جس میں ٹیبل سرچ اپ کو کالیشن کے لئے تھائی حروف کو دوبارہ ترتیب دینے کی ضرورت ہوتی ہے۔ یہاں تک کہ اگر یونیکوڈ نے بولی جانے والی ترتیب کے مطابق انکوڈنگ کو اپنایا ہو تو ، اب بھی الفاظ کو لغت کی ترتیب میں مرتب کرنا پریشانی کا باعث بنے گا۔ مثال کے طور پر ، لفظ [dɛːsaɛ] کلسٹر ایک حروف تہجی کے ساتھ شروع ہوتا ہے (حرف تہجی کے لئے ایک فطری حروف تہجی کے ساتھ) ۔,تھائی حروف دوسرے یونیکوڈ اسکرپٹس کی طرح کیسے لکھے جاتے ہیں؟,True,False
276,273,31,5acd58ac07355d001abf3e15,یونیکوڈ,تھائی حروف تہجی کی حمایت کو تھائی حروف کی ترتیب کے لئے تنقید کا نشانہ بنایا گیا ہے۔ پچھلے حروف تہجی کے بائیں طرف لکھے گئے صوتیوں کو صوتی ترتیب کے بجائے بصری ترتیب میں لکھا گیا ہے ، دوسرے انڈک اسکرپٹس کی یونیکوڈ نمائندگیوں کے برعکس۔ یہ پیچیدگی اس وجہ سے ہے کہ یونیکوڈ نے ••تھائی انڈسٹریل اسٹینڈرڈ 620•• کو وراثت میں لیا ہے ، جو اسی طرح کام کرتا تھا ، اور یہ وہ طریقہ تھا جس میں تھائی ہمیشہ کی بورڈ پر لکھا جاتا تھا۔ یہ ترتیب دینے کا مسئلہ یونیکوڈ collation کے عمل کو تھوڑا سا پیچیدہ کرتا ہے ، جس میں ٹیبل سرچ اپ کی ضرورت ہوتی ہے تاکہ تھائی حروف کو collation کے لئے دوبارہ ترتیب دیا جاسکے۔ یہاں تک کہ اگر یونیکوڈ نے بولی جانے والی ترتیب کے مطابق انکوڈنگ کو اپنایا ہو تو ، اب بھی الفاظ کو ڈکشنری میں collate کرنا پریشانی کا باعث بنے گا۔ مثال کے طور پر ، لفظ [ظاہر کرتا ہے] ایک حروف تہجی کے ساتھ کلسٹر انجام دیتا ہے (حرف تہجی کے لئے ایک فطری ترتیب کے ساتھ) ۔,یونیکوڈ نے تھائی زبان کے لیے کیا معیار تخلیق کیا؟,True,False
277,273,31,5acd58ac07355d001abf3e16,یونیکوڈ,••تھائی حروف تہجی کی حمایت•• کو تھائی حروف کی ترتیب کے لئے تنقید کا نشانہ بنایا گیا ہے۔ پچھلے حروف تہجی کے بائیں طرف لکھے گئے صوتیوں کو صوتی ترتیب کے بجائے بصری ترتیب میں لکھا گیا ہے۔ یہ پیچیدگی اس وجہ سے ہے کہ یونیکوڈ نے تھائی انڈسٹریل اسٹینڈرڈ 620 کو وراثت میں لیا ہے ، جو اسی طرح کام کرتا تھا ، اور یہ وہ طریقہ تھا جس میں تھائی ہمیشہ کی بورڈ پر لکھا جاتا تھا۔ یہ ترتیب دینے کا مسئلہ یونیکوڈ کی درجہ بندی کے عمل کو تھوڑا سا پیچیدہ کرتا ہے ، جس میں درجہ بندی کے لئے تھائی حروف کو دوبارہ ترتیب دینے کے لئے ٹیبل سرچ اپ کی ضرورت ہوتی ہے۔ یہاں تک کہ اگر یونیکوڈ نے بولی جانے والی ترتیب کے مطابق انکوڈنگ کو اپنایا ہوتا ، تو پھر بھی الفاظ کو لغت میں مرتب کرنا پریشانی کا باعث ہوگا۔ مثال کے طور پر ، لفظ [sa] ایک حروف تہجی کے ساتھ کلسٹر انجام دیتا ہے (حرف تہجی کے لئے ایک فطری ترتیب کے ساتھ) ۔,تھائی حروف کی ترتیب پر کس نے تنقید کی؟,True,False
278,273,31,5acd58ac07355d001abf3e17,یونیکوڈ,تھائی حروف تہجی کی حمایت کو تھائی حروف کی ترتیب کے لئے تنقید کا نشانہ بنایا گیا ہے۔ پچھلے حروف تہجی کے بائیں طرف لکھے گئے صوتیوں کو صوتی ترتیب کے بجائے بصری ترتیب میں لکھا گیا ہے ، دوسرے انڈک اسکرپٹس کی یونیکوڈ نمائندگیوں کے برعکس۔ یہ پیچیدگی اس وجہ سے ہے کہ یونیکوڈ نے تھائی انڈسٹریل اسٹینڈرڈ 620 کو وراثت میں لیا ہے ، جو اسی طرح کام کرتا تھا ، اور یہ وہ طریقہ تھا جس میں تھائی ہمیشہ ••کی بورڈ•• پر لکھا جاتا تھا۔ یہ ترتیب دینے کا مسئلہ یونیکوڈ collation کے عمل کو تھوڑا سا پیچیدہ کرتا ہے ، جس میں ٹیبل سرچ اپ کی ضرورت ہوتی ہے تاکہ تھائی حروف کو collation کے لئے دوبارہ ترتیب دیا جاسکے۔ یہاں تک کہ اگر یونیکوڈ نے بولی جانے والی ترتیب کے مطابق انکوڈنگ کو اپنایا ہو تو ، پھر بھی الفاظ کو ڈکشنری میں collate کرنا پریشانی کا باعث بنے گا۔ مثال کے طور پر ، لفظ [ظاہر کرتا ہے] ایک حروف تہجی کے ساتھ کلسٹر انجام دیتا ہے (حرف تہجی کے لئے ایک فطری v کے ساتھ) ۔,کس قسم کی مشین پر تھائی صنعتی معیار 620 لاگو نہیں کیا گیا تھا؟,True,False
279,273,31,5acd58ac07355d001abf3e18,یونیکوڈ,"تھائی حروف تہجی کی حمایت کو تھائی حروف کی ترتیب کے لئے تنقید کا نشانہ بنایا گیا ہے۔ ""پچھلے حروف تہجی کے بائیں طرف لکھے گئے صوتیوں کو صوتی ترتیب کے بجائے بصری ترتیب میں لکھا گیا ہے ، دوسرے انڈک اسکرپٹ کی یونیکوڈ نمائندگیوں کے برعکس۔ یہ پیچیدگی یونیکوڈ کی وجہ سے ہے تھائی انڈسٹریل اسٹینڈرڈ 620 کو وراثت میں لیا گیا ہے ، جو اسی طرح کام کرتا تھا ، اور یہ وہ طریقہ تھا جس میں تھائی ہمیشہ کی بورڈ پر لکھا جاتا تھا۔ یہ ترتیب دینے کا مسئلہ یونیکوڈ collation کے عمل کو تھوڑا سا پیچیدہ کرتا ہے ، جس میں ٹیبل سرچ اپ کی ضرورت ہوتی ہے تاکہ تھائی حروف کو collation کے لئے دوبارہ ترتیب دیا جاسکے۔ یہاں تک کہ اگر یونیکوڈ نے بولی جانے والی ترتیب کے مطابق انکوڈنگ کو اپنایا ہو تو ، پھر بھی لغت میں الفاظ کو مرتب کرنا پریشانی کا باعث ہوگا۔ مثال کے طور پر ، لفظ [d] دکھاتا ہے] ایک حروف تہجی کے ساتھ کلسٹر انجام دیتا ہے (حرف تہجی کے لئے ایک فطری v کے ساتھ) ۔",پچھلے ہم آواز کے دائیں طرف کیا لکھا جاتا ہے؟,True,True
280,273,32,572818e3ff5b5019007d9d30,یونیکوڈ,ڈیاکریٹک نشانات والے حروف کو عام طور پر ••یا تو ایک واحد پہلے سے تشکیل شدہ کردار کے طور پر یا ایک یا ایک سے زیادہ غیر اسپیسنگ نشانات کے ساتھ ایک بنیادی حرف کے تجزیہ شدہ تسلسل کے طور پر•• نمائندگی کی جاسکتی ہے۔ مثال کے طور پر ، <unk> (پہلے سے تشکیل شدہ ای کے ساتھ میکرو اور تیز اوپر) اور <unk> (ای کے بعد اوپر مشترکہ میکرو اور مشترکہ تیز اوپر) کو یکساں طور پر پیش کیا جانا چاہئے ، دونوں ایک میکرو اور تیز تلفظ کے ساتھ ای کے طور پر ظاہر ہوتے ہیں ، لیکن عملی طور پر ، ان کی ظاہری شکل اس بات پر منحصر ہوسکتی ہے کہ حروف کو ظاہر کرنے کے لئے کون سا رینڈرنگ انجن اور فونٹ استعمال کیا جارہا ہے۔ اسی طرح ، انڈک کے رومنائزیشن میں ضرورت کے مطابق ، اکثر غلط طریقے سے رکھا جائے گا۔ یونیکوڈ حروف جو پہلے سے تشکیل شدہ گلیفس کو میپ کرتے ہیں وہ بہت سے معاملات میں استعمال ہوسکتے ہیں ، اس طرح اس مسئلے سے بچنے کے لئے ، لیکن جہاں کوئی پہلے سے تشکیل شدہ حروف استعمال نہیں کیا گیا ہے۔ یہ مسئلہ یونیکوڈ ٹائپ ٹائپ کا استعمال کرتے ہوئے حل کیا جاسکتا ہے۔,ڈیاکریٹک نشانات والے حروف کی نمائندگی کیسے کی جاتی ہے؟,False,False
281,273,32,572818e3ff5b5019007d9d31,یونیکوڈ,ڈیاکریٹک نشانات والے حروف کو عام طور پر یا تو ایک پہلے سے تشکیل شدہ حرف کے طور پر یا ایک یا ایک سے زیادہ غیر اسپیسنگ نشانات کے ساتھ ایک بنیادی حرف کے تجزیہ شدہ تسلسل کے طور پر نمائندگی کی جاسکتی ہے۔ اسی طرح ، انڈک کے رومنائزیشن میں ضرورت کے مطابق ، انڈر ڈاٹس کو اکثر غلط طریقے سے رکھا جائے گا۔ یونیکوڈ حروف جو پہلے سے تشکیل شدہ گلیفوں کو میپ کرتے ہیں وہ بہت سے معاملات میں استعمال ہوسکتے ہیں ، اس طرح اس مسئلے سے بچنے کے لئے ، لیکن جہاں کوئی پہلے سے تشکیل شدہ حروف کو استعمال کرتے ہوئے کوڈ نہیں کیا گیا ہے۔ یہ مسئلہ ایک ماہر کے ذریعہ حل کیا جاسکتا ہے جیسے ••ٹائپ ٹائپنگ انجن اور فونٹ جو حروف کو ظاہر کرنے کے لئے استعمال کیا جارہا ہے۔••,چارس ایس آئی ایل کس انکوڈنگ کا استعمال کرتا ہے؟,False,False
282,273,32,572818e3ff5b5019007d9d32,یونیکوڈ,ڈیاکریٹک نشانات والے حروف کو عام طور پر یا تو ایک پہلے سے تشکیل شدہ حرف کے طور پر یا ایک یا ایک سے زیادہ غیر اسپیسنگ نشانات کے ساتھ ایک بنیادی حرف کے تجزیہ شدہ تسلسل کے طور پر نمائندگی کی جاسکتی ہے۔ مثال کے طور پر ، <unk> (مکروئن اور تیز کے ساتھ پہلے سے تشکیل شدہ ای کے ساتھ) اور <unk> (مکروئن اور تیز کے ساتھ مشترکہ ای کے بعد) کو یکساں طور پر پیش کیا جانا چاہئے ، دونوں ایک میکروئن اور تیز تلفظ کے ساتھ ای کے طور پر ظاہر ہوتے ہیں ، لیکن عملی طور پر ، ان کی ظاہری شکل اس بات پر منحصر ہوسکتی ہے کہ حروف کو ظاہر کرنے کے لئے کون سا رینڈرنگ انجن اور فونٹ استعمال کیا جارہا ہے۔ اسی طرح ، انڈک کے رومنائزیشن میں ضرورت کے مطابق ، ••اکثر غلط طور پر رکھا جائے گا••۔ یونیکوڈ حروف جو پہلے سے تشکیل شدہ گلیفس کے لئے استعمال ہوسکتے ہیں بہت سے معاملات میں استعمال ہوسکتے ہیں ، اس طرح اس مسئلے سے بچنے کے لئے ، لیکن جہاں کوئی پہلے سے تشکیل شدہ حروف کو انکوڈ نہیں کیا گیا ہے۔ یہ مسئلہ ایک ماہر کی طرف سے حل کیا جاسکتا ہے جیسے کہ یونیکوڈ گراف ٹائپنگ کے لئے اعلی درجے کی ٹیکنالوجیز استعمال کرتا ہے۔,انڈر ڈاٹس اور ان کی جگہ کے ساتھ مسئلہ کیا ہے؟,False,False
283,273,32,572818e3ff5b5019007d9d33,یونیکوڈ,••ڈیاکریٹک نشانات•• والے حروف کو عام طور پر یا تو ایک پہلے سے تشکیل شدہ حرف کے طور پر یا ایک یا ایک سے زیادہ غیر اسپیسنگ نشانات کے ساتھ ایک بنیادی حرف کے تجزیہ شدہ تسلسل کے طور پر نمائندگی کی جاسکتی ہے۔ اسی طرح ، انڈک کے رومنائزیشن میں درکار انڈر ڈاٹس کو اکثر غلط طریقے سے رکھا جائے گا۔ یونیکوڈ حروف جو پہلے سے تشکیل شدہ گلیفوں پر نقشہ بناتے ہیں وہ بہت سے معاملات میں استعمال ہوسکتے ہیں ، اس طرح اس مسئلے سے بچنے کے لئے ، لیکن جہاں کوئی پہلے سے تشکیل شدہ حروف کو میکروئن اور شدید تلفظ کے ساتھ ای کے طور پر ظاہر نہیں کیا گیا ہے ، لیکن عملی طور پر ، ان کی ظاہری شکل اس بات پر منحصر ہوسکتی ہے کہ حروف کو ظاہر کرنے کے لئے کون سا رینڈرنگ انجن اور فونٹ استعمال کیا جارہا ہے۔ اسی طرح ، انڈک کے رومنائزیشن میں اکثر غلط طور پر رکھا جائے گا۔,کس نشان کے ساتھ حروف ایک واحد حروف یا ایک تحلیل ترتیب کے طور پر دکھایا جا سکتا ہے؟,False,False
284,273,32,572818e3ff5b5019007d9d34,یونیکوڈ,ڈیاکریٹک نشانات والے حروف کو عام طور پر یا تو ایک ہی پہلے سے تشکیل شدہ کردار کے طور پر یا ایک یا ایک سے زیادہ غیر اسپیسنگ نشانات کے ساتھ ایک بیس خط کے تجزیہ شدہ تسلسل کے طور پر نمائندگی کی جاسکتی ہے۔ اسی طرح ، انڈک کے رومنائزیشن میں درکار انڈر ڈاٹس کو اکثر غلط طریقے سے رکھا جائے گا۔ یونیکوڈ حروف جو پہلے سے تشکیل شدہ گلیفوں کو میپ کرتے ہیں وہ بہت سے معاملات میں استعمال ہوسکتے ہیں ، اس طرح اس مسئلے سے بچنے کے لئے ، لیکن جہاں کوئی پہلے سے تشکیل شدہ کردار کو انکوڈ نہیں کیا گیا ہے جہاں مسئلہ کو ایک ماہر فونٹ ٹائپ کے ذریعہ حل کیا جاسکتا ہے جیسے کہ یونیکوڈ اوپن ٹائپ ، AIL یا SIL استعمال کرتا ہے۔,میکرون اور تیز کے ساتھ حروف کو کس طرح دکھایا جانا چاہئے؟,False,True
285,273,32,5acd59fb07355d001abf3e58,یونیکوڈ,ڈیاکریٹک نشانات والے حروف کو عام طور پر یا تو ایک ہی پہلے سے تشکیل شدہ کردار کے طور پر یا ایک بیس خط کے علاوہ ••ایک•• یا اس سے زیادہ غیر اسپیسنگ نشانات کے طور پر تحلیل شدہ ترتیب کے طور پر نمائندگی کی جاسکتی ہے۔ اسی طرح ، انڈک کے رومنائزیشن میں درکار انڈر ڈاٹس کو اکثر غلط طریقے سے رکھا جائے گا۔ یونیکوڈ حروف جو پہلے سے تشکیل شدہ گلیفوں پر نقشہ بناتے ہیں وہ بہت سے معاملات میں استعمال ہوسکتے ہیں ، اس طرح اس مسئلے سے بچنے کے لئے ، لیکن جہاں کوئی پہلے سے تشکیل شدہ کردار نہیں کیا گیا ہے جہاں یونیکوڈ ٹائپ کا استعمال کرتے ہوئے اس مسئلے کو حل کیا جاسکتا ہے جیسے کہ ایک ماہر ماہر جیسے SIL ، AIT یا اوپن گراف ٹائپ استعمال کرتا ہے۔,غیر اسپیسنگ نشانوں کی زیادہ سے زیادہ تعداد کیا ہے؟,True,False
286,273,32,5acd59fb07355d001abf3e59,یونیکوڈ,ڈیاکریٹک نشانات والے حروف کو عام طور پر یا تو ایک پہلے سے تشکیل شدہ حرف کے طور پر یا ایک یا ایک سے زیادہ غیر اسپیسنگ نشانات کے ساتھ ایک بنیادی حرف کے تجزیہ شدہ تسلسل کے طور پر نمائندگی کی جاسکتی ہے۔ مثال کے طور پر ، <unk> (مکروئن اور تیز کے ساتھ پہلے سے تشکیل شدہ ای کے ساتھ) اور <unk> (مکروئن اور تیز کے ساتھ مشترکہ ای کے بعد) کو یکساں طور پر پیش کیا جانا چاہئے ، دونوں ایک میکروئن اور تیز تلفظ کے ساتھ ای کے طور پر ظاہر ہوتے ہیں ، لیکن عملی طور پر ، ان کی ظاہری شکل اس بات پر منحصر ہوسکتی ہے کہ حروف کو ظاہر کرنے کے لئے کون سا رینڈرنگ انجن اور فونٹ استعمال کیا جارہا ہے۔ اسی طرح ، انڈک کے رومنائزیشن میں ••انڈر ڈاٹ•• کو اکثر غلط طریقے سے رکھا جائے گا۔ یونیکوڈ حروف جو پہلے سے تشکیل شدہ گلیفس کو میپ کرتے ہیں وہ بہت سے معاملات میں استعمال ہوسکتے ہیں ، اس طرح اس مسئلے سے بچنے کے لئے ، لیکن جہاں کوئی پہلے سے تشکیل شدہ کردار کو انکوڈ نہیں کیا گیا ہے۔ مسئلہ ایک ماہر کی طرف سے حل کیا جاسکتا ہے جیسے کہ یونیکوڈ گراف ٹائپ ، SIL ، A یا اوپن ٹائپ استعمال کرتا ہے۔,کون سا رومنائزیشن نشان شاذ و نادر ہی بصری طور پر غلط ہوتا ہے؟,True,False
287,273,32,5acd59fb07355d001abf3e5a,یونیکوڈ,ڈیاکریٹک نشانات والے حروف کو عام طور پر یا تو ایک پہلے سے تشکیل شدہ حرف کے طور پر یا ایک یا ایک سے زیادہ غیر اسپیسنگ نشانات کے ساتھ ایک بنیادی حرف کے تجزیہ شدہ تسلسل کے طور پر نمائندگی کی جاسکتی ہے۔ اسی طرح ، انڈک کے رومنائزیشن میں درکار انڈر ڈاٹس کو اکثر غلط طریقے سے رکھا جائے گا۔ یونیکوڈ حروف جو پہلے سے تشکیل شدہ گلیفوں میں میپ کرتے ہیں وہ بہت سے معاملات میں استعمال ہوسکتے ہیں ، اس طرح اس مسئلے سے بچنے کے ل but ، لیکن جہاں کوئی پہلے سے تشکیل شدہ کردار استعمال نہیں کیا گیا ہے تو اس مسئلے کو ایک ماہر ••ٹائپ ٹائپ ٹائپ•• کے ذریعہ حل کیا جاسکتا ہے جیسے کہ یونیکوڈ اوپن گرافٹ ، AIL یا یونیکوڈ انکوڈنگ کے لئے اعلی درجے کی ٹیکنالوجیز کا استعمال کرتا ہے۔,اوپن ٹائپ استعمال کرنے والی رینڈرنگ ٹیکنالوجی کا نام کیا ہے؟,True,False
288,273,32,5acd59fb07355d001abf3e5b,یونیکوڈ,••ڈیاکریٹک نشانات والے حروف•• کو عام طور پر یا تو ایک پہلے سے تشکیل شدہ حرف کے طور پر یا ایک یا ایک سے زیادہ غیر اسپیسنگ نشانات کے ساتھ ایک بنیادی حرف کے تجزیہ شدہ تسلسل کے طور پر نمائندگی کی جاسکتی ہے۔ اسی طرح ، انڈک کے رومنائزیشن میں درکار انڈر ڈاٹس کو اکثر غلط طریقے سے رکھا جائے گا۔ یونیکوڈ حروف جو پہلے سے تشکیل شدہ گلیفوں کو میپ کرتے ہیں وہ بہت سے معاملات میں استعمال ہوسکتے ہیں ، اس طرح اس مسئلے سے بچنے کے لئے ، لیکن جہاں کوئی پہلے سے تشکیل شدہ حروف کو میکروئن اور شدید تلفظ کے ساتھ ای کے طور پر ظاہر نہیں کیا گیا ہے ، لیکن عملی طور پر ، ان کی ظاہری شکل اس بات پر منحصر ہوسکتی ہے کہ حروف کو ظاہر کرنے کے لئے کون سا رینڈرنگ انجن اور فونٹ استعمال کیا جارہا ہے۔ اسی طرح ، انڈک کے رومنائزیشن میں اکثر غلط طور پر رکھا جائے گا۔,عملی طور پر کیا یکساں طور پر پیش کیا جاتا ہے؟,True,False
289,273,32,5acd59fb07355d001abf3e5c,یونیکوڈ,ڈیاکریٹک نشانات والے حروف کو عام طور پر یا تو ایک پہلے سے تشکیل شدہ حرف کے طور پر یا ایک یا ایک سے زیادہ غیر اسپیسنگ نشانات کے ساتھ ایک بنیادی حرف کے تجزیہ شدہ تسلسل کے طور پر نمائندگی کی جاسکتی ہے۔ اسی طرح ، انڈک کے ••رومانائزیشن•• میں درکار انڈر ڈاٹس کو اکثر غلط طریقے سے رکھا جائے گا۔ یونیکوڈ حروف جو پہلے سے تشکیل شدہ گلیفوں میں میپ کرتے ہیں وہ بہت سے معاملات میں استعمال ہوسکتے ہیں ، اس طرح فونٹ سے بچنے کے ل but ، لیکن جہاں کوئی پری کمپوزڈ نہیں کیا گیا ہے ، اس مسئلے کو ایک ماہر کے ذریعہ حل کیا جاسکتا ہے جیسے کہ یونیکوڈ انکوڈنگ انجن اور فونٹس کو ظاہر کرنے کے لئے کیا استعمال کیا جارہا ہے۔,میکروں کا استعمال صرف آئیڈک کی کس شکل میں کیا جاتا ہے؟,True,False
